{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Dev%20Directory/Blueprints/blueprintfro-v1/src/components/ui/dialog.jsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\r\nimport { XIcon } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Dialog({\r\n  ...props\r\n}) {\r\n  return <DialogPrimitive.Root data-slot=\"dialog\" {...props} />;\r\n}\r\n\r\nfunction DialogTrigger({\r\n  ...props\r\n}) {\r\n  return <DialogPrimitive.Trigger data-slot=\"dialog-trigger\" {...props} />;\r\n}\r\n\r\nfunction DialogPortal({\r\n  ...props\r\n}) {\r\n  return <DialogPrimitive.Portal data-slot=\"dialog-portal\" {...props} />;\r\n}\r\n\r\nfunction DialogClose({\r\n  ...props\r\n}) {\r\n  return <DialogPrimitive.Close data-slot=\"dialog-close\" {...props} />;\r\n}\r\n\r\nfunction DialogOverlay({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    <DialogPrimitive.Overlay\r\n      data-slot=\"dialog-overlay\"\r\n      className={cn(\r\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50\",\r\n        className\r\n      )}\r\n      {...props} />\r\n  );\r\n}\r\n\r\nfunction DialogContent({\r\n  className,\r\n  children,\r\n  showCloseButton = true,\r\n  ...props\r\n}) {\r\n  return (\r\n    <DialogPortal data-slot=\"dialog-portal\">\r\n      <DialogOverlay />\r\n      <DialogPrimitive.Content\r\n        data-slot=\"dialog-content\"\r\n        className={cn(\r\n          \"bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg\",\r\n          className\r\n        )}\r\n        {...props}>\r\n        {children}\r\n        {showCloseButton && (\r\n          <DialogPrimitive.Close\r\n            data-slot=\"dialog-close\"\r\n            className=\"ring-offset-background focus:ring-ring data-[state=open]:bg-accent data-[state=open]:text-muted-foreground absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\">\r\n            <XIcon />\r\n            <span className=\"sr-only\">Close</span>\r\n          </DialogPrimitive.Close>\r\n        )}\r\n      </DialogPrimitive.Content>\r\n    </DialogPortal>\r\n  );\r\n}\r\n\r\nfunction DialogHeader({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    <div\r\n      data-slot=\"dialog-header\"\r\n      className={cn(\"flex flex-col gap-2 text-center sm:text-left\", className)}\r\n      {...props} />\r\n  );\r\n}\r\n\r\nfunction DialogFooter({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    <div\r\n      data-slot=\"dialog-footer\"\r\n      className={cn(\"flex flex-col-reverse gap-2 sm:flex-row sm:justify-end\", className)}\r\n      {...props} />\r\n  );\r\n}\r\n\r\nfunction DialogTitle({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    <DialogPrimitive.Title\r\n      data-slot=\"dialog-title\"\r\n      className={cn(\"text-lg leading-none font-semibold\", className)}\r\n      {...props} />\r\n  );\r\n}\r\n\r\nfunction DialogDescription({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    <DialogPrimitive.Description\r\n      data-slot=\"dialog-description\"\r\n      className={cn(\"text-muted-foreground text-sm\", className)}\r\n      {...props} />\r\n  );\r\n}\r\n\r\nexport {\r\n  Dialog,\r\n  DialogClose,\r\n  DialogContent,\r\n  DialogDescription,\r\n  DialogFooter,\r\n  DialogHeader,\r\n  DialogOverlay,\r\n  DialogPortal,\r\n  DialogTitle,\r\n  DialogTrigger,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,SAAS,OAAO,EACd,GAAG,OACJ;IACC,qBAAO,8OAAC,kKAAA,CAAA,OAAoB;QAAC,aAAU;QAAU,GAAG,KAAK;;;;;;AAC3D;AAEA,SAAS,cAAc,EACrB,GAAG,OACJ;IACC,qBAAO,8OAAC,kKAAA,CAAA,UAAuB;QAAC,aAAU;QAAkB,GAAG,KAAK;;;;;;AACtE;AAEA,SAAS,aAAa,EACpB,GAAG,OACJ;IACC,qBAAO,8OAAC,kKAAA,CAAA,SAAsB;QAAC,aAAU;QAAiB,GAAG,KAAK;;;;;;AACpE;AAEA,SAAS,YAAY,EACnB,GAAG,OACJ;IACC,qBAAO,8OAAC,kKAAA,CAAA,QAAqB;QAAC,aAAU;QAAgB,GAAG,KAAK;;;;;;AAClE;AAEA,SAAS,cAAc,EACrB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,8OAAC,kKAAA,CAAA,UAAuB;QACtB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;AAEf;AAEA,SAAS,cAAc,EACrB,SAAS,EACT,QAAQ,EACR,kBAAkB,IAAI,EACtB,GAAG,OACJ;IACC,qBACE,8OAAC;QAAa,aAAU;;0BACtB,8OAAC;;;;;0BACD,8OAAC,kKAAA,CAAA,UAAuB;gBACtB,aAAU;gBACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+WACA;gBAED,GAAG,KAAK;;oBACR;oBACA,iCACC,8OAAC,kKAAA,CAAA,QAAqB;wBACpB,aAAU;wBACV,WAAU;;0CACV,8OAAC,gMAAA,CAAA,QAAK;;;;;0CACN,8OAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAMtC;AAEA,SAAS,aAAa,EACpB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAEf;AAEA,SAAS,aAAa,EACpB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,0DAA0D;QACvE,GAAG,KAAK;;;;;;AAEf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,8OAAC,kKAAA,CAAA,QAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAEf;AAEA,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,8OAAC,kKAAA,CAAA,cAA2B;QAC1B,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAEf","debugId":null}},
    {"offset": {"line": 183, "column": 0}, "map": {"version":3,"sources":["file:///C:/Dev%20Directory/Blueprints/blueprintfro-v1/src/modules/shared/inbox.jsx"],"sourcesContent":["\r\n\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Bell, Check, Trash2, X } from \"lucide-react\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport {\r\n  Tooltip,\r\n  TooltipTrigger,\r\n  TooltipContent,\r\n  TooltipProvider,\r\n} from \"@/components/ui/tooltip\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport {\r\n  fetchNotifications,\r\n  deleteNotification,\r\n  deleteAllNotifications,\r\n  markNotificationAsRead,\r\n  markAllNotificationsAsRead,\r\n} from \"@/features/shared/notificationSlice\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogHeader,\r\n  DialogTitle,\r\n  DialogClose,\r\n} from \"@/components/ui/dialog\";\r\n\r\nexport default function Inbox({ recipientId }) {\r\n  const [selectedNotification, setSelectedNotification] = useState(null);\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n    items: notifications = [],\r\n    loading,\r\n    error,\r\n  } = useSelector((state) => state.notifications) || {};\r\n\r\n  useEffect(() => {\r\n    if (recipientId) {\r\n      dispatch(fetchNotifications(recipientId));\r\n    }\r\n  }, [dispatch, recipientId]);\r\n\r\n  const unreadCount = notifications.filter((n) => !n.read).length;\r\n\r\n  const handleMarkAllAsRead = () => {\r\n    if (unreadCount > 0) {\r\n      dispatch(markAllNotificationsAsRead(recipientId));\r\n    }\r\n  };\r\n\r\n  const handleDeleteNotification = (id) => {\r\n    dispatch(deleteNotification(id));\r\n    if (selectedNotification?._id === id) {\r\n      setSelectedNotification(null);\r\n    }\r\n  };\r\n\r\n  const handleDeleteAllNotifications = () => {\r\n    dispatch(deleteAllNotifications(recipientId));\r\n    setSelectedNotification(null);\r\n  };\r\n\r\n  const handleSelectNotification = (notification) => {\r\n    setSelectedNotification(notification);\r\n    if (!notification.read) {\r\n      dispatch(markNotificationAsRead(notification._id));\r\n    }\r\n  };\r\n\r\n  const formatTimestamp = (timestamp) => {\r\n    const date = new Date(timestamp);\r\n    const now = Date.now();\r\n    const minutes = Math.floor((now - date.getTime()) / 60000);\r\n\r\n    if (minutes < 1) return \"Received just now\";\r\n    if (minutes < 60) return `Received ${minutes} minute${minutes > 1 ? \"s\" : \"\"} ago`;\r\n    if (minutes < 1440) {\r\n      const hours = Math.floor(minutes / 60);\r\n      return `Received ${hours} hour${hours > 1 ? \"s\" : \"\"} ago`;\r\n    }\r\n    return `Received on ${date.toLocaleDateString(\"en-US\", {\r\n      month: \"short\",\r\n      day: \"numeric\",\r\n      year: \"numeric\",\r\n    })}`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex h-screen w-full bg-background\">\r\n      {/* Left Side: Notification List - Full width on mobile, 1/4 on large screens */}\r\n      <div className=\"w-full md:w-1/4 border-r bg-muted/10 p-4 flex flex-col\">\r\n        <div className=\"flex justify-between items-center border-b pb-2 mb-4\">\r\n          <h4 className=\"font-semibold text-lg\">\r\n            Notifications{\" \"}\r\n            {unreadCount > 0 && (\r\n              <Badge variant=\"destructive\" className=\"ml-2\">\r\n                {unreadCount} unread\r\n              </Badge>\r\n            )}\r\n          </h4>\r\n          <div className=\"flex items-center gap-2\">\r\n            {unreadCount > 0 && (\r\n              <TooltipProvider>\r\n                <Tooltip>\r\n                  <TooltipTrigger asChild>\r\n                    <Button variant=\"ghost\" size=\"icon\" onClick={handleMarkAllAsRead}>\r\n                      <Check className=\"h-4 w-4 text-green-500\" />\r\n                    </Button>\r\n                  </TooltipTrigger>\r\n                  <TooltipContent>\r\n                    <p>Mark all as read</p>\r\n                  </TooltipContent>\r\n                </Tooltip>\r\n              </TooltipProvider>\r\n            )}\r\n            {notifications.length > 0 && (\r\n              <TooltipProvider>\r\n                <Tooltip>\r\n                  <TooltipTrigger asChild>\r\n                    <Button variant=\"ghost\" size=\"icon\" onClick={handleDeleteAllNotifications}>\r\n                      <Trash2 className=\"h-4 w-4 text-rose-500\" />\r\n                    </Button>\r\n                  </TooltipTrigger>\r\n                  <TooltipContent>\r\n                    <p>Clear all</p>\r\n                  </TooltipContent>\r\n                </Tooltip>\r\n              </TooltipProvider>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex-1 overflow-y-auto scrollbar-thin scrollbar-thumb-indigo-300 scrollbar-track-gray-100\">\r\n          {loading.fetch ? (\r\n            <div className=\"p-6 text-center\">\r\n              <div className=\"animate-spin rounded-full h-10 w-10 border-t-2 border-indigo-600 mx-auto\"></div>\r\n              <p className=\"mt-2 text-sm text-muted-foreground\">Loading notifications...</p>\r\n            </div>\r\n          ) : error.fetch ? (\r\n            <div className=\"py-6 text-center text-rose-500\">\r\n              {error.fetch}\r\n            </div>\r\n          ) : notifications.length === 0 ? (\r\n            <div className=\"py-6 text-center text-muted-foreground\">\r\n              <Bell className=\"mx-auto h-8 w-8 mb-2\" />\r\n              No notifications\r\n            </div>\r\n          ) : (\r\n            <div className=\"divide-y\">\r\n              {notifications.map((notification) => (\r\n                <div\r\n                  key={notification._id || notification.id}\r\n                  onClick={() => handleSelectNotification(notification)}\r\n                  className={cn(\r\n                    \"py-3 px-3 cursor-pointer hover:bg-indigo-50 transition-colors group rounded-lg\",\r\n                    !notification.read && \"bg-indigo-100/50\",\r\n                    selectedNotification?._id === notification._id && \"bg-indigo-200\"\r\n                  )}\r\n                >\r\n                  <div className=\"flex justify-between items-start\">\r\n                    <div className=\"flex-1 min-w-0\">\r\n                      <div className=\"flex items-center gap-2\">\r\n                        <p className=\"font-medium text-sm truncate\">{notification.message}</p>\r\n                        <Badge\r\n                          variant={notification.read ? \"secondary\" : \"destructive\"}\r\n                          className={cn(\r\n                            \"text-xs\",\r\n                            notification.read\r\n                              ? \"bg-green-100 text-green-700\"\r\n                              : \"bg-rose-100 text-rose-700\"\r\n                          )}\r\n                        >\r\n                          {notification.read ? \"Read\" : \"Unread\"}\r\n                        </Badge>\r\n                      </div>\r\n                      <p className=\"text-xs text-muted-foreground mt-1\">\r\n                        {formatTimestamp(notification.createdAt)}\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"flex items-center gap-2 opacity-0 group-hover:opacity-100 transition-opacity\">\r\n                      {!notification.read && (\r\n                        <Button\r\n                          variant=\"ghost\"\r\n                          size=\"icon\"\r\n                          onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            dispatch(markNotificationAsRead(notification._id));\r\n                          }}\r\n                          className=\"h-6 w-6\"\r\n                        >\r\n                          <Check className=\"h-4 w-4 text-green-500\" />\r\n                        </Button>\r\n                      )}\r\n                      <Button\r\n                        variant=\"ghost\"\r\n                        size=\"icon\"\r\n                        onClick={(e) => {\r\n                          e.stopPropagation();\r\n                          handleDeleteNotification(notification._id);\r\n                        }}\r\n                        className=\"h-6 w-6\"\r\n                      >\r\n                        <X className=\"h-4 w-4 text-rose-500\" />\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Right Side: Notification Details - Hidden on mobile, visible on large screens */}\r\n      <div className=\"hidden md:flex md:w-3/4 p-6 flex-col\">\r\n        {selectedNotification ? (\r\n          <div className=\"flex-1\">\r\n            <div className=\"flex justify-between items-center border-b pb-2 mb-4\">\r\n              <h3 className=\"text-xl font-semibold\">Notification Details</h3>\r\n              <Button\r\n                variant=\"ghost\"\r\n                size=\"icon\"\r\n                onClick={() => handleDeleteNotification(selectedNotification._id)}\r\n              >\r\n                <Trash2 className=\"h-5 w-5 text-rose-500\" />\r\n              </Button>\r\n            </div>\r\n            <div className=\"space-y-4\">\r\n              <div>\r\n                <h4 className=\"font-medium\">Message</h4>\r\n                <p className=\"text-sm text-muted-foreground\">{selectedNotification.message}</p>\r\n              </div>\r\n              <div>\r\n                <h4 className=\"font-medium\">Received</h4>\r\n                <p className=\"text-sm text-muted-foreground\">\r\n                  {formatTimestamp(selectedNotification.createdAt)}\r\n                </p>\r\n              </div>\r\n              <div>\r\n                <h4 className=\"font-medium\">Status</h4>\r\n                <Badge\r\n                  variant={selectedNotification.read ? \"secondary\" : \"destructive\"}\r\n                  className={cn(\r\n                    \"text-xs\",\r\n                    selectedNotification.read\r\n                      ? \"bg-green-100 text-green-700\"\r\n                      : \"bg-rose-100 text-rose-700\"\r\n                  )}\r\n                >\r\n                  {selectedNotification.read ? \"Read\" : \"Unread\"}\r\n                </Badge>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className=\"flex-1 flex items-center justify-center text-muted-foreground\">\r\n            <p>Select a notification to view details</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Modal for Notification Details on Mobile */}\r\n      <Dialog open={selectedNotification && window.innerWidth < 768} onOpenChange={() => setSelectedNotification(null)}>\r\n        <DialogContent className=\"sm:max-w-[425px]\">\r\n          <DialogHeader>\r\n            <DialogTitle>Notification Details</DialogTitle>\r\n            <DialogClose asChild>\r\n              <Button variant=\"ghost\" size=\"icon\" onClick={() => setSelectedNotification(null)}>\r\n                <X className=\"h-5 w-5\" />\r\n              </Button>\r\n            </DialogClose>\r\n          </DialogHeader>\r\n          {selectedNotification && (\r\n            <div className=\"space-y-4\">\r\n              <div>\r\n                <h4 className=\"font-medium\">Message</h4>\r\n                <p className=\"text-sm text-muted-foreground\">{selectedNotification.message}</p>\r\n              </div>\r\n              <div>\r\n                <h4 className=\"font-medium\">Received</h4>\r\n                <p className=\"text-sm text-muted-foreground\">\r\n                  {formatTimestamp(selectedNotification.createdAt)}\r\n                </p>\r\n              </div>\r\n              <div>\r\n                <h4 className=\"font-medium\">Status</h4>\r\n                <Badge\r\n                  variant={selectedNotification.read ? \"secondary\" : \"destructive\"}\r\n                  className={cn(\r\n                    \"text-xs\",\r\n                    selectedNotification.read\r\n                      ? \"bg-green-100 text-green-700\"\r\n                      : \"bg-rose-100 text-rose-700\"\r\n                  )}\r\n                >\r\n                  {selectedNotification.read ? \"Read\" : \"Unread\"}\r\n                </Badge>\r\n              </div>\r\n              <Button\r\n                variant=\"destructive\"\r\n                onClick={() => handleDeleteNotification(selectedNotification._id)}\r\n                className=\"w-full\"\r\n              >\r\n                <Trash2 className=\"h-4 w-4 mr-2\" />\r\n                Delete Notification\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 895, "column": 0}, "map": {"version":3,"sources":["file:///C:/Dev%20Directory/Blueprints/blueprintfro-v1/src/app/%28protected%29/inbox/page.jsx"],"sourcesContent":["'use client';\r\n\r\nimport Inbox from \"@/modules/shared/inbox\";\r\n\r\n\r\n\r\nexport default function AllTeamByRole() {\r\n\r\n\r\n  return (\r\n    <div className=\"\">\r\n     <Inbox recipientId=\"64b8f1f4e4b0c3a1d5e8f9a2\" />\r\n\r\n\r\n\r\n    \r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAMe,SAAS;IAGtB,qBACE,8OAAC;QAAI,WAAU;kBACd,cAAA,8OAAC,kIAAA,CAAA,UAAK;YAAC,aAAY;;;;;;;;;;;AAOxB","debugId":null}}]
}
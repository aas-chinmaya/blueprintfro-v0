{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Dev%20Directory/Blueprints/blueprintfro-v1/src/components/ui/chart.jsx"],"sourcesContent":["\"use client\";\r\nimport * as React from \"react\"\r\nimport * as RechartsPrimitive from \"recharts\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\n// Format: { THEME_NAME: CSS_SELECTOR }\r\nconst THEMES = {\r\n  light: \"\",\r\n  dark: \".dark\"\r\n}\r\n\r\nconst ChartContext = React.createContext(null)\r\n\r\nfunction useChart() {\r\n  const context = React.useContext(ChartContext)\r\n\r\n  if (!context) {\r\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\r\n  }\r\n\r\n  return context\r\n}\r\n\r\nfunction ChartContainer({\r\n  id,\r\n  className,\r\n  children,\r\n  config,\r\n  ...props\r\n}) {\r\n  const uniqueId = React.useId()\r\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\r\n\r\n  return (\r\n    <ChartContext.Provider value={{ config }}>\r\n      <div\r\n        data-slot=\"chart\"\r\n        data-chart={chartId}\r\n        className={cn(\r\n          \"[&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border flex aspect-video justify-center text-xs [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-hidden [&_.recharts-sector]:outline-hidden [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-surface]:outline-hidden\",\r\n          className\r\n        )}\r\n        {...props}>\r\n        <ChartStyle id={chartId} config={config} />\r\n        <RechartsPrimitive.ResponsiveContainer>\r\n          {children}\r\n        </RechartsPrimitive.ResponsiveContainer>\r\n      </div>\r\n    </ChartContext.Provider>\r\n  );\r\n}\r\n\r\nconst ChartStyle = ({\r\n  id,\r\n  config\r\n}) => {\r\n  const colorConfig = Object.entries(config).filter(([, config]) => config.theme || config.color)\r\n\r\n  if (!colorConfig.length) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <style\r\n      dangerouslySetInnerHTML={{\r\n        __html: Object.entries(THEMES)\r\n          .map(([theme, prefix]) => `\r\n${prefix} [data-chart=${id}] {\r\n${colorConfig\r\n.map(([key, itemConfig]) => {\r\nconst color =\r\n  itemConfig.theme?.[theme] ||\r\n  itemConfig.color\r\nreturn color ? `  --color-${key}: ${color};` : null\r\n})\r\n.join(\"\\n\")}\r\n}\r\n`)\r\n          .join(\"\\n\"),\r\n      }} />\r\n  );\r\n}\r\n\r\nconst ChartTooltip = RechartsPrimitive.Tooltip\r\n\r\nfunction ChartTooltipContent({\r\n  active,\r\n  payload,\r\n  className,\r\n  indicator = \"dot\",\r\n  hideLabel = false,\r\n  hideIndicator = false,\r\n  label,\r\n  labelFormatter,\r\n  labelClassName,\r\n  formatter,\r\n  color,\r\n  nameKey,\r\n  labelKey\r\n}) {\r\n  const { config } = useChart()\r\n\r\n  const tooltipLabel = React.useMemo(() => {\r\n    if (hideLabel || !payload?.length) {\r\n      return null\r\n    }\r\n\r\n    const [item] = payload\r\n    const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\r\n    const itemConfig = getPayloadConfigFromPayload(config, item, key)\r\n    const value =\r\n      !labelKey && typeof label === \"string\"\r\n        ? config[label]?.label || label\r\n        : itemConfig?.label\r\n\r\n    if (labelFormatter) {\r\n      return (\r\n        <div className={cn(\"font-medium\", labelClassName)}>\r\n          {labelFormatter(value, payload)}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (!value) {\r\n      return null\r\n    }\r\n\r\n    return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>;\r\n  }, [\r\n    label,\r\n    labelFormatter,\r\n    payload,\r\n    hideLabel,\r\n    labelClassName,\r\n    config,\r\n    labelKey,\r\n  ])\r\n\r\n  if (!active || !payload?.length) {\r\n    return null\r\n  }\r\n\r\n  const nestLabel = payload.length === 1 && indicator !== \"dot\"\r\n\r\n  return (\r\n    <div\r\n      className={cn(\r\n        \"border-border/50 bg-background grid min-w-[8rem] items-start gap-1.5 rounded-lg border px-2.5 py-1.5 text-xs shadow-xl\",\r\n        className\r\n      )}>\r\n      {!nestLabel ? tooltipLabel : null}\r\n      <div className=\"grid gap-1.5\">\r\n        {payload.map((item, index) => {\r\n          const key = `${nameKey || item.name || item.dataKey || \"value\"}`\r\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\r\n          const indicatorColor = color || item.payload.fill || item.color\r\n\r\n          return (\r\n            <div\r\n              key={item.dataKey}\r\n              className={cn(\r\n                \"[&>svg]:text-muted-foreground flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5\",\r\n                indicator === \"dot\" && \"items-center\"\r\n              )}>\r\n              {formatter && item?.value !== undefined && item.name ? (\r\n                formatter(item.value, item.name, item, index, item.payload)\r\n              ) : (\r\n                <>\r\n                  {itemConfig?.icon ? (\r\n                    <itemConfig.icon />\r\n                  ) : (\r\n                    !hideIndicator && (\r\n                      <div\r\n                        className={cn(\"shrink-0 rounded-[2px] border-(--color-border) bg-(--color-bg)\", {\r\n                          \"h-2.5 w-2.5\": indicator === \"dot\",\r\n                          \"w-1\": indicator === \"line\",\r\n                          \"w-0 border-[1.5px] border-dashed bg-transparent\":\r\n                            indicator === \"dashed\",\r\n                          \"my-0.5\": nestLabel && indicator === \"dashed\",\r\n                        })}\r\n                        style={\r\n                          {\r\n                            \"--color-bg\": indicatorColor,\r\n                            \"--color-border\": indicatorColor\r\n                          }\r\n                        } />\r\n                    )\r\n                  )}\r\n                  <div\r\n                    className={cn(\r\n                      \"flex flex-1 justify-between leading-none\",\r\n                      nestLabel ? \"items-end\" : \"items-center\"\r\n                    )}>\r\n                    <div className=\"grid gap-1.5\">\r\n                      {nestLabel ? tooltipLabel : null}\r\n                      <span className=\"text-muted-foreground\">\r\n                        {itemConfig?.label || item.name}\r\n                      </span>\r\n                    </div>\r\n                    {item.value && (\r\n                      <span className=\"text-foreground font-mono font-medium tabular-nums\">\r\n                        {item.value.toLocaleString()}\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n                </>\r\n              )}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst ChartLegend = RechartsPrimitive.Legend\r\n\r\nfunction ChartLegendContent({\r\n  className,\r\n  hideIcon = false,\r\n  payload,\r\n  verticalAlign = \"bottom\",\r\n  nameKey\r\n}) {\r\n  const { config } = useChart()\r\n\r\n  if (!payload?.length) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={cn(\r\n        \"flex items-center justify-center gap-4\",\r\n        verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\r\n        className\r\n      )}>\r\n      {payload.map((item) => {\r\n        const key = `${nameKey || item.dataKey || \"value\"}`\r\n        const itemConfig = getPayloadConfigFromPayload(config, item, key)\r\n\r\n        return (\r\n          <div\r\n            key={item.value}\r\n            className={cn(\r\n              \"[&>svg]:text-muted-foreground flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3\"\r\n            )}>\r\n            {itemConfig?.icon && !hideIcon ? (\r\n              <itemConfig.icon />\r\n            ) : (\r\n              <div\r\n                className=\"h-2 w-2 shrink-0 rounded-[2px]\"\r\n                style={{\r\n                  backgroundColor: item.color,\r\n                }} />\r\n            )}\r\n            {itemConfig?.label}\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\n// Helper to extract item config from a payload.\r\nfunction getPayloadConfigFromPayload(\r\n  config,\r\n  payload,\r\n  key\r\n) {\r\n  if (typeof payload !== \"object\" || payload === null) {\r\n    return undefined\r\n  }\r\n\r\n  const payloadPayload =\r\n    \"payload\" in payload &&\r\n    typeof payload.payload === \"object\" &&\r\n    payload.payload !== null\r\n      ? payload.payload\r\n      : undefined\r\n\r\n  let configLabelKey = key\r\n\r\n  if (\r\n    key in payload &&\r\n    typeof payload[key] === \"string\"\r\n  ) {\r\n    configLabelKey = payload[key]\r\n  } else if (\r\n    payloadPayload &&\r\n    key in payloadPayload &&\r\n    typeof payloadPayload[key] === \"string\"\r\n  ) {\r\n    configLabelKey = payloadPayload[key]\r\n  }\r\n\r\n  return configLabelKey in config\r\n    ? config[configLabelKey]\r\n    : config[key];\r\n}\r\n\r\nexport {\r\n  ChartContainer,\r\n  ChartTooltip,\r\n  ChartTooltipContent,\r\n  ChartLegend,\r\n  ChartLegendContent,\r\n  ChartStyle,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;AACA;AACA;AAAA;AAAA;AAEA;AAJA;;;;;AAMA,uCAAuC;AACvC,MAAM,SAAS;IACb,OAAO;IACP,MAAM;AACR;AAEA,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,gBAAmB,AAAD,EAAE;AAEzC,SAAS;IACP,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE;IAEjC,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO;AACT;AAEA,SAAS,eAAe,EACtB,EAAE,EACF,SAAS,EACT,QAAQ,EACR,MAAM,EACN,GAAG,OACJ;IACC,MAAM,WAAW,CAAA,GAAA,qMAAA,CAAA,QAAW,AAAD;IAC3B,MAAM,UAAU,CAAC,MAAM,EAAE,MAAM,SAAS,OAAO,CAAC,MAAM,KAAK;IAE3D,qBACE,8OAAC,aAAa,QAAQ;QAAC,OAAO;YAAE;QAAO;kBACrC,cAAA,8OAAC;YACC,aAAU;YACV,cAAY;YACZ,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+pBACA;YAED,GAAG,KAAK;;8BACT,8OAAC;oBAAW,IAAI;oBAAS,QAAQ;;;;;;8BACjC,8OAAC,mKAAA,CAAA,sBAAqC;8BACnC;;;;;;;;;;;;;;;;;AAKX;AAEA,MAAM,aAAa,CAAC,EAClB,EAAE,EACF,MAAM,EACP;IACC,MAAM,cAAc,OAAO,OAAO,CAAC,QAAQ,MAAM,CAAC,CAAC,GAAG,OAAO,GAAK,OAAO,KAAK,IAAI,OAAO,KAAK;IAE9F,IAAI,CAAC,YAAY,MAAM,EAAE;QACvB,OAAO;IACT;IAEA,qBACE,8OAAC;QACC,yBAAyB;YACvB,QAAQ,OAAO,OAAO,CAAC,QACpB,GAAG,CAAC,CAAC,CAAC,OAAO,OAAO,GAAK,CAAC;AACrC,EAAE,OAAO,aAAa,EAAE,GAAG;AAC3B,EAAE,YACD,GAAG,CAAC,CAAC,CAAC,KAAK,WAAW;oBACvB,MAAM,QACJ,WAAW,KAAK,EAAE,CAAC,MAAM,IACzB,WAAW,KAAK;oBAClB,OAAO,QAAQ,CAAC,UAAU,EAAE,IAAI,EAAE,EAAE,MAAM,CAAC,CAAC,GAAG;gBAC/C,GACC,IAAI,CAAC,MAAM;;AAEZ,CAAC,EACU,IAAI,CAAC;QACV;;;;;;AAEN;AAEA,MAAM,eAAe,uJAAA,CAAA,UAAyB;AAE9C,SAAS,oBAAoB,EAC3B,MAAM,EACN,OAAO,EACP,SAAS,EACT,YAAY,KAAK,EACjB,YAAY,KAAK,EACjB,gBAAgB,KAAK,EACrB,KAAK,EACL,cAAc,EACd,cAAc,EACd,SAAS,EACT,KAAK,EACL,OAAO,EACP,QAAQ,EACT;IACC,MAAM,EAAE,MAAM,EAAE,GAAG;IAEnB,MAAM,eAAe,CAAA,GAAA,qMAAA,CAAA,UAAa,AAAD,EAAE;QACjC,IAAI,aAAa,CAAC,SAAS,QAAQ;YACjC,OAAO;QACT;QAEA,MAAM,CAAC,KAAK,GAAG;QACf,MAAM,MAAM,GAAG,YAAY,MAAM,WAAW,MAAM,QAAQ,SAAS;QACnE,MAAM,aAAa,4BAA4B,QAAQ,MAAM;QAC7D,MAAM,QACJ,CAAC,YAAY,OAAO,UAAU,WAC1B,MAAM,CAAC,MAAM,EAAE,SAAS,QACxB,YAAY;QAElB,IAAI,gBAAgB;YAClB,qBACE,8OAAC;gBAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;0BAC/B,eAAe,OAAO;;;;;;QAG7B;QAEA,IAAI,CAAC,OAAO;YACV,OAAO;QACT;QAEA,qBAAO,8OAAC;YAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;sBAAkB;;;;;;IAC7D,GAAG;QACD;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IAED,IAAI,CAAC,UAAU,CAAC,SAAS,QAAQ;QAC/B,OAAO;IACT;IAEA,MAAM,YAAY,QAAQ,MAAM,KAAK,KAAK,cAAc;IAExD,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0HACA;;YAED,CAAC,YAAY,eAAe;0BAC7B,8OAAC;gBAAI,WAAU;0BACZ,QAAQ,GAAG,CAAC,CAAC,MAAM;oBAClB,MAAM,MAAM,GAAG,WAAW,KAAK,IAAI,IAAI,KAAK,OAAO,IAAI,SAAS;oBAChE,MAAM,aAAa,4BAA4B,QAAQ,MAAM;oBAC7D,MAAM,iBAAiB,SAAS,KAAK,OAAO,CAAC,IAAI,IAAI,KAAK,KAAK;oBAE/D,qBACE,8OAAC;wBAEC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,uGACA,cAAc,SAAS;kCAExB,aAAa,MAAM,UAAU,aAAa,KAAK,IAAI,GAClD,UAAU,KAAK,KAAK,EAAE,KAAK,IAAI,EAAE,MAAM,OAAO,KAAK,OAAO,kBAE1D;;gCACG,YAAY,qBACX,8OAAC,WAAW,IAAI;;;;2CAEhB,CAAC,+BACC,8OAAC;oCACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,kEAAkE;wCAC9E,eAAe,cAAc;wCAC7B,OAAO,cAAc;wCACrB,mDACE,cAAc;wCAChB,UAAU,aAAa,cAAc;oCACvC;oCACA,OACE;wCACE,cAAc;wCACd,kBAAkB;oCACpB;;;;;;8CAIR,8OAAC;oCACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4CACA,YAAY,cAAc;;sDAE5B,8OAAC;4CAAI,WAAU;;gDACZ,YAAY,eAAe;8DAC5B,8OAAC;oDAAK,WAAU;8DACb,YAAY,SAAS,KAAK,IAAI;;;;;;;;;;;;wCAGlC,KAAK,KAAK,kBACT,8OAAC;4CAAK,WAAU;sDACb,KAAK,KAAK,CAAC,cAAc;;;;;;;;;;;;;;uBA1C/B,KAAK,OAAO;;;;;gBAkDvB;;;;;;;;;;;;AAIR;AAEA,MAAM,cAAc,sJAAA,CAAA,SAAwB;AAE5C,SAAS,mBAAmB,EAC1B,SAAS,EACT,WAAW,KAAK,EAChB,OAAO,EACP,gBAAgB,QAAQ,EACxB,OAAO,EACR;IACC,MAAM,EAAE,MAAM,EAAE,GAAG;IAEnB,IAAI,CAAC,SAAS,QAAQ;QACpB,OAAO;IACT;IAEA,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0CACA,kBAAkB,QAAQ,SAAS,QACnC;kBAED,QAAQ,GAAG,CAAC,CAAC;YACZ,MAAM,MAAM,GAAG,WAAW,KAAK,OAAO,IAAI,SAAS;YACnD,MAAM,aAAa,4BAA4B,QAAQ,MAAM;YAE7D,qBACE,8OAAC;gBAEC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV;;oBAED,YAAY,QAAQ,CAAC,yBACpB,8OAAC,WAAW,IAAI;;;;6CAEhB,8OAAC;wBACC,WAAU;wBACV,OAAO;4BACL,iBAAiB,KAAK,KAAK;wBAC7B;;;;;;oBAEH,YAAY;;eAbR,KAAK,KAAK;;;;;QAgBrB;;;;;;AAGN;AAEA,gDAAgD;AAChD,SAAS,4BACP,MAAM,EACN,OAAO,EACP,GAAG;IAEH,IAAI,OAAO,YAAY,YAAY,YAAY,MAAM;QACnD,OAAO;IACT;IAEA,MAAM,iBACJ,aAAa,WACb,OAAO,QAAQ,OAAO,KAAK,YAC3B,QAAQ,OAAO,KAAK,OAChB,QAAQ,OAAO,GACf;IAEN,IAAI,iBAAiB;IAErB,IACE,OAAO,WACP,OAAO,OAAO,CAAC,IAAI,KAAK,UACxB;QACA,iBAAiB,OAAO,CAAC,IAAI;IAC/B,OAAO,IACL,kBACA,OAAO,kBACP,OAAO,cAAc,CAAC,IAAI,KAAK,UAC/B;QACA,iBAAiB,cAAc,CAAC,IAAI;IACtC;IAEA,OAAO,kBAAkB,SACrB,MAAM,CAAC,eAAe,GACtB,MAAM,CAAC,IAAI;AACjB","debugId":null}},
    {"offset": {"line": 298, "column": 0}, "map": {"version":3,"sources":["file:///C:/Dev%20Directory/Blueprints/blueprintfro-v1/src/components/ui/select.jsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\r\nimport { CheckIcon, ChevronDownIcon, ChevronUpIcon } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Select({\r\n  ...props\r\n}) {\r\n  return <SelectPrimitive.Root data-slot=\"select\" {...props} />;\r\n}\r\n\r\nfunction SelectGroup({\r\n  ...props\r\n}) {\r\n  return <SelectPrimitive.Group data-slot=\"select-group\" {...props} />;\r\n}\r\n\r\nfunction SelectValue({\r\n  ...props\r\n}) {\r\n  return <SelectPrimitive.Value data-slot=\"select-value\" {...props} />;\r\n}\r\n\r\nfunction SelectTrigger({\r\n  className,\r\n  size = \"default\",\r\n  children,\r\n  ...props\r\n}) {\r\n  return (\r\n    <SelectPrimitive.Trigger\r\n      data-slot=\"select-trigger\"\r\n      data-size={size}\r\n      className={cn(\r\n        \"border-input data-[placeholder]:text-muted-foreground [&_svg:not([class*='text-'])]:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 dark:hover:bg-input/50 flex w-fit items-center justify-between gap-2 rounded-md border bg-transparent px-3 py-2 text-sm whitespace-nowrap shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 data-[size=default]:h-9 data-[size=sm]:h-8 *:data-[slot=select-value]:line-clamp-1 *:data-[slot=select-value]:flex *:data-[slot=select-value]:items-center *:data-[slot=select-value]:gap-2 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\r\n        className\r\n      )}\r\n      {...props}>\r\n      {children}\r\n      <SelectPrimitive.Icon asChild>\r\n        <ChevronDownIcon className=\"size-4 opacity-50\" />\r\n      </SelectPrimitive.Icon>\r\n    </SelectPrimitive.Trigger>\r\n  );\r\n}\r\n\r\nfunction SelectContent({\r\n  className,\r\n  children,\r\n  position = \"popper\",\r\n  ...props\r\n}) {\r\n  return (\r\n    <SelectPrimitive.Portal>\r\n      <SelectPrimitive.Content\r\n        data-slot=\"select-content\"\r\n        className={cn(\r\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 relative z-50 max-h-(--radix-select-content-available-height) min-w-[8rem] origin-(--radix-select-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border shadow-md\",\r\n          position === \"popper\" &&\r\n            \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\r\n          className\r\n        )}\r\n        position={position}\r\n        {...props}>\r\n        <SelectScrollUpButton />\r\n        <SelectPrimitive.Viewport\r\n          className={cn(\"p-1\", position === \"popper\" &&\r\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)] scroll-my-1\")}>\r\n          {children}\r\n        </SelectPrimitive.Viewport>\r\n        <SelectScrollDownButton />\r\n      </SelectPrimitive.Content>\r\n    </SelectPrimitive.Portal>\r\n  );\r\n}\r\n\r\nfunction SelectLabel({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    <SelectPrimitive.Label\r\n      data-slot=\"select-label\"\r\n      className={cn(\"text-muted-foreground px-2 py-1.5 text-xs\", className)}\r\n      {...props} />\r\n  );\r\n}\r\n\r\nfunction SelectItem({\r\n  className,\r\n  children,\r\n  ...props\r\n}) {\r\n  return (\r\n    <SelectPrimitive.Item\r\n      data-slot=\"select-item\"\r\n      className={cn(\r\n        \"focus:bg-accent focus:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex w-full cursor-default items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-2\",\r\n        className\r\n      )}\r\n      {...props}>\r\n      <span className=\"absolute right-2 flex size-3.5 items-center justify-center\">\r\n        <SelectPrimitive.ItemIndicator>\r\n          <CheckIcon className=\"size-4\" />\r\n        </SelectPrimitive.ItemIndicator>\r\n      </span>\r\n      <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\r\n    </SelectPrimitive.Item>\r\n  );\r\n}\r\n\r\nfunction SelectSeparator({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    <SelectPrimitive.Separator\r\n      data-slot=\"select-separator\"\r\n      className={cn(\"bg-border pointer-events-none -mx-1 my-1 h-px\", className)}\r\n      {...props} />\r\n  );\r\n}\r\n\r\nfunction SelectScrollUpButton({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    <SelectPrimitive.ScrollUpButton\r\n      data-slot=\"select-scroll-up-button\"\r\n      className={cn(\"flex cursor-default items-center justify-center py-1\", className)}\r\n      {...props}>\r\n      <ChevronUpIcon className=\"size-4\" />\r\n    </SelectPrimitive.ScrollUpButton>\r\n  );\r\n}\r\n\r\nfunction SelectScrollDownButton({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    <SelectPrimitive.ScrollDownButton\r\n      data-slot=\"select-scroll-down-button\"\r\n      className={cn(\"flex cursor-default items-center justify-center py-1\", className)}\r\n      {...props}>\r\n      <ChevronDownIcon className=\"size-4\" />\r\n    </SelectPrimitive.ScrollDownButton>\r\n  );\r\n}\r\n\r\nexport {\r\n  Select,\r\n  SelectContent,\r\n  SelectGroup,\r\n  SelectItem,\r\n  SelectLabel,\r\n  SelectScrollDownButton,\r\n  SelectScrollUpButton,\r\n  SelectSeparator,\r\n  SelectTrigger,\r\n  SelectValue,\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 525, "column": 0}, "map": {"version":3,"sources":["file:///C:/Dev%20Directory/Blueprints/blueprintfro-v1/src/components/ui/toggle.jsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\r\nimport { cva } from \"class-variance-authority\";\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst toggleVariants = cva(\r\n  \"inline-flex items-center justify-center gap-2 rounded-md text-sm font-medium hover:bg-muted hover:text-muted-foreground disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 [&_svg]:shrink-0 focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] outline-none transition-[color,box-shadow] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive whitespace-nowrap\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"bg-transparent\",\r\n        outline:\r\n          \"border border-input bg-transparent shadow-xs hover:bg-accent hover:text-accent-foreground\",\r\n      },\r\n      size: {\r\n        default: \"h-9 px-2 min-w-9\",\r\n        sm: \"h-8 px-1.5 min-w-8\",\r\n        lg: \"h-10 px-2.5 min-w-10\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nfunction Toggle({\r\n  className,\r\n  variant,\r\n  size,\r\n  ...props\r\n}) {\r\n  return (\r\n    <TogglePrimitive.Root\r\n      data-slot=\"toggle\"\r\n      className={cn(toggleVariants({ variant, size, className }))}\r\n      {...props} />\r\n  );\r\n}\r\n\r\nexport { Toggle, toggleVariants }\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,ijBACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,SACE;QACJ;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;QACN;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,GAAG,OACJ;IACC,qBACE,8OAAC,kKAAA,CAAA,OAAoB;QACnB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAEf","debugId":null}},
    {"offset": {"line": 579, "column": 0}, "map": {"version":3,"sources":["file:///C:/Dev%20Directory/Blueprints/blueprintfro-v1/src/components/ui/toggle-group.jsx"],"sourcesContent":["\"use client\";\r\nimport * as React from \"react\"\r\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\nimport { toggleVariants } from \"@/components/ui/toggle\"\r\n\r\nconst ToggleGroupContext = React.createContext({\r\n  size: \"default\",\r\n  variant: \"default\",\r\n})\r\n\r\nfunction ToggleGroup({\r\n  className,\r\n  variant,\r\n  size,\r\n  children,\r\n  ...props\r\n}) {\r\n  return (\r\n    <ToggleGroupPrimitive.Root\r\n      data-slot=\"toggle-group\"\r\n      data-variant={variant}\r\n      data-size={size}\r\n      className={cn(\r\n        \"group/toggle-group flex w-fit items-center rounded-md data-[variant=outline]:shadow-xs\",\r\n        className\r\n      )}\r\n      {...props}>\r\n      <ToggleGroupContext.Provider value={{ variant, size }}>\r\n        {children}\r\n      </ToggleGroupContext.Provider>\r\n    </ToggleGroupPrimitive.Root>\r\n  );\r\n}\r\n\r\nfunction ToggleGroupItem({\r\n  className,\r\n  children,\r\n  variant,\r\n  size,\r\n  ...props\r\n}) {\r\n  const context = React.useContext(ToggleGroupContext)\r\n\r\n  return (\r\n    <ToggleGroupPrimitive.Item\r\n      data-slot=\"toggle-group-item\"\r\n      data-variant={context.variant || variant}\r\n      data-size={context.size || size}\r\n      className={cn(toggleVariants({\r\n        variant: context.variant || variant,\r\n        size: context.size || size,\r\n      }), \"min-w-0 flex-1 shrink-0 rounded-none shadow-none first:rounded-l-md last:rounded-r-md focus:z-10 focus-visible:z-10 data-[variant=outline]:border-l-0 data-[variant=outline]:first:border-l\", className)}\r\n      {...props}>\r\n      {children}\r\n    </ToggleGroupPrimitive.Item>\r\n  );\r\n}\r\n\r\nexport { ToggleGroup, ToggleGroupItem }\r\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;AACA;AALA;;;;;;AAOA,MAAM,mCAAqB,CAAA,GAAA,qMAAA,CAAA,gBAAmB,AAAD,EAAE;IAC7C,MAAM;IACN,SAAS;AACX;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,OAAO,EACP,IAAI,EACJ,QAAQ,EACR,GAAG,OACJ;IACC,qBACE,8OAAC,2KAAA,CAAA,OAAyB;QACxB,aAAU;QACV,gBAAc;QACd,aAAW;QACX,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0FACA;QAED,GAAG,KAAK;kBACT,cAAA,8OAAC,mBAAmB,QAAQ;YAAC,OAAO;gBAAE;gBAAS;YAAK;sBACjD;;;;;;;;;;;AAIT;AAEA,SAAS,gBAAgB,EACvB,SAAS,EACT,QAAQ,EACR,OAAO,EACP,IAAI,EACJ,GAAG,OACJ;IACC,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAAE;IAEjC,qBACE,8OAAC,2KAAA,CAAA,OAAyB;QACxB,aAAU;QACV,gBAAc,QAAQ,OAAO,IAAI;QACjC,aAAW,QAAQ,IAAI,IAAI;QAC3B,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,CAAA,GAAA,kIAAA,CAAA,iBAAc,AAAD,EAAE;YAC3B,SAAS,QAAQ,OAAO,IAAI;YAC5B,MAAM,QAAQ,IAAI,IAAI;QACxB,IAAI,+LAA+L;QAClM,GAAG,KAAK;kBACR;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 647, "column": 0}, "map": {"version":3,"sources":["file:///C:/Dev%20Directory/Blueprints/blueprintfro-v1/src/modules/dashboard/chartarea/cpc-chart-area.js"],"sourcesContent":["\r\n\r\n// \"use client\"\r\n\r\n// import React from \"react\"\r\n// import { useEffect, useState } from 'react';\r\n\r\n// import { useDispatch, useSelector } from \"react-redux\"\r\n// import { Area, AreaChart, CartesianGrid, XAxis } from \"recharts\"\r\n\r\n// import { useIsMobile } from \"@/hooks/use-mobile\"\r\n// import {\r\n//   Card,\r\n//   CardAction,\r\n//   CardContent,\r\n//   CardDescription,\r\n//   CardHeader,\r\n//   CardTitle,\r\n// } from \"@/components/ui/card\"\r\n// import { ChartContainer, ChartTooltip, ChartTooltipContent } from \"@/components/ui/chart\"\r\n// import {\r\n//   Select,\r\n//   SelectContent,\r\n//   SelectItem,\r\n//   SelectTrigger,\r\n//   SelectValue,\r\n// } from \"@/components/ui/select\"\r\n// import {\r\n//   ToggleGroup,\r\n//   ToggleGroupItem,\r\n// } from \"@/components/ui/toggle-group\"\r\n// import { Skeleton } from \"@/components/ui/skeleton\" \r\n\r\n// // Redux actions\r\n// import { fetchTasksByDeadline } from \"@/features/dashboard/dashboardSlice\";\r\n// import {  fetchAllProjects} from \"@/features/projectSlice\";\r\n// import { fetchAllTeams } from \"@/features/teamSlice\";\r\n\r\n// export const description = \"An interactive area chart for project statistics\"\r\n\r\n// const chartConfig = {\r\n//   metrics: {\r\n//     label: \"Metrics\",\r\n//   },\r\n//   projects: {\r\n//     label: \"Projects\",\r\n//     color: \"#16a34a\",\r\n//   },\r\n//   tasks: {\r\n//     label: \"Tasks\",\r\n//     color: \"#22c55e\",\r\n//   },\r\n//   teams: {\r\n//     label: \"Teams\",\r\n//     color: \"#4ade80\",\r\n//   },\r\n// }\r\n\r\n// export function ChartAreaInteractive() {\r\n//   const isMobile = useIsMobile()\r\n//   const [timeRange, setTimeRange] = React.useState(\"90d\")\r\n//   const dispatch = useDispatch()\r\n\r\n//   const { data: tasksData, error: tasksError, status: tasksStatus } = useSelector(\r\n//     (state) => state.dashboard.deadlineTasks || {}\r\n//   )\r\n//   const { projects = [], status: projectStatus } = useSelector(\r\n//     (state) => state.project\r\n//   )\r\n//   const { allTeams = [], status: teamStatus } = useSelector((state) => state.team)\r\n\r\n//   useEffect(() => {\r\n//     dispatch(fetchTasksByDeadline())\r\n//     dispatch(fetchAllProjects())\r\n//     dispatch(fetchAllTeams())\r\n//   }, [dispatch])\r\n\r\n//   const formatDate = (dateString) => {\r\n//     const date = new Date(dateString)\r\n//     return date.toISOString().split(\"T\")[0]\r\n//   }\r\n\r\n//   const getDateRange = (range) => {\r\n//     const endDate = new Date()\r\n//     const startDate = new Date()\r\n//     if (range === \"7d\") startDate.setDate(endDate.getDate() - 7)\r\n//     else if (range === \"30d\") startDate.setDate(endDate.getDate() - 30)\r\n//     else startDate.setDate(endDate.getDate() - 90)\r\n//     return { startDate, endDate }\r\n//   }\r\n\r\n//   const chartData = React.useMemo(() => {\r\n//     const { startDate, endDate } = getDateRange(timeRange)\r\n//     const dateMap = new Map()\r\n\r\n//     if (Array.isArray(tasksData)) {\r\n//       tasksData.forEach((task) => {\r\n//         const createdAt = task.createdAt || task.created_at\r\n//         if (createdAt) {\r\n//           const date = new Date(createdAt)\r\n//           if (date >= startDate && date <= endDate) {\r\n//             const key = formatDate(createdAt)\r\n//             const existing = dateMap.get(key) || { date: key, tasks: 0, projects: 0, teams: 0 }\r\n//             dateMap.set(key, { ...existing, tasks: existing.tasks + 1 })\r\n//           }\r\n//         }\r\n//       })\r\n//     }\r\n\r\n//     if (Array.isArray(projects)) {\r\n//       projects.forEach((project) => {\r\n//         const createdAt = project.createdAt || project.created_at\r\n//         if (createdAt) {\r\n//           const date = new Date(createdAt)\r\n//           if (date >= startDate && date <= endDate) {\r\n//             const key = formatDate(createdAt)\r\n//             const existing = dateMap.get(key) || { date: key, tasks: 0, projects: 0, teams: 0 }\r\n//             dateMap.set(key, { ...existing, projects: existing.projects + 1 })\r\n//           }\r\n//         }\r\n//       })\r\n//     }\r\n\r\n//     if (Array.isArray(allTeams)) {\r\n//       allTeams.forEach((team) => {\r\n//         const createdAt = team.createdAt || team.created_at\r\n//         if (createdAt) {\r\n//           const date = new Date(createdAt)\r\n//           if (date >= startDate && date <= endDate) {\r\n//             const key = formatDate(createdAt)\r\n//             const existing = dateMap.get(key) || { date: key, tasks: 0, projects: 0, teams: 0 }\r\n//             dateMap.set(key, { ...existing, teams: existing.teams + 1 })\r\n//           }\r\n//         }\r\n//       })\r\n//     }\r\n\r\n//     return Array.from(dateMap.values()).sort(\r\n//       (a, b) => new Date(a.date).getTime() - new Date(b.date).getTime()\r\n//     )\r\n//   }, [tasksData, projects, allTeams, timeRange])\r\n\r\n//   React.useEffect(() => {\r\n//     if (isMobile) {\r\n//       setTimeRange(\"7d\")\r\n//     }\r\n//   }, [isMobile])\r\n\r\n//   // ✅ Show skeleton if data is loading\r\n//   if (tasksStatus === \"loading\" || projectStatus === \"loading\" || teamStatus === \"loading\") {\r\n//     return (\r\n//       <Card className=\"@container/card\">\r\n//         <CardHeader>\r\n//           <CardTitle>Project Metrics</CardTitle>\r\n//           <CardDescription>Loading statistics...</CardDescription>\r\n//         </CardHeader>\r\n//         <CardContent className=\"space-y-4 px-6 pb-6\">\r\n//           <Skeleton className=\"h-6 w-1/3\" />\r\n//           <Skeleton className=\"h-[250px] w-full rounded-xl\" />\r\n//         </CardContent>\r\n//       </Card>\r\n//     )\r\n//   }\r\n\r\n \r\n// console.log(chartData);\r\n\r\n//   if (chartData.length === 0) {\r\n//     return (\r\n//       <Card className=\"@container/card\">\r\n//         <CardHeader>\r\n//           <CardTitle>Project Metrics</CardTitle>\r\n//           <CardDescription>No data available for the selected time range...</CardDescription>\r\n//         </CardHeader>\r\n//       </Card>\r\n//     )\r\n//   }\r\n\r\n//   return (\r\n//     <Card className=\"@container/card\">\r\n//       <CardHeader>\r\n//         <CardTitle>Project Metrics</CardTitle>\r\n//         <CardDescription>\r\n//           <span className=\"hidden @[540px]/card:block\">\r\n//             Project, task, and team activity for \r\n//           </span>\r\n//         </CardDescription>\r\n//         <CardAction>\r\n//           <ToggleGroup\r\n//             type=\"single\"\r\n//             value={timeRange}\r\n//             onValueChange={setTimeRange}\r\n//             variant=\"outline\"\r\n//             className=\"hidden *:data-[slot=toggle-group-item]:!px-4 @[767px]/card:flex\"\r\n//           >\r\n//             <ToggleGroupItem value=\"90d\">Last 3 months</ToggleGroupItem>\r\n//             <ToggleGroupItem value=\"30d\">Last 30 days</ToggleGroupItem>\r\n//             <ToggleGroupItem value=\"7d\">Last 7 days</ToggleGroupItem>\r\n//           </ToggleGroup>\r\n//           <Select value={timeRange} onValueChange={setTimeRange}>\r\n//             <SelectTrigger\r\n//               className=\"flex w-40 **:data-[slot=select-value]:block **:data-[slot=select-value]:truncate @[767px]/card:hidden\"\r\n//               size=\"sm\"\r\n//               aria-label=\"Select a value\"\r\n//             >\r\n//               <SelectValue placeholder=\"Last 3 months\" />\r\n//             </SelectTrigger>\r\n//             <SelectContent className=\"rounded-xl\">\r\n//               <SelectItem value=\"90d\">Last 3 months</SelectItem>\r\n//               <SelectItem value=\"30d\">Last 30 days</SelectItem>\r\n//               <SelectItem value=\"7d\">Last 7 days</SelectItem>\r\n//             </SelectContent>\r\n//           </Select>\r\n//         </CardAction>\r\n//       </CardHeader>\r\n//       <CardContent className=\"px-2 pt-4 sm:px-6 sm:pt-6\">\r\n//         <ChartContainer config={chartConfig} className=\"aspect-auto h-[250px] w-full\">\r\n//           <AreaChart data={chartData}>\r\n//             <defs>\r\n//               <linearGradient id=\"fillProjects\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n//                 <stop offset=\"5%\" stopColor=\"#2356ecff\" stopOpacity={1.0} />\r\n//                 <stop offset=\"95%\" stopColor=\"#2356ecff\" stopOpacity={0.1} />\r\n//               </linearGradient>\r\n//               <linearGradient id=\"fillTasks\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n//                 <stop offset=\"5%\" stopColor=\"#3c6af3ff\" stopOpacity={0.8} />\r\n//                 <stop offset=\"95%\" stopColor=\"#3c6af3ff\" stopOpacity={0.1} />\r\n//               </linearGradient>\r\n//               <linearGradient id=\"fillTeams\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n//                 <stop offset=\"5%\" stopColor=\"#6689f5ff\" stopOpacity={0.6} />\r\n//                 <stop offset=\"95%\" stopColor=\"#6689f5ff\" stopOpacity={0.1} />\r\n//               </linearGradient>\r\n//             </defs>\r\n//             <CartesianGrid vertical={false} />\r\n//             <XAxis\r\n//               dataKey=\"date\"\r\n//               tickLine={false}\r\n//               axisLine={false}\r\n//               tickMargin={8}\r\n//               minTickGap={32}\r\n//               tickFormatter={(value) => {\r\n//                 const date = new Date(value)\r\n//                 return date.toLocaleDateString(\"en-US\", {\r\n//                   month: \"short\",\r\n//                   day: \"numeric\",\r\n//                 })\r\n//               }}\r\n//             />\r\n//             <ChartTooltip\r\n//               cursor={false}\r\n//               defaultIndex={isMobile ? -1 : 10}\r\n//               content={\r\n//                 <ChartTooltipContent\r\n//                   labelFormatter={(value) =>\r\n//                     new Date(value).toLocaleDateString(\"en-US\", {\r\n//                       month: \"short\",\r\n//                       day: \"numeric\",\r\n//                     })\r\n//                   }\r\n//                   indicator=\"dot\"\r\n//                 />\r\n//               }\r\n//             />\r\n//             <Area dataKey=\"teams\" type=\"natural\" fill=\"url(#fillTeams)\" stroke=\"#6689f5ff\" stackId=\"a\" />\r\n//             <Area dataKey=\"tasks\" type=\"natural\" fill=\"url(#fillTasks)\" stroke=\"#3c6af3ff\" stackId=\"a\" />\r\n//             <Area dataKey=\"projects\" type=\"natural\" fill=\"url(#fillProjects)\" stroke=\"#2356ecff\" stackId=\"a\" />\r\n//           </AreaChart>\r\n//         </ChartContainer>\r\n//       </CardContent>\r\n//     </Card>\r\n//   )\r\n// }\r\n\r\n\r\n\r\n\r\n\"use client\"\r\n\r\nimport React from \"react\"\r\nimport { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Area, AreaChart, CartesianGrid, XAxis } from \"recharts\"\r\n\r\nimport { useIsMobile } from \"@/hooks/use-mobile\"\r\nimport {\r\n  Card,\r\n  CardAction,\r\n  CardContent,\r\n  CardDescription,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@/components/ui/card\"\r\nimport { ChartContainer, ChartTooltip, ChartTooltipContent } from \"@/components/ui/chart\"\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from \"@/components/ui/select\"\r\nimport {\r\n  ToggleGroup,\r\n  ToggleGroupItem,\r\n} from \"@/components/ui/toggle-group\"\r\nimport { Skeleton } from \"@/components/ui/skeleton\" \r\n\r\n// Redux actions\r\nimport { fetchTasksByDeadline } from \"@/features/dashboard/dashboardSlice\";\r\nimport { fetchAllProjects } from \"@/features/projectSlice\";\r\nimport { fetchAllTeams } from \"@/features/teamSlice\";\r\n\r\nexport const description = \"An interactive area chart for project statistics\"\r\n\r\nconst chartConfig = {\r\n  metrics: {\r\n    label: \"Metrics\",\r\n  },\r\n  projects: {\r\n    label: \"Projects\",\r\n    color: \"#16a34a\",\r\n  },\r\n  tasks: {\r\n    label: \"Tasks\",\r\n    color: \"#22c55e\",\r\n  },\r\n  teams: {\r\n    label: \"Teams\",\r\n    color: \"#4ade80\",\r\n  },\r\n}\r\n\r\nexport function ChartAreaInteractive() {\r\n  const isMobile = useIsMobile()\r\n  const [timeRange, setTimeRange] = useState(\"90d\")\r\n  const dispatch = useDispatch()\r\n\r\n  const { data: tasksData, error: tasksError, status: tasksStatus } = useSelector(\r\n    (state) => state.dashboard.deadlineTasks || {}\r\n  )\r\n  const { projects = [], status: projectStatus } = useSelector(\r\n    (state) => state.project\r\n  )\r\n  const { allTeams = [], status: teamStatus } = useSelector((state) => state.team)\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchTasksByDeadline())\r\n    dispatch(fetchAllProjects())\r\n    dispatch(fetchAllTeams())\r\n  }, [dispatch])\r\n\r\n  const formatDate = (dateString) => {\r\n    const date = new Date(dateString)\r\n    return date.toISOString().split(\"T\")[0]\r\n  }\r\n\r\n  const getDateRange = (range) => {\r\n    const endDate = new Date()\r\n    const startDate = new Date()\r\n    if (range === \"7d\") startDate.setDate(endDate.getDate() - 7)\r\n    else if (range === \"30d\") startDate.setDate(endDate.getDate() - 30)\r\n    else startDate.setDate(endDate.getDate() - 90)\r\n    return { startDate, endDate }\r\n  }\r\n\r\n  const chartData = React.useMemo(() => {\r\n    const { startDate, endDate } = getDateRange(timeRange)\r\n    const dateMap = new Map()\r\n\r\n    if (Array.isArray(tasksData)) {\r\n      tasksData.forEach((task) => {\r\n        const createdAt = task.createdAt || task.created_at\r\n        if (createdAt) {\r\n          const date = new Date(createdAt)\r\n          if (date >= startDate && date <= endDate) {\r\n            const key = formatDate(createdAt)\r\n            const existing = dateMap.get(key) || { date: key, tasks: 0, projects: 0, teams: 0 }\r\n            dateMap.set(key, { ...existing, tasks: existing.tasks + 1 })\r\n          }\r\n        }\r\n      })\r\n    }\r\n\r\n    if (Array.isArray(projects)) {\r\n      projects.forEach((project) => {\r\n        const createdAt = project.createdAt || project.created_at\r\n        if (createdAt) {\r\n          const date = new Date(createdAt)\r\n          if (date >= startDate && date <= endDate) {\r\n            const key = formatDate(createdAt)\r\n            const existing = dateMap.get(key) || { date: key, tasks: 0, projects: 0, teams: 0 }\r\n            dateMap.set(key, { ...existing, projects: existing.projects + 1 })\r\n          }\r\n        }\r\n      })\r\n    }\r\n\r\n    if (Array.isArray(allTeams)) {\r\n      allTeams.forEach((team) => {\r\n        const createdAt = team.createdAt || team.created_at\r\n        if (createdAt) {\r\n          const date = new Date(createdAt)\r\n          if (date >= startDate && date <= endDate) {\r\n            const key = formatDate(createdAt)\r\n            const existing = dateMap.get(key) || { date: key, tasks: 0, projects: 0, teams: 0 }\r\n            dateMap.set(key, { ...existing, teams: existing.teams + 1 })\r\n          }\r\n        }\r\n      })\r\n    }\r\n\r\n    return Array.from(dateMap.values()).sort(\r\n      (a, b) => new Date(a.date).getTime() - new Date(b.date).getTime()\r\n    )\r\n  }, [tasksData, projects, allTeams, timeRange])\r\n\r\n  useEffect(() => {\r\n    if (isMobile) {\r\n      setTimeRange(\"7d\")\r\n    }\r\n  }, [isMobile])\r\n\r\n  if (tasksStatus === \"loading\" || projectStatus === \"loading\" || teamStatus === \"loading\") {\r\n    return (\r\n      <Card className=\"@container/card\">\r\n        <CardHeader>\r\n          <CardTitle>Project Metrics</CardTitle>\r\n          <CardDescription>Loading statistics...</CardDescription>\r\n        </CardHeader>\r\n        <CardContent className=\"space-y-4 px-6 pb-6\">\r\n          <Skeleton className=\"h-6 w-1/3\" />\r\n          <Skeleton className=\"h-[250px] w-full rounded-xl\" />\r\n        </CardContent>\r\n      </Card>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Card className=\"@container/card\">\r\n      <CardHeader>\r\n        <CardTitle>Project Metrics</CardTitle>\r\n        <CardDescription>\r\n          <span className=\"hidden @[540px]/card:block\">\r\n            Project, task, and team activity for \r\n          </span>\r\n        </CardDescription>\r\n        <CardAction>\r\n          <ToggleGroup\r\n            type=\"single\"\r\n            value={timeRange}\r\n            onValueChange={setTimeRange}\r\n            variant=\"outline\"\r\n            className=\"hidden *:data-[slot=toggle-group-item]:!px-4 @[767px]/card:flex\"\r\n          >\r\n            <ToggleGroupItem value=\"90d\">Last 3 months</ToggleGroupItem>\r\n            <ToggleGroupItem value=\"30d\">Last 30 days</ToggleGroupItem>\r\n            <ToggleGroupItem value=\"7d\">Last 7 days</ToggleGroupItem>\r\n          </ToggleGroup>\r\n          <Select value={timeRange} onValueChange={setTimeRange}>\r\n            <SelectTrigger\r\n              className=\"flex w-40 **:data-[slot=select-value]:block **:data-[slot=select-value]:truncate @[767px]/card:hidden\"\r\n              size=\"sm\"\r\n              aria-label=\"Select a value\"\r\n            >\r\n              <SelectValue placeholder=\"Last 3 months\" />\r\n            </SelectTrigger>\r\n            <SelectContent className=\"rounded-xl\">\r\n              <SelectItem value=\"90d\">Last 3 months</SelectItem>\r\n              <SelectItem value=\"30d\">Last 30 days</SelectItem>\r\n              <SelectItem value=\"7d\">Last 7 days</SelectItem>\r\n            </SelectContent>\r\n          </Select>\r\n        </CardAction>\r\n      </CardHeader>\r\n      <CardContent className=\"px-2 pt-4 sm:px-6 sm:pt-6\">\r\n        <ChartContainer config={chartConfig} className=\"aspect-auto h-[250px] w-full\">\r\n          <AreaChart data={chartData.length ? chartData : [{ date: '', tasks: 0, projects: 0, teams: 0 }]}>\r\n            <defs>\r\n              <linearGradient id=\"fillProjects\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                <stop offset=\"5%\" stopColor=\"#2356ecff\" stopOpacity={1.0} />\r\n                <stop offset=\"95%\" stopColor=\"#2356ecff\" stopOpacity={0.1} />\r\n              </linearGradient>\r\n              <linearGradient id=\"fillTasks\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                <stop offset=\"5%\" stopColor=\"#3c6af3ff\" stopOpacity={0.8} />\r\n                <stop offset=\"95%\" stopColor=\"#3c6af3ff\" stopOpacity={0.1} />\r\n              </linearGradient>\r\n              <linearGradient id=\"fillTeams\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                <stop offset=\"5%\" stopColor=\"#6689f5ff\" stopOpacity={0.6} />\r\n                <stop offset=\"95%\" stopColor=\"#6689f5ff\" stopOpacity={0.1} />\r\n              </linearGradient>\r\n            </defs>\r\n            <CartesianGrid vertical={false} />\r\n            <XAxis\r\n              dataKey=\"date\"\r\n              tickLine={false}\r\n              axisLine={false}\r\n              tickMargin={8}\r\n              minTickGap={32}\r\n              tickFormatter={(value) => value ? new Date(value).toLocaleDateString(\"en-US\", { month: \"short\", day: \"numeric\" }) : ''}\r\n            />\r\n            <ChartTooltip\r\n              cursor={false}\r\n              defaultIndex={isMobile ? -1 : 10}\r\n              content={\r\n                <ChartTooltipContent\r\n                  labelFormatter={(value) =>\r\n                    value ? new Date(value).toLocaleDateString(\"en-US\", { month: \"short\", day: \"numeric\" }) : ''\r\n                  }\r\n                  indicator=\"dot\"\r\n                />\r\n              }\r\n              active={chartData.length > 0}\r\n            />\r\n            <Area\r\n              dataKey=\"teams\"\r\n              type=\"natural\"\r\n              fill=\"url(#fillTeams)\"\r\n              stroke=\"#6689f5ff\"\r\n              stackId=\"a\"\r\n            />\r\n            <Area\r\n              dataKey=\"tasks\"\r\n              type=\"natural\"\r\n              fill=\"url(#fillTasks)\"\r\n              stroke=\"#3c6af3ff\"\r\n              stackId=\"a\"\r\n            />\r\n            <Area\r\n              dataKey=\"projects\"\r\n              type=\"natural\"\r\n              fill=\"url(#fillProjects)\"\r\n              stroke=\"#2356ecff\"\r\n              stackId=\"a\"\r\n            />\r\n          </AreaChart>\r\n        </ChartContainer>\r\n        {chartData.length === 0 && (\r\n          <div className=\"text-center text-gray-500 mt-4\">\r\n            No data available for the selected time range.\r\n          </div>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1479, "column": 0}, "map": {"version":3,"sources":["file:///C:/Dev%20Directory/Blueprints/blueprintfro-v1/src/hooks/useLoggedinUser.js"],"sourcesContent":["\r\n'use client';\r\n\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchUserByEmail } from '@/features/shared/userSlice';\r\n\r\nexport const useLoggedinUser = (projectTeamLeadId = null) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { userData, employeeData, loading } = useSelector((state) => state.user);\r\n\r\n  useEffect(() => {\r\n    if (!userData || !employeeData) {\r\n      dispatch(fetchUserByEmail());\r\n    }\r\n  }, [userData, employeeData, dispatch]);\r\n\r\n  // Flatten only top-level primitive values\r\n  const flattenObject = (obj) =>\r\n    Object.fromEntries(\r\n      Object.entries(obj || {}).filter(([_, value]) => typeof value !== 'object' || value === null)\r\n    );\r\n\r\n  const flattenedUser = flattenObject(userData);\r\n  const flattenedEmployee = flattenObject(employeeData);\r\n\r\n  const combinedData = {\r\n    ...flattenedUser,\r\n    ...flattenedEmployee,\r\n  };\r\n\r\n  const isTeamLead = projectTeamLeadId && combinedData.employeeID === projectTeamLeadId || false;\r\n  const isEmployee = combinedData.role?.toLowerCase() === 'employee(regular)';\r\n  const isCpc = combinedData.role?.toLowerCase() === 'cpc';\r\n// console.log(\"is cps\",isCpc)\r\n  const currentUser = {\r\n    ...combinedData,\r\n    isTeamLead,\r\n    isEmployee,\r\n    isCpc,\r\n  };\r\n// console.log(\"Current User in useLoggedinUser:\", currentUser);\r\n  return {\r\n    currentUser,\r\n    loading,\r\n  };\r\n};\r\n"],"names":[],"mappings":";;;AAGA;AACA;AACA;AAJA;;;;AAMO,MAAM,kBAAkB,CAAC,oBAAoB,IAAI;IACtD,MAAM,WAAW,CAAA,GAAA,yJAAA,CAAA,cAAW,AAAD;IAE3B,MAAM,EAAE,QAAQ,EAAE,YAAY,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,yJAAA,CAAA,cAAW,AAAD,EAAE,CAAC,QAAU,MAAM,IAAI;IAE7E,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,YAAY,CAAC,cAAc;YAC9B,SAAS,CAAA,GAAA,sIAAA,CAAA,mBAAgB,AAAD;QAC1B;IACF,GAAG;QAAC;QAAU;QAAc;KAAS;IAErC,0CAA0C;IAC1C,MAAM,gBAAgB,CAAC,MACrB,OAAO,WAAW,CAChB,OAAO,OAAO,CAAC,OAAO,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,GAAK,OAAO,UAAU,YAAY,UAAU;IAG5F,MAAM,gBAAgB,cAAc;IACpC,MAAM,oBAAoB,cAAc;IAExC,MAAM,eAAe;QACnB,GAAG,aAAa;QAChB,GAAG,iBAAiB;IACtB;IAEA,MAAM,aAAa,qBAAqB,aAAa,UAAU,KAAK,qBAAqB;IACzF,MAAM,aAAa,aAAa,IAAI,EAAE,kBAAkB;IACxD,MAAM,QAAQ,aAAa,IAAI,EAAE,kBAAkB;IACrD,8BAA8B;IAC5B,MAAM,cAAc;QAClB,GAAG,YAAY;QACf;QACA;QACA;IACF;IACF,gEAAgE;IAC9D,OAAO;QACL;QACA;IACF;AACF","debugId":null}},
    {"offset": {"line": 1531, "column": 0}, "map": {"version":3,"sources":["file:///C:/Dev%20Directory/Blueprints/blueprintfro-v1/src/modules/dashboard/chartarea/employee-chart-area.js"],"sourcesContent":["\r\n\r\n\r\n\r\n\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Area, AreaChart, CartesianGrid, XAxis } from \"recharts\"\r\n\r\nimport { useIsMobile } from \"@/hooks/use-mobile\"\r\nimport {\r\n  Card,\r\n  CardAction,\r\n  CardContent,\r\n  CardDescription,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@/components/ui/card\"\r\nimport { ChartContainer, ChartTooltip, ChartTooltipContent } from \"@/components/ui/chart\"\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from \"@/components/ui/select\"\r\nimport {\r\n  ToggleGroup,\r\n  ToggleGroupItem,\r\n} from \"@/components/ui/toggle-group\"\r\nimport { Skeleton } from \"@/components/ui/skeleton\" \r\n\r\n// Redux actions\r\nimport { fetchProjectsByEmployeeId } from \"@/features/projectSlice\"\r\nimport { fetchTeamsByEmployeeId } from \"@/features/teamSlice\"\r\nimport { getAllTaskByEmployeeId } from \"@/features/taskSlice\"\r\nimport { useLoggedinUser } from \"@/hooks/useLoggedinUser\"\r\n\r\nconst chartConfig = {\r\n  metrics: { label: \"Metrics\" },\r\n  projects: { label: \"Projects\", color: \"#16a34a\" },\r\n  tasks: { label: \"Tasks\", color: \"#22c55e\" },\r\n  teams: { label: \"Teams\", color: \"#4ade80\" },\r\n}\r\n\r\nexport default function ChartAreaInteractiveEmployee() {\r\n  const dispatch = useDispatch()\r\n  const isMobile = useIsMobile()\r\n  const [timeRange, setTimeRange] = React.useState(\"90d\")\r\n  const { currentUser } = useLoggedinUser()\r\n  const employeeId = currentUser?.employeeID\r\n\r\n  // Redux states\r\n  const {\r\n    employeeProjects,\r\n    status: projectStatus,\r\n    error: projectError,\r\n  } = useSelector((state) => ({\r\n    employeeProjects: state.project.employeeProjects,\r\n    status: state.project.status.fetchEmployeeProjects,\r\n    error: state.project.error.fetchEmployeeProjects,\r\n  }))\r\n\r\n  const {\r\n    employeeTasks,\r\n    isLoading: taskLoading,\r\n    error: taskError,\r\n  } = useSelector((state) => ({\r\n    employeeTasks: state.task.employeeTasks,\r\n    isLoading: state.task.isLoading,\r\n    error: state.task.error,\r\n  }))\r\n\r\n  // const {\r\n  //   teamsByEmployee,\r\n  //   status: teamStatus,\r\n  //   error: teamError,\r\n  // } = useSelector((state) => ({\r\n  //   teamsByEmployee: state.team.teamsByEmployee,\r\n  //   status: state.team.status,\r\n  //   error: state.team.error,\r\n  // }))\r\nconst teamsByEmployee = useSelector((state) => state.team.teamsByEmployee);\r\nconst teamStatus = useSelector((state) => state.team.status);\r\nconst teamError = useSelector((state) => state.team.error);\r\n\r\n  // Fetch data on mount\r\n  React.useEffect(() => {\r\n    if (employeeId) {\r\n      dispatch(fetchProjectsByEmployeeId(employeeId))\r\n      dispatch(fetchTeamsByEmployeeId(employeeId))\r\n      dispatch(getAllTaskByEmployeeId(employeeId))\r\n    }\r\n  }, [dispatch, employeeId])\r\n\r\n  const formatDate = (dateString) => {\r\n    const date = new Date(dateString)\r\n    return date.toISOString().split(\"T\")[0]\r\n  }\r\n\r\n  const getDateRange = (range) => {\r\n    const endDate = new Date()\r\n    const startDate = new Date()\r\n    if (range === \"7d\") startDate.setDate(endDate.getDate() - 7)\r\n    else if (range === \"30d\") startDate.setDate(endDate.getDate() - 30)\r\n    else startDate.setDate(endDate.getDate() - 90)\r\n    return { startDate, endDate }\r\n  }\r\n\r\n  // Process chart data\r\n  const chartData = React.useMemo(() => {\r\n    const { startDate, endDate } = getDateRange(timeRange)\r\n    const dateMap = new Map()\r\n\r\n    if (Array.isArray(employeeTasks)) {\r\n      employeeTasks.forEach((task) => {\r\n        const createdAt = task.createdAt || task.created_at\r\n        if (createdAt) {\r\n          const date = new Date(createdAt)\r\n          if (date >= startDate && date <= endDate) {\r\n            const key = formatDate(createdAt)\r\n            const existing = dateMap.get(key) || { date: key, tasks: 0, projects: 0, teams: 0 }\r\n            dateMap.set(key, { ...existing, tasks: existing.tasks + 1 })\r\n          }\r\n        }\r\n      })\r\n    }\r\n\r\n    if (Array.isArray(employeeProjects)) {\r\n      employeeProjects.forEach((project) => {\r\n        const createdAt = project.createdAt || project.created_at\r\n        if (createdAt) {\r\n          const date = new Date(createdAt)\r\n          if (date >= startDate && date <= endDate) {\r\n            const key = formatDate(createdAt)\r\n            const existing = dateMap.get(key) || { date: key, tasks: 0, projects: 0, teams: 0 }\r\n            dateMap.set(key, { ...existing, projects: existing.projects + 1 })\r\n          }\r\n        }\r\n      })\r\n    }\r\n\r\n    if (Array.isArray(teamsByEmployee)) {\r\n      teamsByEmployee.forEach((team) => {\r\n        const createdAt = team.createdAt || team.created_at\r\n        if (createdAt) {\r\n          const date = new Date(createdAt)\r\n          if (date >= startDate && date <= endDate) {\r\n            const key = formatDate(createdAt)\r\n            const existing = dateMap.get(key) || { date: key, tasks: 0, projects: 0, teams: 0 }\r\n            dateMap.set(key, { ...existing, teams: existing.teams + 1 })\r\n          }\r\n        }\r\n      })\r\n    }\r\n\r\n    return Array.from(dateMap.values()).sort(\r\n      (a, b) => new Date(a.date).getTime() - new Date(b.date).getTime()\r\n    )\r\n  }, [employeeTasks, employeeProjects, teamsByEmployee, timeRange])\r\n\r\n  React.useEffect(() => {\r\n    if (isMobile) {\r\n      setTimeRange(\"7d\")\r\n    }\r\n  }, [isMobile])\r\n\r\n  const isLoading = taskLoading || projectStatus === \"loading\" || teamStatus === \"loading\"\r\n  const hasError = taskError || projectStatus === \"failed\" || teamStatus === \"failed\"\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Card className=\"@container/card\">\r\n        <CardHeader>\r\n          <CardTitle>Project Metrics</CardTitle>\r\n          <CardDescription>Loading statistics...</CardDescription>\r\n        </CardHeader>\r\n        <CardContent className=\"space-y-4 px-6 pb-6\">\r\n          <Skeleton className=\"h-6 w-1/3\" />\r\n          <Skeleton className=\"h-[250px] w-full rounded-xl\" />\r\n        </CardContent>\r\n      </Card>\r\n    )\r\n  }\r\n\r\n  // always provide at least one data point so chart renders\r\n  const safeChartData =\r\n    chartData.length > 0\r\n      ? chartData\r\n      : [{ date: new Date().toISOString().split(\"T\")[0], tasks: 0, projects: 0, teams: 0 }]\r\n\r\n  return (\r\n    <Card className=\"@container/card\">\r\n      <CardHeader>\r\n        <CardTitle>Project Metrics</CardTitle>\r\n        <CardDescription>\r\n          <span className=\"hidden @[540px]/card:block\">\r\n            Project, task, and team activity for \r\n          </span>\r\n        </CardDescription>\r\n        <CardAction>\r\n          <ToggleGroup\r\n            type=\"single\"\r\n            value={timeRange}\r\n            onValueChange={setTimeRange}\r\n            variant=\"outline\"\r\n            className=\"hidden @[767px]/card:flex\"\r\n          >\r\n            <ToggleGroupItem value=\"90d\">Last 3 months</ToggleGroupItem>\r\n            <ToggleGroupItem value=\"30d\">Last 30 days</ToggleGroupItem>\r\n            <ToggleGroupItem value=\"7d\">Last 7 days</ToggleGroupItem>\r\n          </ToggleGroup>\r\n          <Select value={timeRange} onValueChange={setTimeRange}>\r\n            <SelectTrigger className=\"w-40 @[767px]/card:hidden\" size=\"sm\">\r\n              <SelectValue placeholder=\"Select time range\" />\r\n            </SelectTrigger>\r\n            <SelectContent className=\"rounded-xl\">\r\n              <SelectItem value=\"90d\">Last 3 months</SelectItem>\r\n              <SelectItem value=\"30d\">Last 30 days</SelectItem>\r\n              <SelectItem value=\"7d\">Last 7 days</SelectItem>\r\n            </SelectContent>\r\n          </Select>\r\n        </CardAction>\r\n      </CardHeader>\r\n      <CardContent className=\"px-2 pt-4 sm:px-6 sm:pt-6\">\r\n        <ChartContainer config={chartConfig} className=\"h-[250px] w-full\">\r\n          <AreaChart data={safeChartData}>\r\n            <defs>\r\n              <linearGradient id=\"fillProjects\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                <stop offset=\"5%\" stopColor=\"#2356ecff\" stopOpacity={1.0} />\r\n                <stop offset=\"95%\" stopColor=\"#2356ecff\" stopOpacity={0.1} />\r\n              </linearGradient>\r\n              <linearGradient id=\"fillTasks\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                <stop offset=\"5%\" stopColor=\"#3c6af3ff\" stopOpacity={0.8} />\r\n                <stop offset=\"95%\" stopColor=\"#3c6af3ff\" stopOpacity={0.1} />\r\n              </linearGradient>\r\n              <linearGradient id=\"fillTeams\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                <stop offset=\"5%\" stopColor=\"#6689f5ff\" stopOpacity={0.6} />\r\n                <stop offset=\"95%\" stopColor=\"#6689f5ff\" stopOpacity={0.1} />\r\n              </linearGradient>\r\n            </defs>\r\n            <CartesianGrid vertical={false} />\r\n            <XAxis\r\n              dataKey=\"date\"\r\n              tickLine={false}\r\n              axisLine={false}\r\n              tickMargin={8}\r\n              minTickGap={32}\r\n              tickFormatter={(value) =>\r\n                new Date(value).toLocaleDateString(\"en-US\", {\r\n                  month: \"short\",\r\n                  day: \"numeric\",\r\n                })\r\n              }\r\n            />\r\n            <ChartTooltip\r\n              cursor={false}\r\n              defaultIndex={isMobile ? -1 : 10}\r\n              content={\r\n                <ChartTooltipContent\r\n                  labelFormatter={(value) =>\r\n                    new Date(value).toLocaleDateString(\"en-US\", {\r\n                      month: \"short\",\r\n                      day: \"numeric\",\r\n                    })\r\n                  }\r\n                  indicator=\"dot\"\r\n                />\r\n              }\r\n            />\r\n            <Area dataKey=\"teams\" type=\"natural\" fill=\"url(#fillTeams)\" stroke=\"#6689f5ff\" stackId=\"a\" />\r\n            <Area dataKey=\"tasks\" type=\"natural\" fill=\"url(#fillTasks)\" stroke=\"#3c6af3ff\" stackId=\"a\" />\r\n            <Area dataKey=\"projects\" type=\"natural\" fill=\"url(#fillProjects)\" stroke=\"#2356ecff\" stackId=\"a\" />\r\n          </AreaChart>\r\n        </ChartContainer>\r\n\r\n        {chartData.length === 0 && (\r\n          <p className=\"text-center text-sm text-muted-foreground mt-4\">\r\n            No data available for the selected time range\r\n          </p>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\n\r\n"],"names":[],"mappings":";;;;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAQA;AACA;AAOA;AAIA;AAEA,gBAAgB;AAChB;AACA;AACA;AACA;AAjCA;;;;;;;;;;;;;;;AAmCA,MAAM,cAAc;IAClB,SAAS;QAAE,OAAO;IAAU;IAC5B,UAAU;QAAE,OAAO;QAAY,OAAO;IAAU;IAChD,OAAO;QAAE,OAAO;QAAS,OAAO;IAAU;IAC1C,OAAO;QAAE,OAAO;QAAS,OAAO;IAAU;AAC5C;AAEe,SAAS;IACtB,MAAM,WAAW,CAAA,GAAA,yJAAA,CAAA,cAAW,AAAD;IAC3B,MAAM,WAAW,CAAA,GAAA,6HAAA,CAAA,cAAW,AAAD;IAC3B,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAc,AAAD,EAAE;IACjD,MAAM,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,kBAAe,AAAD;IACtC,MAAM,aAAa,aAAa;IAEhC,eAAe;IACf,MAAM,EACJ,gBAAgB,EAChB,QAAQ,aAAa,EACrB,OAAO,YAAY,EACpB,GAAG,CAAA,GAAA,yJAAA,CAAA,cAAW,AAAD,EAAE,CAAC,QAAU,CAAC;YAC1B,kBAAkB,MAAM,OAAO,CAAC,gBAAgB;YAChD,QAAQ,MAAM,OAAO,CAAC,MAAM,CAAC,qBAAqB;YAClD,OAAO,MAAM,OAAO,CAAC,KAAK,CAAC,qBAAqB;QAClD,CAAC;IAED,MAAM,EACJ,aAAa,EACb,WAAW,WAAW,EACtB,OAAO,SAAS,EACjB,GAAG,CAAA,GAAA,yJAAA,CAAA,cAAW,AAAD,EAAE,CAAC,QAAU,CAAC;YAC1B,eAAe,MAAM,IAAI,CAAC,aAAa;YACvC,WAAW,MAAM,IAAI,CAAC,SAAS;YAC/B,OAAO,MAAM,IAAI,CAAC,KAAK;QACzB,CAAC;IAED,UAAU;IACV,qBAAqB;IACrB,wBAAwB;IACxB,sBAAsB;IACtB,gCAAgC;IAChC,iDAAiD;IACjD,+BAA+B;IAC/B,6BAA6B;IAC7B,MAAM;IACR,MAAM,kBAAkB,CAAA,GAAA,yJAAA,CAAA,cAAW,AAAD,EAAE,CAAC,QAAU,MAAM,IAAI,CAAC,eAAe;IACzE,MAAM,aAAa,CAAA,GAAA,yJAAA,CAAA,cAAW,AAAD,EAAE,CAAC,QAAU,MAAM,IAAI,CAAC,MAAM;IAC3D,MAAM,YAAY,CAAA,GAAA,yJAAA,CAAA,cAAW,AAAD,EAAE,CAAC,QAAU,MAAM,IAAI,CAAC,KAAK;IAEvD,sBAAsB;IACtB,CAAA,GAAA,qMAAA,CAAA,YAAe,AAAD,EAAE;QACd,IAAI,YAAY;YACd,SAAS,CAAA,GAAA,+HAAA,CAAA,4BAAyB,AAAD,EAAE;YACnC,SAAS,CAAA,GAAA,4HAAA,CAAA,yBAAsB,AAAD,EAAE;YAChC,SAAS,CAAA,GAAA,4HAAA,CAAA,yBAAsB,AAAD,EAAE;QAClC;IACF,GAAG;QAAC;QAAU;KAAW;IAEzB,MAAM,aAAa,CAAC;QAClB,MAAM,OAAO,IAAI,KAAK;QACtB,OAAO,KAAK,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE;IACzC;IAEA,MAAM,eAAe,CAAC;QACpB,MAAM,UAAU,IAAI;QACpB,MAAM,YAAY,IAAI;QACtB,IAAI,UAAU,MAAM,UAAU,OAAO,CAAC,QAAQ,OAAO,KAAK;aACrD,IAAI,UAAU,OAAO,UAAU,OAAO,CAAC,QAAQ,OAAO,KAAK;aAC3D,UAAU,OAAO,CAAC,QAAQ,OAAO,KAAK;QAC3C,OAAO;YAAE;YAAW;QAAQ;IAC9B;IAEA,qBAAqB;IACrB,MAAM,YAAY,CAAA,GAAA,qMAAA,CAAA,UAAa,AAAD,EAAE;QAC9B,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,aAAa;QAC5C,MAAM,UAAU,IAAI;QAEpB,IAAI,MAAM,OAAO,CAAC,gBAAgB;YAChC,cAAc,OAAO,CAAC,CAAC;gBACrB,MAAM,YAAY,KAAK,SAAS,IAAI,KAAK,UAAU;gBACnD,IAAI,WAAW;oBACb,MAAM,OAAO,IAAI,KAAK;oBACtB,IAAI,QAAQ,aAAa,QAAQ,SAAS;wBACxC,MAAM,MAAM,WAAW;wBACvB,MAAM,WAAW,QAAQ,GAAG,CAAC,QAAQ;4BAAE,MAAM;4BAAK,OAAO;4BAAG,UAAU;4BAAG,OAAO;wBAAE;wBAClF,QAAQ,GAAG,CAAC,KAAK;4BAAE,GAAG,QAAQ;4BAAE,OAAO,SAAS,KAAK,GAAG;wBAAE;oBAC5D;gBACF;YACF;QACF;QAEA,IAAI,MAAM,OAAO,CAAC,mBAAmB;YACnC,iBAAiB,OAAO,CAAC,CAAC;gBACxB,MAAM,YAAY,QAAQ,SAAS,IAAI,QAAQ,UAAU;gBACzD,IAAI,WAAW;oBACb,MAAM,OAAO,IAAI,KAAK;oBACtB,IAAI,QAAQ,aAAa,QAAQ,SAAS;wBACxC,MAAM,MAAM,WAAW;wBACvB,MAAM,WAAW,QAAQ,GAAG,CAAC,QAAQ;4BAAE,MAAM;4BAAK,OAAO;4BAAG,UAAU;4BAAG,OAAO;wBAAE;wBAClF,QAAQ,GAAG,CAAC,KAAK;4BAAE,GAAG,QAAQ;4BAAE,UAAU,SAAS,QAAQ,GAAG;wBAAE;oBAClE;gBACF;YACF;QACF;QAEA,IAAI,MAAM,OAAO,CAAC,kBAAkB;YAClC,gBAAgB,OAAO,CAAC,CAAC;gBACvB,MAAM,YAAY,KAAK,SAAS,IAAI,KAAK,UAAU;gBACnD,IAAI,WAAW;oBACb,MAAM,OAAO,IAAI,KAAK;oBACtB,IAAI,QAAQ,aAAa,QAAQ,SAAS;wBACxC,MAAM,MAAM,WAAW;wBACvB,MAAM,WAAW,QAAQ,GAAG,CAAC,QAAQ;4BAAE,MAAM;4BAAK,OAAO;4BAAG,UAAU;4BAAG,OAAO;wBAAE;wBAClF,QAAQ,GAAG,CAAC,KAAK;4BAAE,GAAG,QAAQ;4BAAE,OAAO,SAAS,KAAK,GAAG;wBAAE;oBAC5D;gBACF;YACF;QACF;QAEA,OAAO,MAAM,IAAI,CAAC,QAAQ,MAAM,IAAI,IAAI,CACtC,CAAC,GAAG,IAAM,IAAI,KAAK,EAAE,IAAI,EAAE,OAAO,KAAK,IAAI,KAAK,EAAE,IAAI,EAAE,OAAO;IAEnE,GAAG;QAAC;QAAe;QAAkB;QAAiB;KAAU;IAEhE,CAAA,GAAA,qMAAA,CAAA,YAAe,AAAD,EAAE;QACd,IAAI,UAAU;YACZ,aAAa;QACf;IACF,GAAG;QAAC;KAAS;IAEb,MAAM,YAAY,eAAe,kBAAkB,aAAa,eAAe;IAC/E,MAAM,WAAW,aAAa,kBAAkB,YAAY,eAAe;IAE3E,IAAI,WAAW;QACb,qBACE,8OAAC,gIAAA,CAAA,OAAI;YAAC,WAAU;;8BACd,8OAAC,gIAAA,CAAA,aAAU;;sCACT,8OAAC,gIAAA,CAAA,YAAS;sCAAC;;;;;;sCACX,8OAAC,gIAAA,CAAA,kBAAe;sCAAC;;;;;;;;;;;;8BAEnB,8OAAC,gIAAA,CAAA,cAAW;oBAAC,WAAU;;sCACrB,8OAAC,oIAAA,CAAA,WAAQ;4BAAC,WAAU;;;;;;sCACpB,8OAAC,oIAAA,CAAA,WAAQ;4BAAC,WAAU;;;;;;;;;;;;;;;;;;IAI5B;IAEA,0DAA0D;IAC1D,MAAM,gBACJ,UAAU,MAAM,GAAG,IACf,YACA;QAAC;YAAE,MAAM,IAAI,OAAO,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE;YAAE,OAAO;YAAG,UAAU;YAAG,OAAO;QAAE;KAAE;IAEzF,qBACE,8OAAC,gIAAA,CAAA,OAAI;QAAC,WAAU;;0BACd,8OAAC,gIAAA,CAAA,aAAU;;kCACT,8OAAC,gIAAA,CAAA,YAAS;kCAAC;;;;;;kCACX,8OAAC,gIAAA,CAAA,kBAAe;kCACd,cAAA,8OAAC;4BAAK,WAAU;sCAA6B;;;;;;;;;;;kCAI/C,8OAAC,gIAAA,CAAA,aAAU;;0CACT,8OAAC,2IAAA,CAAA,cAAW;gCACV,MAAK;gCACL,OAAO;gCACP,eAAe;gCACf,SAAQ;gCACR,WAAU;;kDAEV,8OAAC,2IAAA,CAAA,kBAAe;wCAAC,OAAM;kDAAM;;;;;;kDAC7B,8OAAC,2IAAA,CAAA,kBAAe;wCAAC,OAAM;kDAAM;;;;;;kDAC7B,8OAAC,2IAAA,CAAA,kBAAe;wCAAC,OAAM;kDAAK;;;;;;;;;;;;0CAE9B,8OAAC,kIAAA,CAAA,SAAM;gCAAC,OAAO;gCAAW,eAAe;;kDACvC,8OAAC,kIAAA,CAAA,gBAAa;wCAAC,WAAU;wCAA4B,MAAK;kDACxD,cAAA,8OAAC,kIAAA,CAAA,cAAW;4CAAC,aAAY;;;;;;;;;;;kDAE3B,8OAAC,kIAAA,CAAA,gBAAa;wCAAC,WAAU;;0DACvB,8OAAC,kIAAA,CAAA,aAAU;gDAAC,OAAM;0DAAM;;;;;;0DACxB,8OAAC,kIAAA,CAAA,aAAU;gDAAC,OAAM;0DAAM;;;;;;0DACxB,8OAAC,kIAAA,CAAA,aAAU;gDAAC,OAAM;0DAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAK/B,8OAAC,gIAAA,CAAA,cAAW;gBAAC,WAAU;;kCACrB,8OAAC,iIAAA,CAAA,iBAAc;wBAAC,QAAQ;wBAAa,WAAU;kCAC7C,cAAA,8OAAC,qJAAA,CAAA,YAAS;4BAAC,MAAM;;8CACf,8OAAC;;sDACC,8OAAC;4CAAe,IAAG;4CAAe,IAAG;4CAAI,IAAG;4CAAI,IAAG;4CAAI,IAAG;;8DACxD,8OAAC;oDAAK,QAAO;oDAAK,WAAU;oDAAY,aAAa;;;;;;8DACrD,8OAAC;oDAAK,QAAO;oDAAM,WAAU;oDAAY,aAAa;;;;;;;;;;;;sDAExD,8OAAC;4CAAe,IAAG;4CAAY,IAAG;4CAAI,IAAG;4CAAI,IAAG;4CAAI,IAAG;;8DACrD,8OAAC;oDAAK,QAAO;oDAAK,WAAU;oDAAY,aAAa;;;;;;8DACrD,8OAAC;oDAAK,QAAO;oDAAM,WAAU;oDAAY,aAAa;;;;;;;;;;;;sDAExD,8OAAC;4CAAe,IAAG;4CAAY,IAAG;4CAAI,IAAG;4CAAI,IAAG;4CAAI,IAAG;;8DACrD,8OAAC;oDAAK,QAAO;oDAAK,WAAU;oDAAY,aAAa;;;;;;8DACrD,8OAAC;oDAAK,QAAO;oDAAM,WAAU;oDAAY,aAAa;;;;;;;;;;;;;;;;;;8CAG1D,8OAAC,6JAAA,CAAA,gBAAa;oCAAC,UAAU;;;;;;8CACzB,8OAAC,qJAAA,CAAA,QAAK;oCACJ,SAAQ;oCACR,UAAU;oCACV,UAAU;oCACV,YAAY;oCACZ,YAAY;oCACZ,eAAe,CAAC,QACd,IAAI,KAAK,OAAO,kBAAkB,CAAC,SAAS;4CAC1C,OAAO;4CACP,KAAK;wCACP;;;;;;8CAGJ,8OAAC,iIAAA,CAAA,eAAY;oCACX,QAAQ;oCACR,cAAc,WAAW,CAAC,IAAI;oCAC9B,uBACE,8OAAC,iIAAA,CAAA,sBAAmB;wCAClB,gBAAgB,CAAC,QACf,IAAI,KAAK,OAAO,kBAAkB,CAAC,SAAS;gDAC1C,OAAO;gDACP,KAAK;4CACP;wCAEF,WAAU;;;;;;;;;;;8CAIhB,8OAAC,oJAAA,CAAA,OAAI;oCAAC,SAAQ;oCAAQ,MAAK;oCAAU,MAAK;oCAAkB,QAAO;oCAAY,SAAQ;;;;;;8CACvF,8OAAC,oJAAA,CAAA,OAAI;oCAAC,SAAQ;oCAAQ,MAAK;oCAAU,MAAK;oCAAkB,QAAO;oCAAY,SAAQ;;;;;;8CACvF,8OAAC,oJAAA,CAAA,OAAI;oCAAC,SAAQ;oCAAW,MAAK;oCAAU,MAAK;oCAAqB,QAAO;oCAAY,SAAQ;;;;;;;;;;;;;;;;;oBAIhG,UAAU,MAAM,KAAK,mBACpB,8OAAC;wBAAE,WAAU;kCAAiD;;;;;;;;;;;;;;;;;;AAOxE","debugId":null}},
    {"offset": {"line": 2144, "column": 0}, "map": {"version":3,"sources":["file:///C:/Dev%20Directory/Blueprints/blueprintfro-v1/src/components/ui/tabs.jsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Tabs({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    <TabsPrimitive.Root\r\n      data-slot=\"tabs\"\r\n      className={cn(\"flex flex-col gap-2\", className)}\r\n      {...props} />\r\n  );\r\n}\r\n\r\nfunction TabsList({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    <TabsPrimitive.List\r\n      data-slot=\"tabs-list\"\r\n      className={cn(\r\n        \"bg-muted text-muted-foreground inline-flex h-9 w-fit items-center justify-center rounded-lg p-[3px]\",\r\n        className\r\n      )}\r\n      {...props} />\r\n  );\r\n}\r\n\r\nfunction TabsTrigger({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    <TabsPrimitive.Trigger\r\n      data-slot=\"tabs-trigger\"\r\n      className={cn(\r\n        \"data-[state=active]:bg-background dark:data-[state=active]:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:outline-ring dark:data-[state=active]:border-input dark:data-[state=active]:bg-input/30 text-foreground dark:text-muted-foreground inline-flex h-[calc(100%-1px)] flex-1 items-center justify-center gap-1.5 rounded-md border border-transparent px-2 py-1 text-sm font-medium whitespace-nowrap transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:shadow-sm [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\r\n        className\r\n      )}\r\n      {...props} />\r\n  );\r\n}\r\n\r\nfunction TabsContent({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    <TabsPrimitive.Content\r\n      data-slot=\"tabs-content\"\r\n      className={cn(\"flex-1 outline-none\", className)}\r\n      {...props} />\r\n  );\r\n}\r\n\r\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\r\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,SAAS,KAAK,EACZ,SAAS,EACT,GAAG,OACJ;IACC,qBACE,8OAAC,gKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAEf;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,8OAAC,gKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,uGACA;QAED,GAAG,KAAK;;;;;;AAEf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,8OAAC,gKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,mqBACA;QAED,GAAG,KAAK;;;;;;AAEf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,8OAAC,gKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAEf","debugId":null}},
    {"offset": {"line": 2210, "column": 0}, "map": {"version":3,"sources":["file:///C:/Dev%20Directory/Blueprints/blueprintfro-v1/src/components/ui/progress.jsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Progress({\r\n  className,\r\n  value,\r\n  ...props\r\n}) {\r\n  return (\r\n    <ProgressPrimitive.Root\r\n      data-slot=\"progress\"\r\n      className={cn(\r\n        \"bg-primary/20 relative h-2 w-full overflow-hidden rounded-full\",\r\n        className\r\n      )}\r\n      {...props}>\r\n      <ProgressPrimitive.Indicator\r\n        data-slot=\"progress-indicator\"\r\n        className=\"bg-primary h-full w-full flex-1 transition-all\"\r\n        style={{ transform: `translateX(-${100 - (value || 0)}%)` }} />\r\n    </ProgressPrimitive.Root>\r\n  );\r\n}\r\n\r\nexport { Progress }\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,SAAS,SAAS,EAChB,SAAS,EACT,KAAK,EACL,GAAG,OACJ;IACC,qBACE,8OAAC,oKAAA,CAAA,OAAsB;QACrB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;kBACT,cAAA,8OAAC,oKAAA,CAAA,YAA2B;YAC1B,aAAU;YACV,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;AAGlE","debugId":null}},
    {"offset": {"line": 2251, "column": 0}, "map": {"version":3,"sources":["file:///C:/Dev%20Directory/Blueprints/blueprintfro-v1/src/components/ui/dialog.jsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\r\nimport { XIcon } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Dialog({\r\n  ...props\r\n}) {\r\n  return <DialogPrimitive.Root data-slot=\"dialog\" {...props} />;\r\n}\r\n\r\nfunction DialogTrigger({\r\n  ...props\r\n}) {\r\n  return <DialogPrimitive.Trigger data-slot=\"dialog-trigger\" {...props} />;\r\n}\r\n\r\nfunction DialogPortal({\r\n  ...props\r\n}) {\r\n  return <DialogPrimitive.Portal data-slot=\"dialog-portal\" {...props} />;\r\n}\r\n\r\nfunction DialogClose({\r\n  ...props\r\n}) {\r\n  return <DialogPrimitive.Close data-slot=\"dialog-close\" {...props} />;\r\n}\r\n\r\nfunction DialogOverlay({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    <DialogPrimitive.Overlay\r\n      data-slot=\"dialog-overlay\"\r\n      className={cn(\r\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50\",\r\n        className\r\n      )}\r\n      {...props} />\r\n  );\r\n}\r\n\r\nfunction DialogContent({\r\n  className,\r\n  children,\r\n  showCloseButton = true,\r\n  ...props\r\n}) {\r\n  return (\r\n    <DialogPortal data-slot=\"dialog-portal\">\r\n      <DialogOverlay />\r\n      <DialogPrimitive.Content\r\n        data-slot=\"dialog-content\"\r\n        className={cn(\r\n          \"bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg\",\r\n          className\r\n        )}\r\n        {...props}>\r\n        {children}\r\n        {showCloseButton && (\r\n          <DialogPrimitive.Close\r\n            data-slot=\"dialog-close\"\r\n            className=\"ring-offset-background focus:ring-ring data-[state=open]:bg-accent data-[state=open]:text-muted-foreground absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\">\r\n            <XIcon />\r\n            <span className=\"sr-only\">Close</span>\r\n          </DialogPrimitive.Close>\r\n        )}\r\n      </DialogPrimitive.Content>\r\n    </DialogPortal>\r\n  );\r\n}\r\n\r\nfunction DialogHeader({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    <div\r\n      data-slot=\"dialog-header\"\r\n      className={cn(\"flex flex-col gap-2 text-center sm:text-left\", className)}\r\n      {...props} />\r\n  );\r\n}\r\n\r\nfunction DialogFooter({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    <div\r\n      data-slot=\"dialog-footer\"\r\n      className={cn(\"flex flex-col-reverse gap-2 sm:flex-row sm:justify-end\", className)}\r\n      {...props} />\r\n  );\r\n}\r\n\r\nfunction DialogTitle({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    <DialogPrimitive.Title\r\n      data-slot=\"dialog-title\"\r\n      className={cn(\"text-lg leading-none font-semibold\", className)}\r\n      {...props} />\r\n  );\r\n}\r\n\r\nfunction DialogDescription({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    <DialogPrimitive.Description\r\n      data-slot=\"dialog-description\"\r\n      className={cn(\"text-muted-foreground text-sm\", className)}\r\n      {...props} />\r\n  );\r\n}\r\n\r\nexport {\r\n  Dialog,\r\n  DialogClose,\r\n  DialogContent,\r\n  DialogDescription,\r\n  DialogFooter,\r\n  DialogHeader,\r\n  DialogOverlay,\r\n  DialogPortal,\r\n  DialogTitle,\r\n  DialogTrigger,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,SAAS,OAAO,EACd,GAAG,OACJ;IACC,qBAAO,8OAAC,kKAAA,CAAA,OAAoB;QAAC,aAAU;QAAU,GAAG,KAAK;;;;;;AAC3D;AAEA,SAAS,cAAc,EACrB,GAAG,OACJ;IACC,qBAAO,8OAAC,kKAAA,CAAA,UAAuB;QAAC,aAAU;QAAkB,GAAG,KAAK;;;;;;AACtE;AAEA,SAAS,aAAa,EACpB,GAAG,OACJ;IACC,qBAAO,8OAAC,kKAAA,CAAA,SAAsB;QAAC,aAAU;QAAiB,GAAG,KAAK;;;;;;AACpE;AAEA,SAAS,YAAY,EACnB,GAAG,OACJ;IACC,qBAAO,8OAAC,kKAAA,CAAA,QAAqB;QAAC,aAAU;QAAgB,GAAG,KAAK;;;;;;AAClE;AAEA,SAAS,cAAc,EACrB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,8OAAC,kKAAA,CAAA,UAAuB;QACtB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;AAEf;AAEA,SAAS,cAAc,EACrB,SAAS,EACT,QAAQ,EACR,kBAAkB,IAAI,EACtB,GAAG,OACJ;IACC,qBACE,8OAAC;QAAa,aAAU;;0BACtB,8OAAC;;;;;0BACD,8OAAC,kKAAA,CAAA,UAAuB;gBACtB,aAAU;gBACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+WACA;gBAED,GAAG,KAAK;;oBACR;oBACA,iCACC,8OAAC,kKAAA,CAAA,QAAqB;wBACpB,aAAU;wBACV,WAAU;;0CACV,8OAAC,gMAAA,CAAA,QAAK;;;;;0CACN,8OAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAMtC;AAEA,SAAS,aAAa,EACpB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAEf;AAEA,SAAS,aAAa,EACpB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,0DAA0D;QACvE,GAAG,KAAK;;;;;;AAEf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,8OAAC,kKAAA,CAAA,QAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAEf;AAEA,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,8OAAC,kKAAA,CAAA,cAA2B;QAC1B,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAEf","debugId":null}},
    {"offset": {"line": 2427, "column": 0}, "map": {"version":3,"sources":["file:///C:/Dev%20Directory/Blueprints/blueprintfro-v1/src/modules/dashboard/datatable/employee-data-table.js"],"sourcesContent":["\r\n\r\n\"use client\";\r\nimport { useRouter } from \"next/navigation\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Progress } from \"@/components/ui/progress\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogHeader,\r\n  DialogTitle,\r\n  DialogTrigger,\r\n} from \"@/components/ui/dialog\";\r\n\r\nimport {\r\n  LucideCalendar,\r\n  LucideFolder,\r\n  LucideUsers,\r\n  LucideChevronLeft,\r\n  LucideChevronRight,\r\n  ClipboardPenLine,\r\n  Tag,\r\n  UserRound,\r\n  TriangleAlert,\r\n  ChartLine,\r\n  CalendarDays,\r\n  NotebookPen,\r\n} from \"lucide-react\";\r\n\r\nimport { getAllTaskByEmployeeId } from \"@/features/taskSlice\";\r\nimport { fetchProjectsByEmployeeId } from \"@/features/projectSlice\";\r\nimport { fetchTeamsByEmployeeId } from \"@/features/teamSlice\";\r\n\r\nexport function DataTableEmployee({ employeeId }) {\r\n  const dispatch = useDispatch();\r\n  const router = useRouter();\r\n  const [activeTab, setActiveTab] = useState(\"task\");\r\n  const [page, setPage] = useState({ task: 1, projects: 1, team: 1 });\r\n  const [openModal, setOpenModal] = useState(null);\r\n  const [showAll, setShowAll] = useState(false);\r\n  const itemsPerPage = 5;\r\n\r\n  const { employeeTasks = [], isLoading: taskLoading } = useSelector(\r\n    (state) => state.task\r\n  );\r\n  const { employeeProjects = [], status: projectStatus } = useSelector(\r\n    (state) => state.project\r\n  );\r\n  const { teamsByEmployee = [], status: teamStatus } = useSelector(\r\n    (state) => state.team\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (employeeId) {\r\n      dispatch(getAllTaskByEmployeeId(employeeId));\r\n      dispatch(fetchProjectsByEmployeeId(employeeId));\r\n      dispatch(fetchTeamsByEmployeeId(employeeId));\r\n    }\r\n  }, [dispatch, employeeId]);\r\n\r\n  const paginate = (items, pageNum) => {\r\n    const start = (pageNum - 1) * itemsPerPage;\r\n    return items.slice(start, start + itemsPerPage);\r\n  };\r\n\r\n  const renderPagination = (totalItems, tab) => {\r\n    const totalPages = Math.ceil(totalItems / itemsPerPage);\r\n    return (\r\n      <div className=\"flex items-center justify-end gap-4 mt-4 px-4 lg:px-6\">\r\n        <span className=\"text-sm font-medium text-muted-foreground\">\r\n          Page {page[tab]} of {totalPages}\r\n        </span>\r\n        <div className=\"flex items-center gap-2\">\r\n          <Button\r\n            variant=\"outline\"\r\n            size=\"sm\"\r\n            className=\"h-8 w-8 p-0 bg-[#1447e6] text-white border-green-700 hover:bg-green-700\"\r\n            onClick={() =>\r\n              setPage((prev) => ({ ...prev, [tab]: prev[tab] - 1 }))\r\n            }\r\n            disabled={page[tab] === 1}\r\n          >\r\n            <LucideChevronLeft className=\"h-4 w-4\" />\r\n          </Button>\r\n          <Button\r\n            variant=\"outline\"\r\n            size=\"sm\"\r\n            className=\"h-8 w-8 p-0 bg-[#1447e6] text-white border-green-700 hover:bg-green-700\"\r\n            onClick={() =>\r\n              setPage((prev) => ({ ...prev, [tab]: prev[tab] + 1 }))\r\n            }\r\n            disabled={page[tab] === totalPages}\r\n          >\r\n            <LucideChevronRight className=\"h-4 w-4\" />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const getProgressValue = (status) => {\r\n    switch (status) {\r\n      case \"Planned\":\r\n        return 0;\r\n      case \"In Progress\":\r\n        return 50;\r\n      case \"Completed\":\r\n        return 100;\r\n      default:\r\n        return 0;\r\n    }\r\n  };\r\n  const renderModalContent = (item, type) => {\r\n    if (type === \"task\") {\r\n      return (\r\n        <div className=\"grid gap-4 p-4\">\r\n          <h3 className=\"text-lg font-semibold\">{item.title}</h3>\r\n          <p className=\"flex items-center text-sm text-muted-foreground gap-2\">\r\n            <Tag /> Task ID: {item.task_id}\r\n          </p>\r\n          <p className=\"flex items-center text-sm text-muted-foreground gap-2\">\r\n            <ClipboardPenLine /> Project: {item.projectName}\r\n          </p>\r\n          <p className=\"flex items-center text-sm text-muted-foreground gap-2\">\r\n            <UserRound /> Assigned To: {item.assignedToName}\r\n          </p>\r\n          <p className=\"flex items-center text-sm text-muted-foreground gap-2\">\r\n            <TriangleAlert /> Priority: {item.priority}\r\n          </p>\r\n          <p className=\"flex items-center text-sm text-muted-foreground gap-2\">\r\n            <ChartLine /> Status: {item.status}\r\n          </p>\r\n          <p className=\"flex items-center text-sm text-muted-foreground gap-2\">\r\n            <CalendarDays /> Deadline:{\" \"}\r\n            {new Date(item.deadline).toLocaleDateString()}\r\n          </p>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (type === \"project\") {\r\n      return (\r\n        <div className=\"grid gap-4 p-4\">\r\n          <h3 className=\"text-lg font-semibold\">{item.projectName}</h3>\r\n          <p className=\"flex items-center gap-2 text-sm text-muted-foreground\">\r\n            <Tag /> Project ID: {item.projectId}\r\n          </p>\r\n          <p className=\"flex items-center gap-2 text-sm text-muted-foreground\">\r\n            <UserRound /> Team Lead: {item.teamLeadName}\r\n          </p>\r\n          <p className=\"text-sm text-muted-foreground flex items-center gap-3\">\r\n            <p className=\"text-sm text-muted-foreground flex items-center gap-3\">\r\n              <CalendarDays />\r\n              Start Date: {item.startDate}\r\n            </p>\r\n            <CalendarDays />\r\n            End Date: {item.endDate}\r\n          </p>\r\n          <div>\r\n            <p className=\"text-sm font-medium mb-1 text-muted-foreground\">\r\n              Progress\r\n            </p>\r\n            <div className=\"flex items-center gap-2\">\r\n              <Progress\r\n                value={getProgressValue(item.status)}\r\n                className=\"h-2 bg-muted\"\r\n                indicatorClassName=\"bg-[#1447e6]\"\r\n              />\r\n              <span className=\"text-xs text-muted-foreground\">\r\n                {getProgressValue(item.status)}%\r\n              </span>\r\n            </div>\r\n            \r\n          </div>\r\n            <Button\r\n                      className=\"w-1/4 ml-80 bg-[#1447e6]\"\r\n                      onClick={() => router.push(`/project/${item.projectId}`)}\r\n                    >\r\n                      View More\r\n                    </Button>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (type === \"team\") {\r\n      const visibleMembers = showAll\r\n        ? item.teamMembers\r\n        : item.teamMembers.slice(0, 4);\r\n      return (\r\n        <div className=\"grid gap-4 p-4\">\r\n          <h3 className=\"text-lg font-semibold\">{item.projectName}</h3>\r\n          <p className=\"text-sm text-muted-foreground\">\r\n            Team ID: {item.teamId}\r\n          </p>\r\n          <div className=\"bg-muted/30 rounded-lg p-4 border\">\r\n            <h4 className=\"text-sm font-medium mb-2\">Team Lead</h4>\r\n            <p className=\"text-sm\">\r\n              <span className=\"font-semibold\">{item.teamLeadName}</span> (\r\n              {item.teamLeadId})\r\n            </p>\r\n          </div>\r\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3\">\r\n            {visibleMembers.map((member) => (\r\n              <div\r\n                key={member._id}\r\n                className=\"border rounded-lg p-3 bg-muted/20 hover:bg-muted/40\"\r\n              >\r\n                <p className=\"font-semibold\">{member.memberName}</p>\r\n                <p className=\"text-sm text-muted-foreground\">{member.role}</p>\r\n                <p className=\"text-sm text-muted-foreground\">{member.email}</p>\r\n                <p className=\"text-xs text-muted-foreground\">\r\n                  ID: {member.memberId}\r\n                </p>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          {item.teamMembers.length > 4 && (\r\n            <button\r\n              onClick={() => setShowAll((prev) => !prev)}\r\n              className=\"mt-2 text-sm text-primary hover:underline\"\r\n            >\r\n              {showAll ? \"View Less\" : \"View More\"}\r\n            </button>\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4 lg:p-6\">\r\n      <div className=\"bg-background rounded-xl shadow-sm border overflow-hidden\">\r\n        <Tabs value={activeTab} onValueChange={setActiveTab} className=\"w-full\">\r\n          {/* Header Tabs */}\r\n          <div className=\"flex items-center justify-between p-4 border-b\">\r\n            <TabsList className=\"flex w-full sm:w-auto bg-transparent border rounded-lg p-1\">\r\n              <TabsTrigger\r\n                value=\"task\"\r\n                className=\"flex-1 text-sm font-medium cursor-pointer data-[state=active]:bg-[#1447e6] data-[state=active]:text-white py-2 px-3 rounded-md\"\r\n              >\r\n                <LucideCalendar className=\"h-4 w-4 mr-2\" /> Tasks\r\n              </TabsTrigger>\r\n              <TabsTrigger\r\n                value=\"projects\"\r\n                className=\"flex-1 text-sm font-medium cursor-pointer data-[state=active]:bg-[#1447e6] data-[state=active]:text-white py-2 px-3 rounded-md\"\r\n              >\r\n                <LucideFolder className=\"h-4 w-4 mr-2\" /> Projects\r\n                <Badge className=\"ml-2 bg-muted text-muted-foreground\">\r\n                  {employeeProjects.length}\r\n                </Badge>\r\n              </TabsTrigger>\r\n              <TabsTrigger\r\n                value=\"team\"\r\n                className=\"flex-1 text-sm cursor-pointer font-medium data-[state=active]:bg-[#1447e6] data-[state=active]:text-white py-2 px-3 rounded-md\"\r\n              >\r\n                <LucideUsers className=\"h-4 w-4 mr-2\" /> Teams\r\n                <Badge className=\"ml-2 bg-muted text-muted-foreground\">\r\n                  {teamsByEmployee.length}\r\n                </Badge>\r\n              </TabsTrigger>\r\n            </TabsList>\r\n          </div>\r\n\r\n          {/* Tasks */}\r\n             <div className=\"p-4 lg:p-6\">\r\n\r\n          <TabsContent value=\"task\">\r\n            {paginate(employeeTasks, page.task).map((task) => (\r\n              <Dialog\r\n                key={task._id}\r\n                open={openModal === task._id}\r\n                onOpenChange={(open) => setOpenModal(open ? task._id : null)}\r\n              >\r\n                <DialogTrigger asChild>\r\n                  <div className=\"flex items-center justify-between p-4 mb-3 border rounded-lg hover:bg-muted/40 cursor-pointer\">\r\n                    <div className=\"flex items-center gap-4\">\r\n                      <LucideCalendar className=\"h-5 w-5 text-muted-foreground\" />\r\n                      <div>\r\n                        <h3 className=\"text-sm font-semibold\">{task.title}</h3>\r\n                        <p className=\"text-xs text-muted-foreground\">\r\n                          ID: {task.task_id}\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                    <Badge\r\n                      className={\r\n                        task.status === \"Completed\"\r\n                          ? \"bg-[#1447e6] text-white\"\r\n                          : \"bg-muted text-muted-foreground\"\r\n                      }\r\n                    >\r\n                      {task.status}\r\n                    </Badge>\r\n                  </div>\r\n                </DialogTrigger>\r\n                <DialogContent className=\"bg-background rounded-lg max-w-lg\">\r\n                  <DialogHeader>\r\n                    <DialogTitle className=\"flex items-center justify-center gap-3 text-lg font-bold bg-blue-100  p-4 rounded-2xl text-blue-800\">\r\n                      Task Details\r\n                    </DialogTitle>\r\n                  </DialogHeader>\r\n                  {renderModalContent(task, \"task\")}\r\n                </DialogContent>\r\n              </Dialog>\r\n            ))}\r\n            {renderPagination(employeeTasks.length, \"task\")}\r\n          </TabsContent>\r\n\r\n          {/* Projects */}\r\n          <TabsContent value=\"projects\">\r\n            {paginate(employeeProjects, page.projects).map((project) => (\r\n              <Dialog\r\n                key={project.projectId}\r\n                open={openModal === project.projectId}\r\n                onOpenChange={(open) =>\r\n                  setOpenModal(open ? project.projectId : null)\r\n                }\r\n              >\r\n                <DialogTrigger asChild>\r\n                  <div className=\"flex items-center justify-between p-4 mb-3 border rounded-lg hover:bg-muted/40 cursor-pointer\">\r\n                    <div className=\"flex items-center gap-4\">\r\n                      <LucideFolder className=\"h-5 w-5 text-muted-foreground\" />\r\n                      <div>\r\n                        <h3 className=\"text-sm font-semibold\">\r\n                          {project.projectName}\r\n                        </h3>\r\n                        <p className=\"text-xs text-muted-foreground\">\r\n                          Project ID: {project.projectId}\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <Progress\r\n                        value={getProgressValue(project.status)}\r\n                        className=\"h-2 w-24 bg-muted\"\r\n                        indicatorClassName=\"bg-[#1447e6]\"\r\n                      />\r\n                      <span className=\"text-xs text-muted-foreground\">\r\n                        {getProgressValue(project.status)}%\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </DialogTrigger>\r\n                <DialogContent className=\"bg-background rounded-lg max-w-lg\">\r\n                  <DialogHeader>\r\n                    <DialogTitle className=\"flex items-center justify-center gap-3 text-lg font-bold bg-blue-100 p-4 rounded-2xl text-blue-800\">\r\n                      <NotebookPen /> Project Details\r\n                    </DialogTitle>\r\n                  </DialogHeader>\r\n                  {renderModalContent(project, \"project\")}\r\n                </DialogContent>\r\n              </Dialog>\r\n            ))}\r\n            {renderPagination(employeeProjects.length, \"projects\")}\r\n          </TabsContent>\r\n\r\n          {/* Teams */}\r\n          <TabsContent value=\"team\">\r\n            {paginate(teamsByEmployee, page.team).map((team) => (\r\n              <Dialog\r\n                key={team._id}\r\n                open={openModal === team._id}\r\n                onOpenChange={(open) => setOpenModal(open ? team._id : null)}\r\n              >\r\n                <DialogTrigger asChild>\r\n                  <div className=\"flex items-center justify-between p-4 mb-3 border rounded-lg hover:bg-muted/40 cursor-pointer\">\r\n                    <div className=\"flex items-center gap-4\">\r\n                      <LucideUsers className=\"h-5 w-5 text-muted-foreground\" />\r\n                      <div>\r\n                        <h3 className=\"text-sm font-semibold\">\r\n                          {team.projectName}\r\n                        </h3>\r\n                        <p className=\"text-xs text-muted-foreground\">\r\n                          Team ID: {team.teamId}\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                    <Badge className=\"bg-muted text-muted-foreground\">\r\n                      Members: {team.teamMembers.length}\r\n                    </Badge>\r\n                  </div>\r\n                </DialogTrigger>\r\n                <DialogContent className=\"bg-background rounded-lg max-w-lg\">\r\n                  <DialogHeader>\r\n                    <DialogTitle className=\"text-lg text-blue-800 font-semibold\">\r\n                      Team Details\r\n                    </DialogTitle>\r\n                  </DialogHeader>\r\n                  {renderModalContent(team, \"team\")}\r\n                </DialogContent>\r\n              </Dialog>\r\n            ))}\r\n            {renderPagination(teamsByEmployee.length, \"team\")}\r\n          </TabsContent>\r\n             </div>\r\n        </Tabs>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3459, "column": 0}, "map": {"version":3,"sources":["file:///C:/Dev%20Directory/Blueprints/blueprintfro-v1/src/components/ui/label.jsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Label({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    <LabelPrimitive.Root\r\n      data-slot=\"label\"\r\n      className={cn(\r\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\r\n        className\r\n      )}\r\n      {...props} />\r\n  );\r\n}\r\n\r\nexport { Label }\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,SAAS,MAAM,EACb,SAAS,EACT,GAAG,OACJ;IACC,qBACE,8OAAC,iKAAA,CAAA,OAAmB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,uNACA;QAED,GAAG,KAAK;;;;;;AAEf","debugId":null}},
    {"offset": {"line": 3489, "column": 0}, "map": {"version":3,"sources":["file:///C:/Dev%20Directory/Blueprints/blueprintfro-v1/src/utils/formatDate.js"],"sourcesContent":["// lib/formatRange.js\r\nexport function formatRange(start, end) {\r\n  const options = { month: 'short', day: 'numeric' };\r\n  const startStr = start.toLocaleDateString(undefined, options);\r\n  const endStr = end.toLocaleDateString(undefined, options);\r\n\r\n  return `${startStr} – ${endStr}`;\r\n}\r\n\r\n\r\n\r\n\r\n// utils/date.js\r\nexport function formatDateUTC(dateString) {\r\n    if (!dateString) return '';\r\n    return new Date(dateString).toLocaleDateString('en-GB', {\r\n        timeZone: 'UTC',\r\n        day: '2-digit',\r\n        month: 'short',\r\n        year: 'numeric'\r\n    });\r\n}\r\n"],"names":[],"mappings":"AAAA,qBAAqB;;;;;AACd,SAAS,YAAY,KAAK,EAAE,GAAG;IACpC,MAAM,UAAU;QAAE,OAAO;QAAS,KAAK;IAAU;IACjD,MAAM,WAAW,MAAM,kBAAkB,CAAC,WAAW;IACrD,MAAM,SAAS,IAAI,kBAAkB,CAAC,WAAW;IAEjD,OAAO,GAAG,SAAS,GAAG,EAAE,QAAQ;AAClC;AAMO,SAAS,cAAc,UAAU;IACpC,IAAI,CAAC,YAAY,OAAO;IACxB,OAAO,IAAI,KAAK,YAAY,kBAAkB,CAAC,SAAS;QACpD,UAAU;QACV,KAAK;QACL,OAAO;QACP,MAAM;IACV;AACJ","debugId":null}},
    {"offset": {"line": 3518, "column": 0}, "map": {"version":3,"sources":["file:///C:/Dev%20Directory/Blueprints/blueprintfro-v1/src/modules/dashboard/datatable/cpc-data-table.js"],"sourcesContent":["\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from \"@/components/ui/select\";\r\n\r\n\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Progress } from \"@/components/ui/progress\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogHeader,\r\n  DialogTitle,\r\n  DialogTrigger,\r\n} from \"@/components/ui/dialog\";\r\nimport {\r\n  LucideCalendar,\r\n  LucideUsers,\r\n  LucideFolder,\r\n  LucideLoader2,\r\n  LucideChevronLeft,\r\n  LucideChevronRight,\r\n  NotebookPen,\r\n  Tag,\r\n  UserRound,\r\n  CalendarDays,\r\n  ChartLine,\r\n  ClipboardPenLine,\r\n  TriangleAlert,\r\n} from \"lucide-react\";\r\n\r\n// Redux actions\r\nimport { fetchTasksByDeadline } from \"@/features/dashboard/dashboardSlice\";\r\nimport { fetchAllProjects } from \"@/features/projectSlice\";\r\nimport { fetchAllTeams } from \"@/features/teamSlice\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { format } from \"date-fns/format\";\r\nimport { formatDateUTC } from \"@/utils/formatDate\";\r\n\r\n// Skeleton Components\r\nconst TaskSkeleton = () => (\r\n  <div className=\"flex items-center justify-between p-4 mb-3 border border-border rounded-lg animate-pulse\">\r\n    <div className=\"flex items-center gap-4\">\r\n      <div className=\"h-5 w-5 bg-muted rounded\"></div>\r\n      <div>\r\n        <div className=\"h-4 w-32 bg-muted rounded mb-1\"></div>\r\n        <div className=\"h-3 w-16 bg-muted rounded\"></div>\r\n      </div>\r\n    </div>\r\n    <div className=\"h-6 w-20 bg-muted rounded-full\"></div>\r\n  </div>\r\n);\r\n\r\nconst ProjectSkeleton = () => (\r\n  <div className=\"flex items-center justify-between p-4 mb-3 border border-border rounded-lg animate-pulse\">\r\n    <div className=\"flex items-center gap-4\">\r\n      <div className=\"h-5 w-5 bg-muted rounded\"></div>\r\n      <div>\r\n        <div className=\"h-4 w-36 bg-muted rounded mb-1\"></div>\r\n        <div className=\"h-3 w-24 bg-muted rounded\"></div>\r\n      </div>\r\n    </div>\r\n    <div className=\"flex items-center gap-2\">\r\n      <div className=\"h-2 w-24 bg-muted rounded-full\"></div>\r\n      <div className=\"h-3 w-8 bg-muted rounded\"></div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nconst TeamSkeleton = () => (\r\n  <div className=\"flex items-center justify-between p-4 mb-3 border border-border rounded-lg animate-pulse\">\r\n    <div className=\"flex items-center gap-4\">\r\n      <div className=\"h-5 w-5 bg-muted rounded\"></div>\r\n      <div>\r\n        <div className=\"h-4 w-40 bg-muted rounded mb-1\"></div>\r\n        <div className=\"h-3 w-20 bg-muted rounded\"></div>\r\n      </div>\r\n    </div>\r\n    <div className=\"h-6 w-24 bg-muted rounded-full\"></div>\r\n  </div>\r\n);\r\n\r\nconst TabHeaderSkeleton = () => (\r\n  <div className=\"flex items-center justify-between p-4 border-b border-border\">\r\n    <div className=\"flex w-full sm:w-auto bg-transparent border border-border rounded-lg p-1\">\r\n      <div className=\"flex-1 h-10 bg-muted rounded-md mx-1 animate-pulse\"></div>\r\n      <div className=\"flex-1 h-10 bg-muted rounded-md mx-1 animate-pulse\"></div>\r\n      <div className=\"flex-1 h-10 bg-muted rounded-md mx-1 animate-pulse\"></div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport function DataTable() {\r\n  const dispatch = useDispatch();\r\n  const router = useRouter();\r\n  const [activeTab, setActiveTab] = useState(\"task\");\r\n  const [page, setPage] = useState({ task: 1, projects: 1, team: 1 });\r\n  const [openModal, setOpenModal] = useState(null);\r\n  const [showAll, setShowAll] = useState(false);\r\n  const itemsPerPage = 5;\r\n\r\n  // Selectors\r\n  const { data, error, status } = useSelector(\r\n    (state) => state.dashboard.deadlineTasks\r\n  );\r\n  const { projects = [], status: projectStatus } = useSelector(\r\n    (state) => state.project\r\n  );\r\n  const { allTeams, status: teamStatus } = useSelector((state) => state.team);\r\n\r\n  // Fetch data on mount\r\n  useEffect(() => {\r\n    dispatch(fetchTasksByDeadline());\r\n    dispatch(fetchAllProjects());\r\n    dispatch(fetchAllTeams());\r\n  }, [dispatch]);\r\n\r\n  // Pagination logic\r\n  const paginate = (items, page) => {\r\n    const start = (page - 1) * itemsPerPage;\r\n    return items.slice(start, start + itemsPerPage);\r\n  };\r\n\r\n  const renderPagination = (totalItems, tab) => {\r\n    const totalPages = Math.ceil(totalItems / itemsPerPage);\r\n    return (\r\n      <div className=\"flex items-center justify-end gap-4 mt-4 px-4 lg:px-6\">\r\n        <span className=\"text-sm font-medium text-muted-foreground\">\r\n          Page {page[tab]} of {totalPages}\r\n        </span>\r\n        <div className=\"flex items-center gap-2\">\r\n          <Button\r\n            variant=\"outline\"\r\n            size=\"sm\"\r\n            className=\"h-8 w-8 p-0 bg-[#1447e6] text-white border-green-700 hover:bg-green-700 hover:text-white transition-all duration-200\"\r\n            onClick={() =>\r\n              setPage((prev) => ({ ...prev, [tab]: prev[tab] - 1 }))\r\n            }\r\n            disabled={page[tab] === 1}\r\n          >\r\n            <LucideChevronLeft className=\"h-4 w-4\" />\r\n            <span className=\"sr-only\">Previous page</span>\r\n          </Button>\r\n          <Button\r\n            variant=\"outline\"\r\n            size=\"sm\"\r\n            className=\"h-8 w-8 p-0 bg-[#1447e6] text-white border-green-700 hover:bg-green-700 hover:text-white transition-all duration-200\"\r\n            onClick={() =>\r\n              setPage((prev) => ({ ...prev, [tab]: prev[tab] + 1 }))\r\n            }\r\n            disabled={page[tab] === totalPages}\r\n          >\r\n            <LucideChevronRight className=\"h-4 w-4\" />\r\n            <span className=\"sr-only\">Next page</span>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Function to get progress percentage based on status\r\n  const getProgressValue = (status) => {\r\n    switch (status) {\r\n      case \"Planned\":\r\n        return 0;\r\n      case \"In Progress\":\r\n        return 50;\r\n      case \"Completed\":\r\n        return 100;\r\n      default:\r\n        return 0;\r\n    }\r\n  };\r\n\r\n  // Render modal content based on tab and item\r\n  const renderModalContent = (item, type) => {\r\n    if (type === \"task\") {\r\n      return (\r\n        <div className=\"grid gap-4 p-4\">\r\n          <h3 className=\"text-lg font-semibold text-foreground\">\r\n            {item.title}\r\n          </h3>\r\n          <p className=\"text-sm text-muted-foreground flex items-center gap-2\">\r\n            <Tag />\r\n            Task ID: {item.task_id}\r\n          </p>\r\n          <p className=\"text-sm text-muted-foreground flex items-center gap-2\">\r\n            <ClipboardPenLine />\r\n            Project: {item.projectName}\r\n          </p>\r\n          <p className=\"text-sm text-muted-foreground flex items-center gap-2\">\r\n            <UserRound />\r\n            Assigned To: {item.assignedToName}\r\n          </p>\r\n          <p className=\"text-sm text-muted-foreground flex items-center gap-2\">\r\n            <TriangleAlert />\r\n            Priority: {item.priority}\r\n          </p>\r\n          <p className=\"text-sm text-muted-foreground flex items-center gap-2\">\r\n            <ChartLine />\r\n            Status: {item.status}\r\n          </p>\r\n          <p className=\"text-sm text-muted-foreground flex items-center gap-2\">\r\n            <CalendarDays />\r\n            Deadline: {formatDateUTC(item.deadline) || \"N/A\"}\r\n          </p>\r\n        </div>\r\n      );\r\n    } else if (type === \"project\") {\r\n      return (\r\n        <div className=\"grid gap-4 p-4\">\r\n          <h3 className=\"text-lg font-semibold text-foreground\">\r\n            {item.projectName}\r\n          </h3>\r\n          <p className=\"text-sm text-muted-foreground flex items-center gap-3\">\r\n            <Tag />\r\n            Project ID: {item.projectId}\r\n          </p>\r\n\r\n          <p className=\"text-sm text-muted-foreground flex items-center gap-3\">\r\n            <UserRound />\r\n            Team Lead: {item.teamLeadName}\r\n          </p>\r\n          <p className=\"text-sm text-muted-foreground flex items-center gap-3\">\r\n            <CalendarDays />\r\n            Start Date: {item.startDate}\r\n          </p>\r\n          <p className=\"text-sm text-muted-foreground flex items-center gap-3\">\r\n            <CalendarDays />\r\n            End Date: {item.endDate}\r\n          </p>\r\n          <div>\r\n            <p className=\"text-sm font-medium text-muted-foreground mb-1\">\r\n              Progress\r\n            </p>\r\n            <div className=\"flex items-center gap-2\">\r\n              <Progress\r\n                value={getProgressValue(item.status)} // Replace with actual progress data\r\n                className=\"h-2 bg-muted\"\r\n                indicatorClassName=\"bg-[#1447e6]\"\r\n              />\r\n              <span className=\"text-xs text-gray-600 font-medium\">\r\n                {getProgressValue(item.status)}%\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <Button\r\n            className=\"w-1/4 ml-80 bg-[#1447e6]\"\r\n            onClick={() => router.push(`/project/${item.projectId}`)}\r\n          >\r\n            View More\r\n          </Button>\r\n        </div>\r\n      );\r\n    } else if (type === \"team\") {\r\n      const visibleMembers = showAll\r\n        ? item.teamMembers\r\n        : item.teamMembers.slice(0, 4);\r\n\r\n      return (\r\n        <div className=\"grid gap-4 p-4\">\r\n          <h3 className=\"text-lg font-semibold text-foreground\">\r\n            {item.projectName}\r\n          </h3>\r\n          <p className=\"text-sm text-muted-foreground\">\r\n            Project ID: {item.projectId}\r\n          </p>\r\n          <p className=\"text-sm text-muted-foreground\">\r\n            Team ID: {item.teamId}\r\n          </p>\r\n          <div className=\"bg-muted/30 rounded-lg p-4 border border-border\">\r\n            <h4 className=\"text-sm font-medium text-foreground mb-2\">\r\n              Team Lead\r\n            </h4>\r\n            <p className=\"text-sm text-muted-foreground\">\r\n              <span className=\"font-semibold\">{item.teamLeadName}</span> (\r\n              {item.teamLeadId})\r\n            </p>\r\n          </div>\r\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3\">\r\n            {visibleMembers.map((member) => (\r\n              <div\r\n                key={member._id}\r\n                className=\"border border-border rounded-lg p-3 bg-muted/20 hover:bg-muted/50 transition-all duration-200\"\r\n              >\r\n                <p className=\"font-semibold text-foreground\">\r\n                  {member.memberName}\r\n                </p>\r\n                <p className=\"text-sm text-muted-foreground\">{member.role}</p>\r\n                <p className=\"text-sm text-muted-foreground\">{member.email}</p>\r\n                <p className=\"text-xs text-muted-foreground\">\r\n                  ID: {member.memberId}\r\n                </p>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          {item.teamMembers.length > 4 && (\r\n            <button\r\n              onClick={() => setShowAll((prev) => !prev)}\r\n              className=\"mt-2 text-sm text-primary hover:underline self-start\"\r\n            >\r\n              {showAll ? \"View Less\" : \"View More\"}\r\n            </button>\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  // Check if all data is still loading for initial render\r\n  const allDataLoading =\r\n    status === \"loading\" &&\r\n    projectStatus === \"loading\" &&\r\n    teamStatus === \"loading\";\r\n\r\n  return (\r\n    <div className=\"p-4 lg:p-6\">\r\n      <div className=\"bg-background rounded-xl shadow-sm border border-border overflow-hidden\">\r\n        {allDataLoading ? (\r\n          // Show skeleton for entire component on initial load\r\n          <>\r\n            <TabHeaderSkeleton />\r\n            <div className=\"p-4 lg:p-6\">\r\n              {Array.from({ length: 5 }).map((_, index) => (\r\n                <TaskSkeleton key={index} />\r\n              ))}\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <Tabs\r\n            defaultValue=\"task\"\r\n            value={activeTab}\r\n            onValueChange={setActiveTab}\r\n            className=\"w-full flex flex-col\"\r\n          >\r\n            {/* Header */}\r\n            <div className=\"flex items-center justify-between p-4 border-b border-border \">\r\n              <TabsList className=\"flex w-full sm:w-auto bg-transparent border border-border rounded-lg p-1\">\r\n                <TabsTrigger\r\n                  value=\"task\"\r\n                  className=\"flex-1 cursor-pointer text-sm font-medium text-foreground data-[state=active]:bg-[#1447e6] data-[state=active]:text-white rounded-md py-2 px-3 transition-all duration-200 hover:bg-muted\"\r\n                >\r\n                  <LucideCalendar className=\"h-4 w-4 mr-2\" /> Tasks\r\n                </TabsTrigger>\r\n                <TabsTrigger\r\n                  value=\"projects\"\r\n                  className=\"flex-1 text-sm cursor-pointer font-medium text-foreground data-[state=active]:bg-[#1447e6] data-[state=active]:text-white rounded-md py-2 px-3 transition-all duration-200 hover:bg-muted\"\r\n                >\r\n                  <LucideFolder className=\"h-4 w-4 mr-2\" /> Projects\r\n                  <Badge\r\n                    variant=\"secondary\"\r\n                    className=\"ml-2 bg-muted text-muted-foreground font-medium text-xs\"\r\n                  >\r\n                    {projects.length}\r\n                  </Badge>\r\n                </TabsTrigger>\r\n                <TabsTrigger\r\n                  value=\"team\"\r\n                  className=\"flex-1 cursor-pointer text-sm font-medium text-foreground data-[state=active]:bg-[#1447e6] data-[state=active]:text-white rounded-md py-2 px-3 transition-all duration-200 hover:bg-muted\"\r\n                >\r\n                  <LucideUsers className=\"h-4 w-4 mr-2\" /> Teams\r\n                  <Badge\r\n                    variant=\"secondary\"\r\n                    className=\"ml-2 bg-muted text-muted-foreground font-medium text-xs\"\r\n                  >\r\n                    {allTeams?.length || 0}\r\n                  </Badge>\r\n                </TabsTrigger>\r\n              </TabsList>\r\n              <Select defaultValue=\"task\" onValueChange={setActiveTab}>\r\n                <SelectTrigger className=\"w-32 sm:hidden\" size=\"sm\">\r\n                  <SelectValue placeholder=\"Select view\" />\r\n                </SelectTrigger>\r\n                <SelectContent>\r\n                  <SelectItem value=\"task\">Tasks</SelectItem>\r\n                  <SelectItem value=\"projects\">Projects</SelectItem>\r\n                  <SelectItem value=\"team\">Teams</SelectItem>\r\n                </SelectContent>\r\n              </Select>\r\n            </div>\r\n\r\n            {/* Content */}\r\n            <div className=\"p-4 lg:p-6\">\r\n              {/* Tasks Tab */}\r\n              <TabsContent value=\"task\" className=\"mt-0\">\r\n                {status === \"loading\" && (\r\n                  <div className=\"space-y-3\">\r\n                    {Array.from({ length: 5 }).map((_, index) => (\r\n                      <TaskSkeleton key={index} />\r\n                    ))}\r\n                  </div>\r\n                )}\r\n                {status === \"failed\" && (\r\n                  <div className=\"text-center text-sm  min-h-[50vh] flex justify-center items-center\">\r\n                    No tasks available\r\n                  </div>\r\n                )}\r\n                {status === \"succeeded\" && data?.data?.length > 0 ? (\r\n                  <>\r\n                    {paginate(data.data, page.task).map((task) => (\r\n                      <Dialog\r\n                        key={task._id}\r\n                        open={openModal === task._id}\r\n                        onOpenChange={(open) =>\r\n                          setOpenModal(open ? task._id : null)\r\n                        }\r\n                      >\r\n                        <DialogTrigger asChild>\r\n                          <div className=\"flex items-center justify-between p-4 mb-3 border border-border rounded-lg hover:bg-muted/50 transition-all duration-200 cursor-pointer\">\r\n                            <div className=\"flex items-center gap-4\">\r\n                              <LucideCalendar className=\"h-5 w-5 text-muted-foreground\" />\r\n                              <div>\r\n                                <h3 className=\"text-sm font-semibold text-foreground\">\r\n                                  {task.title}\r\n                                </h3>\r\n                                <p className=\"text-xs text-muted-foreground\">\r\n                                 Task ID: {task.task_id}\r\n                                </p>\r\n                              </div>\r\n                            </div>\r\n                            <Badge\r\n                              className={\r\n                                task.status === \"Completed\"\r\n                                  ? \"bg-[#1447e6] text-white\"\r\n                                  : \"bg-muted text-muted-foreground\"\r\n                              }\r\n                            >\r\n                              {task.status}\r\n                            </Badge>\r\n                          </div>\r\n                        </DialogTrigger>\r\n                        <DialogContent className=\"bg-background border-border rounded-lg max-w-lg\">\r\n                          <DialogHeader>\r\n                            <DialogTitle className=\"flex items-center justify-center gap-3 text-[22px] text-bold sm:text-left bg-blue-100 text-blue-800 p-4 rounded-2xl \">\r\n                              Task Details\r\n                            </DialogTitle>\r\n                          </DialogHeader>\r\n                          {renderModalContent(task, \"task\")}\r\n                        </DialogContent>\r\n                      </Dialog>\r\n                    ))}\r\n                    {renderPagination(data.data.length, \"task\")}\r\n                  </>\r\n                ) : (\r\n                  status === \"succeeded\" && (\r\n                    <div className=\"text-center text-sm text-muted-foreground min-h-[50vh] flex justify-center items-center\">\r\n                      No tasks available\r\n                    </div>\r\n                  )\r\n                )}\r\n              </TabsContent>\r\n\r\n              {/* Projects Tab */}\r\n              <TabsContent value=\"projects\" className=\"mt-0\">\r\n                {projectStatus === \"loading\" && (\r\n                  <div className=\"space-y-3\">\r\n                    {Array.from({ length: 5 }).map((_, index) => (\r\n                      <ProjectSkeleton key={index} />\r\n                    ))}\r\n                  </div>\r\n                )}\r\n                {projects.length > 0 ? (\r\n                  <>\r\n                    {paginate(projects, page.projects).map((project) => (\r\n                      <Dialog\r\n                        key={project.projectId}\r\n                        open={openModal === project.projectId}\r\n                        onOpenChange={(open) =>\r\n                          setOpenModal(open ? project.projectId : null)\r\n                        }\r\n                      >\r\n                        <DialogTrigger asChild>\r\n                          <div className=\"flex items-center justify-between p-4 mb-3 border border-border rounded-lg hover:bg-muted/50 transition-all duration-200 cursor-pointer\">\r\n                            <div className=\"flex items-center gap-4\">\r\n                              <LucideFolder className=\"h-5 w-5 text-muted-foreground\" />\r\n                              <div>\r\n                                <h3 className=\"text-sm font-semibold text-foreground\">\r\n                                  {project.projectName}\r\n                                </h3>\r\n                                <p className=\"text-xs text-muted-foreground\">\r\n                                  Project ID: {project.projectId}\r\n                                </p>\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"flex items-center gap-2\">\r\n                              <Progress\r\n                                value={getProgressValue(project.status)} // Replace with actual progress data\r\n                                className=\"h-2 w-24 bg-muted\"\r\n                                indicatorClassName=\"bg-[#1447e6]\"\r\n                              />\r\n                              <span className=\"text-xs text-gray-600 font-medium\">\r\n                                {getProgressValue(project.status)}%\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                        </DialogTrigger>\r\n                        <DialogContent className=\"bg-background border-border rounded-lg max-w-lg\">\r\n                          <DialogHeader>\r\n                            <DialogTitle className=\"flex items-center justify-center gap-3 text-[22px] text-bold sm:text-left  p-4 rounded-2xl bg-blue-100 text-blue-800\">\r\n                              {\" \"}\r\n                              <NotebookPen />\r\n                              Project Details\r\n                            </DialogTitle>\r\n                          </DialogHeader>\r\n                          {renderModalContent(project, \"project\")}\r\n                        </DialogContent>\r\n                      </Dialog>\r\n                    ))}\r\n                    {renderPagination(projects.length, \"projects\")}\r\n                  </>\r\n                ) : (\r\n                  projectStatus === \"succeeded\" && (\r\n                    <div className=\"text-center text-sm text-muted-foreground min-h-[50vh] flex justify-center items-center\">\r\n                      No projects found\r\n                    </div>\r\n                  )\r\n                )}\r\n              </TabsContent>\r\n\r\n              {/* Team Tab */}\r\n              <TabsContent value=\"team\" className=\"mt-0\">\r\n                {teamStatus === \"loading\" && (\r\n                  <div className=\"space-y-3\">\r\n                    {Array.from({ length: 5 }).map((_, index) => (\r\n                      <TeamSkeleton key={index} />\r\n                    ))}\r\n                  </div>\r\n                )}\r\n                {teamStatus === \"succeeded\" && allTeams?.length > 0 ? (\r\n                  <>\r\n                    {paginate(allTeams, page.team).map((team) => (\r\n                      <Dialog\r\n                        key={team._id}\r\n                        open={openModal === team._id}\r\n                        onOpenChange={(open) =>\r\n                          setOpenModal(open ? team._id : null)\r\n                        }\r\n                      >\r\n                        <DialogTrigger asChild>\r\n                          <div className=\"flex items-center justify-between p-4 mb-3 border border-border rounded-lg hover:bg-muted/50 transition-all duration-200 cursor-pointer\">\r\n                            <div className=\"flex items-center gap-4\">\r\n                              <LucideUsers className=\"h-5 w-5 text-muted-foreground\" />\r\n                              <div>\r\n                                <h3 className=\"text-sm font-semibold text-foreground\">\r\n                                  {team.projectName}\r\n                                </h3>\r\n                                <p className=\"text-xs text-muted-foreground\">\r\n                                  Team ID: {team.teamId}\r\n                                </p>\r\n                              </div>\r\n                            </div>\r\n                            <Badge className=\"bg-muted text-muted-foreground\">\r\n                              Members: {team.teamMembers.length}\r\n                            </Badge>\r\n                          </div>\r\n                        </DialogTrigger>\r\n                        <DialogContent className=\"bg-background border-border rounded-lg max-w-lg\">\r\n                          <DialogHeader>\r\n                            <DialogTitle className=\"text-foreground\">\r\n                              Team Details\r\n                            </DialogTitle>\r\n                          </DialogHeader>\r\n                          {renderModalContent(team, \"team\")}\r\n                        </DialogContent>\r\n                      </Dialog>\r\n                    ))}\r\n                    {renderPagination(allTeams.length, \"team\")}\r\n                  </>\r\n                ) : (\r\n                  teamStatus === \"succeeded\" && (\r\n                    <div className=\"text-center text-sm text-muted-foreground min-h-[50vh] flex justify-center items-center\">\r\n                      No team members found\r\n                    </div>\r\n                  )\r\n                )}\r\n              </TabsContent>\r\n            </div>\r\n          </Tabs>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AAEA;AACA;AACA;AACA;AASA;AACA;AACA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA,gBAAgB;AAChB;AACA;AACA;AACA;AAEA;AAhDA;;;;;;;;;;;;;;;;;;;AAkDA,sBAAsB;AACtB,MAAM,eAAe,kBACnB,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;;;;;kCACf,8OAAC;;0CACC,8OAAC;gCAAI,WAAU;;;;;;0CACf,8OAAC;gCAAI,WAAU;;;;;;;;;;;;;;;;;;0BAGnB,8OAAC;gBAAI,WAAU;;;;;;;;;;;;AAInB,MAAM,kBAAkB,kBACtB,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;;;;;kCACf,8OAAC;;0CACC,8OAAC;gCAAI,WAAU;;;;;;0CACf,8OAAC;gCAAI,WAAU;;;;;;;;;;;;;;;;;;0BAGnB,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;;;;;kCACf,8OAAC;wBAAI,WAAU;;;;;;;;;;;;;;;;;;AAKrB,MAAM,eAAe,kBACnB,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;;;;;kCACf,8OAAC;;0CACC,8OAAC;gCAAI,WAAU;;;;;;0CACf,8OAAC;gCAAI,WAAU;;;;;;;;;;;;;;;;;;0BAGnB,8OAAC;gBAAI,WAAU;;;;;;;;;;;;AAInB,MAAM,oBAAoB,kBACxB,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;;;;;;8BACf,8OAAC;oBAAI,WAAU;;;;;;8BACf,8OAAC;oBAAI,WAAU;;;;;;;;;;;;;;;;;AAKd,SAAS;IACd,MAAM,WAAW,CAAA,GAAA,yJAAA,CAAA,cAAW,AAAD;IAC3B,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;QAAE,MAAM;QAAG,UAAU;QAAG,MAAM;IAAE;IACjE,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,eAAe;IAErB,YAAY;IACZ,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,yJAAA,CAAA,cAAW,AAAD,EACxC,CAAC,QAAU,MAAM,SAAS,CAAC,aAAa;IAE1C,MAAM,EAAE,WAAW,EAAE,EAAE,QAAQ,aAAa,EAAE,GAAG,CAAA,GAAA,yJAAA,CAAA,cAAW,AAAD,EACzD,CAAC,QAAU,MAAM,OAAO;IAE1B,MAAM,EAAE,QAAQ,EAAE,QAAQ,UAAU,EAAE,GAAG,CAAA,GAAA,yJAAA,CAAA,cAAW,AAAD,EAAE,CAAC,QAAU,MAAM,IAAI;IAE1E,sBAAsB;IACtB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,SAAS,CAAA,GAAA,8IAAA,CAAA,uBAAoB,AAAD;QAC5B,SAAS,CAAA,GAAA,+HAAA,CAAA,mBAAgB,AAAD;QACxB,SAAS,CAAA,GAAA,4HAAA,CAAA,gBAAa,AAAD;IACvB,GAAG;QAAC;KAAS;IAEb,mBAAmB;IACnB,MAAM,WAAW,CAAC,OAAO;QACvB,MAAM,QAAQ,CAAC,OAAO,CAAC,IAAI;QAC3B,OAAO,MAAM,KAAK,CAAC,OAAO,QAAQ;IACpC;IAEA,MAAM,mBAAmB,CAAC,YAAY;QACpC,MAAM,aAAa,KAAK,IAAI,CAAC,aAAa;QAC1C,qBACE,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAK,WAAU;;wBAA4C;wBACpD,IAAI,CAAC,IAAI;wBAAC;wBAAK;;;;;;;8BAEvB,8OAAC;oBAAI,WAAU;;sCACb,8OAAC,kIAAA,CAAA,SAAM;4BACL,SAAQ;4BACR,MAAK;4BACL,WAAU;4BACV,SAAS,IACP,QAAQ,CAAC,OAAS,CAAC;wCAAE,GAAG,IAAI;wCAAE,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,GAAG;oCAAE,CAAC;4BAEtD,UAAU,IAAI,CAAC,IAAI,KAAK;;8CAExB,8OAAC,0NAAA,CAAA,oBAAiB;oCAAC,WAAU;;;;;;8CAC7B,8OAAC;oCAAK,WAAU;8CAAU;;;;;;;;;;;;sCAE5B,8OAAC,kIAAA,CAAA,SAAM;4BACL,SAAQ;4BACR,MAAK;4BACL,WAAU;4BACV,SAAS,IACP,QAAQ,CAAC,OAAS,CAAC;wCAAE,GAAG,IAAI;wCAAE,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,GAAG;oCAAE,CAAC;4BAEtD,UAAU,IAAI,CAAC,IAAI,KAAK;;8CAExB,8OAAC,4NAAA,CAAA,qBAAkB;oCAAC,WAAU;;;;;;8CAC9B,8OAAC;oCAAK,WAAU;8CAAU;;;;;;;;;;;;;;;;;;;;;;;;IAKpC;IAEA,sDAAsD;IACtD,MAAM,mBAAmB,CAAC;QACxB,OAAQ;YACN,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT;gBACE,OAAO;QACX;IACF;IAEA,6CAA6C;IAC7C,MAAM,qBAAqB,CAAC,MAAM;QAChC,IAAI,SAAS,QAAQ;YACnB,qBACE,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCACX,KAAK,KAAK;;;;;;kCAEb,8OAAC;wBAAE,WAAU;;0CACX,8OAAC,gMAAA,CAAA,MAAG;;;;;4BAAG;4BACG,KAAK,OAAO;;;;;;;kCAExB,8OAAC;wBAAE,WAAU;;0CACX,8OAAC,kOAAA,CAAA,mBAAgB;;;;;4BAAG;4BACV,KAAK,WAAW;;;;;;;kCAE5B,8OAAC;wBAAE,WAAU;;0CACX,8OAAC,gNAAA,CAAA,YAAS;;;;;4BAAG;4BACC,KAAK,cAAc;;;;;;;kCAEnC,8OAAC;wBAAE,WAAU;;0CACX,8OAAC,wNAAA,CAAA,gBAAa;;;;;4BAAG;4BACN,KAAK,QAAQ;;;;;;;kCAE1B,8OAAC;wBAAE,WAAU;;0CACX,8OAAC,gNAAA,CAAA,YAAS;;;;;4BAAG;4BACJ,KAAK,MAAM;;;;;;;kCAEtB,8OAAC;wBAAE,WAAU;;0CACX,8OAAC,sNAAA,CAAA,eAAY;;;;;4BAAG;4BACL,CAAA,GAAA,0HAAA,CAAA,gBAAa,AAAD,EAAE,KAAK,QAAQ,KAAK;;;;;;;;;;;;;QAInD,OAAO,IAAI,SAAS,WAAW;YAC7B,qBACE,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCACX,KAAK,WAAW;;;;;;kCAEnB,8OAAC;wBAAE,WAAU;;0CACX,8OAAC,gMAAA,CAAA,MAAG;;;;;4BAAG;4BACM,KAAK,SAAS;;;;;;;kCAG7B,8OAAC;wBAAE,WAAU;;0CACX,8OAAC,gNAAA,CAAA,YAAS;;;;;4BAAG;4BACD,KAAK,YAAY;;;;;;;kCAE/B,8OAAC;wBAAE,WAAU;;0CACX,8OAAC,sNAAA,CAAA,eAAY;;;;;4BAAG;4BACH,KAAK,SAAS;;;;;;;kCAE7B,8OAAC;wBAAE,WAAU;;0CACX,8OAAC,sNAAA,CAAA,eAAY;;;;;4BAAG;4BACL,KAAK,OAAO;;;;;;;kCAEzB,8OAAC;;0CACC,8OAAC;gCAAE,WAAU;0CAAiD;;;;;;0CAG9D,8OAAC;gCAAI,WAAU;;kDACb,8OAAC,oIAAA,CAAA,WAAQ;wCACP,OAAO,iBAAiB,KAAK,MAAM;wCACnC,WAAU;wCACV,oBAAmB;;;;;;kDAErB,8OAAC;wCAAK,WAAU;;4CACb,iBAAiB,KAAK,MAAM;4CAAE;;;;;;;;;;;;;;;;;;;kCAIrC,8OAAC,kIAAA,CAAA,SAAM;wBACL,WAAU;wBACV,SAAS,IAAM,OAAO,IAAI,CAAC,CAAC,SAAS,EAAE,KAAK,SAAS,EAAE;kCACxD;;;;;;;;;;;;QAKP,OAAO,IAAI,SAAS,QAAQ;YAC1B,MAAM,iBAAiB,UACnB,KAAK,WAAW,GAChB,KAAK,WAAW,CAAC,KAAK,CAAC,GAAG;YAE9B,qBACE,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCACX,KAAK,WAAW;;;;;;kCAEnB,8OAAC;wBAAE,WAAU;;4BAAgC;4BAC9B,KAAK,SAAS;;;;;;;kCAE7B,8OAAC;wBAAE,WAAU;;4BAAgC;4BACjC,KAAK,MAAM;;;;;;;kCAEvB,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAG,WAAU;0CAA2C;;;;;;0CAGzD,8OAAC;gCAAE,WAAU;;kDACX,8OAAC;wCAAK,WAAU;kDAAiB,KAAK,YAAY;;;;;;oCAAQ;oCACzD,KAAK,UAAU;oCAAC;;;;;;;;;;;;;kCAGrB,8OAAC;wBAAI,WAAU;kCACZ,eAAe,GAAG,CAAC,CAAC,uBACnB,8OAAC;gCAEC,WAAU;;kDAEV,8OAAC;wCAAE,WAAU;kDACV,OAAO,UAAU;;;;;;kDAEpB,8OAAC;wCAAE,WAAU;kDAAiC,OAAO,IAAI;;;;;;kDACzD,8OAAC;wCAAE,WAAU;kDAAiC,OAAO,KAAK;;;;;;kDAC1D,8OAAC;wCAAE,WAAU;;4CAAgC;4CACtC,OAAO,QAAQ;;;;;;;;+BATjB,OAAO,GAAG;;;;;;;;;;oBAcpB,KAAK,WAAW,CAAC,MAAM,GAAG,mBACzB,8OAAC;wBACC,SAAS,IAAM,WAAW,CAAC,OAAS,CAAC;wBACrC,WAAU;kCAET,UAAU,cAAc;;;;;;;;;;;;QAKnC;IACF;IAEA,wDAAwD;IACxD,MAAM,iBACJ,WAAW,aACX,kBAAkB,aAClB,eAAe;IAEjB,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;sBACZ,iBACC,qDAAqD;0BACrD;;kCACE,8OAAC;;;;;kCACD,8OAAC;wBAAI,WAAU;kCACZ,MAAM,IAAI,CAAC;4BAAE,QAAQ;wBAAE,GAAG,GAAG,CAAC,CAAC,GAAG,sBACjC,8OAAC,kBAAkB;;;;;;;;;;;6CAKzB,8OAAC,gIAAA,CAAA,OAAI;gBACH,cAAa;gBACb,OAAO;gBACP,eAAe;gBACf,WAAU;;kCAGV,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,gIAAA,CAAA,WAAQ;gCAAC,WAAU;;kDAClB,8OAAC,gIAAA,CAAA,cAAW;wCACV,OAAM;wCACN,WAAU;;0DAEV,8OAAC,gNAAA,CAAA,iBAAc;gDAAC,WAAU;;;;;;4CAAiB;;;;;;;kDAE7C,8OAAC,gIAAA,CAAA,cAAW;wCACV,OAAM;wCACN,WAAU;;0DAEV,8OAAC,4MAAA,CAAA,eAAY;gDAAC,WAAU;;;;;;4CAAiB;0DACzC,8OAAC,iIAAA,CAAA,QAAK;gDACJ,SAAQ;gDACR,WAAU;0DAET,SAAS,MAAM;;;;;;;;;;;;kDAGpB,8OAAC,gIAAA,CAAA,cAAW;wCACV,OAAM;wCACN,WAAU;;0DAEV,8OAAC,0MAAA,CAAA,cAAW;gDAAC,WAAU;;;;;;4CAAiB;0DACxC,8OAAC,iIAAA,CAAA,QAAK;gDACJ,SAAQ;gDACR,WAAU;0DAET,UAAU,UAAU;;;;;;;;;;;;;;;;;;0CAI3B,8OAAC,kIAAA,CAAA,SAAM;gCAAC,cAAa;gCAAO,eAAe;;kDACzC,8OAAC,kIAAA,CAAA,gBAAa;wCAAC,WAAU;wCAAiB,MAAK;kDAC7C,cAAA,8OAAC,kIAAA,CAAA,cAAW;4CAAC,aAAY;;;;;;;;;;;kDAE3B,8OAAC,kIAAA,CAAA,gBAAa;;0DACZ,8OAAC,kIAAA,CAAA,aAAU;gDAAC,OAAM;0DAAO;;;;;;0DACzB,8OAAC,kIAAA,CAAA,aAAU;gDAAC,OAAM;0DAAW;;;;;;0DAC7B,8OAAC,kIAAA,CAAA,aAAU;gDAAC,OAAM;0DAAO;;;;;;;;;;;;;;;;;;;;;;;;kCAM/B,8OAAC;wBAAI,WAAU;;0CAEb,8OAAC,gIAAA,CAAA,cAAW;gCAAC,OAAM;gCAAO,WAAU;;oCACjC,WAAW,2BACV,8OAAC;wCAAI,WAAU;kDACZ,MAAM,IAAI,CAAC;4CAAE,QAAQ;wCAAE,GAAG,GAAG,CAAC,CAAC,GAAG,sBACjC,8OAAC,kBAAkB;;;;;;;;;;oCAIxB,WAAW,0BACV,8OAAC;wCAAI,WAAU;kDAAqE;;;;;;oCAIrF,WAAW,eAAe,MAAM,MAAM,SAAS,kBAC9C;;4CACG,SAAS,KAAK,IAAI,EAAE,KAAK,IAAI,EAAE,GAAG,CAAC,CAAC,qBACnC,8OAAC,kIAAA,CAAA,SAAM;oDAEL,MAAM,cAAc,KAAK,GAAG;oDAC5B,cAAc,CAAC,OACb,aAAa,OAAO,KAAK,GAAG,GAAG;;sEAGjC,8OAAC,kIAAA,CAAA,gBAAa;4DAAC,OAAO;sEACpB,cAAA,8OAAC;gEAAI,WAAU;;kFACb,8OAAC;wEAAI,WAAU;;0FACb,8OAAC,gNAAA,CAAA,iBAAc;gFAAC,WAAU;;;;;;0FAC1B,8OAAC;;kGACC,8OAAC;wFAAG,WAAU;kGACX,KAAK,KAAK;;;;;;kGAEb,8OAAC;wFAAE,WAAU;;4FAAgC;4FAClC,KAAK,OAAO;;;;;;;;;;;;;;;;;;;kFAI3B,8OAAC,iIAAA,CAAA,QAAK;wEACJ,WACE,KAAK,MAAM,KAAK,cACZ,4BACA;kFAGL,KAAK,MAAM;;;;;;;;;;;;;;;;;sEAIlB,8OAAC,kIAAA,CAAA,gBAAa;4DAAC,WAAU;;8EACvB,8OAAC,kIAAA,CAAA,eAAY;8EACX,cAAA,8OAAC,kIAAA,CAAA,cAAW;wEAAC,WAAU;kFAAuH;;;;;;;;;;;gEAI/I,mBAAmB,MAAM;;;;;;;;mDApCvB,KAAK,GAAG;;;;;4CAwChB,iBAAiB,KAAK,IAAI,CAAC,MAAM,EAAE;;uDAGtC,WAAW,6BACT,8OAAC;wCAAI,WAAU;kDAA0F;;;;;;;;;;;;0CAQ/G,8OAAC,gIAAA,CAAA,cAAW;gCAAC,OAAM;gCAAW,WAAU;;oCACrC,kBAAkB,2BACjB,8OAAC;wCAAI,WAAU;kDACZ,MAAM,IAAI,CAAC;4CAAE,QAAQ;wCAAE,GAAG,GAAG,CAAC,CAAC,GAAG,sBACjC,8OAAC,qBAAqB;;;;;;;;;;oCAI3B,SAAS,MAAM,GAAG,kBACjB;;4CACG,SAAS,UAAU,KAAK,QAAQ,EAAE,GAAG,CAAC,CAAC,wBACtC,8OAAC,kIAAA,CAAA,SAAM;oDAEL,MAAM,cAAc,QAAQ,SAAS;oDACrC,cAAc,CAAC,OACb,aAAa,OAAO,QAAQ,SAAS,GAAG;;sEAG1C,8OAAC,kIAAA,CAAA,gBAAa;4DAAC,OAAO;sEACpB,cAAA,8OAAC;gEAAI,WAAU;;kFACb,8OAAC;wEAAI,WAAU;;0FACb,8OAAC,4MAAA,CAAA,eAAY;gFAAC,WAAU;;;;;;0FACxB,8OAAC;;kGACC,8OAAC;wFAAG,WAAU;kGACX,QAAQ,WAAW;;;;;;kGAEtB,8OAAC;wFAAE,WAAU;;4FAAgC;4FAC9B,QAAQ,SAAS;;;;;;;;;;;;;;;;;;;kFAKpC,8OAAC;wEAAI,WAAU;;0FACb,8OAAC,oIAAA,CAAA,WAAQ;gFACP,OAAO,iBAAiB,QAAQ,MAAM;gFACtC,WAAU;gFACV,oBAAmB;;;;;;0FAErB,8OAAC;gFAAK,WAAU;;oFACb,iBAAiB,QAAQ,MAAM;oFAAE;;;;;;;;;;;;;;;;;;;;;;;;sEAK1C,8OAAC,kIAAA,CAAA,gBAAa;4DAAC,WAAU;;8EACvB,8OAAC,kIAAA,CAAA,eAAY;8EACX,cAAA,8OAAC,kIAAA,CAAA,cAAW;wEAAC,WAAU;;4EACpB;0FACD,8OAAC,oNAAA,CAAA,cAAW;;;;;4EAAG;;;;;;;;;;;;gEAIlB,mBAAmB,SAAS;;;;;;;;mDAxC1B,QAAQ,SAAS;;;;;4CA4CzB,iBAAiB,SAAS,MAAM,EAAE;;uDAGrC,kBAAkB,6BAChB,8OAAC;wCAAI,WAAU;kDAA0F;;;;;;;;;;;;0CAQ/G,8OAAC,gIAAA,CAAA,cAAW;gCAAC,OAAM;gCAAO,WAAU;;oCACjC,eAAe,2BACd,8OAAC;wCAAI,WAAU;kDACZ,MAAM,IAAI,CAAC;4CAAE,QAAQ;wCAAE,GAAG,GAAG,CAAC,CAAC,GAAG,sBACjC,8OAAC,kBAAkB;;;;;;;;;;oCAIxB,eAAe,eAAe,UAAU,SAAS,kBAChD;;4CACG,SAAS,UAAU,KAAK,IAAI,EAAE,GAAG,CAAC,CAAC,qBAClC,8OAAC,kIAAA,CAAA,SAAM;oDAEL,MAAM,cAAc,KAAK,GAAG;oDAC5B,cAAc,CAAC,OACb,aAAa,OAAO,KAAK,GAAG,GAAG;;sEAGjC,8OAAC,kIAAA,CAAA,gBAAa;4DAAC,OAAO;sEACpB,cAAA,8OAAC;gEAAI,WAAU;;kFACb,8OAAC;wEAAI,WAAU;;0FACb,8OAAC,0MAAA,CAAA,cAAW;gFAAC,WAAU;;;;;;0FACvB,8OAAC;;kGACC,8OAAC;wFAAG,WAAU;kGACX,KAAK,WAAW;;;;;;kGAEnB,8OAAC;wFAAE,WAAU;;4FAAgC;4FACjC,KAAK,MAAM;;;;;;;;;;;;;;;;;;;kFAI3B,8OAAC,iIAAA,CAAA,QAAK;wEAAC,WAAU;;4EAAiC;4EACtC,KAAK,WAAW,CAAC,MAAM;;;;;;;;;;;;;;;;;;sEAIvC,8OAAC,kIAAA,CAAA,gBAAa;4DAAC,WAAU;;8EACvB,8OAAC,kIAAA,CAAA,eAAY;8EACX,cAAA,8OAAC,kIAAA,CAAA,cAAW;wEAAC,WAAU;kFAAkB;;;;;;;;;;;gEAI1C,mBAAmB,MAAM;;;;;;;;mDA9BvB,KAAK,GAAG;;;;;4CAkChB,iBAAiB,SAAS,MAAM,EAAE;;uDAGrC,eAAe,6BACb,8OAAC;wCAAI,WAAU;kDAA0F;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAY7H","debugId":null}},
    {"offset": {"line": 4979, "column": 0}, "map": {"version":3,"sources":["file:///C:/Dev%20Directory/Blueprints/blueprintfro-v1/src/hooks/useCountUp.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nexport function useCountUp(targetValue, duration = 1000) {\r\n  const [count, setCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    let start = 0;\r\n    const startTime = performance.now();\r\n\r\n    const animate = (currentTime) => {\r\n      const elapsed = currentTime - startTime;\r\n      const progress = Math.min(elapsed / duration, 1);\r\n      const value = Math.floor(progress * targetValue);\r\n      setCount(value);\r\n\r\n      if (progress < 1) {\r\n        requestAnimationFrame(animate);\r\n      }\r\n    };\r\n\r\n    requestAnimationFrame(animate);\r\n  }, [targetValue, duration]);\r\n\r\n  return count;\r\n}\r\n\r\n"],"names":[],"mappings":";;;AAAA;;AAEO,SAAS,WAAW,WAAW,EAAE,WAAW,IAAI;IACrD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,QAAQ;QACZ,MAAM,YAAY,YAAY,GAAG;QAEjC,MAAM,UAAU,CAAC;YACf,MAAM,UAAU,cAAc;YAC9B,MAAM,WAAW,KAAK,GAAG,CAAC,UAAU,UAAU;YAC9C,MAAM,QAAQ,KAAK,KAAK,CAAC,WAAW;YACpC,SAAS;YAET,IAAI,WAAW,GAAG;gBAChB,sBAAsB;YACxB;QACF;QAEA,sBAAsB;IACxB,GAAG;QAAC;QAAa;KAAS;IAE1B,OAAO;AACT","debugId":null}},
    {"offset": {"line": 5011, "column": 0}, "map": {"version":3,"sources":["file:///C:/Dev%20Directory/Blueprints/blueprintfro-v1/src/modules/dashboard/sectioncard/Cpc-section-card.js"],"sourcesContent":["\r\n// 'use client';\r\n\r\n// import {\r\n//   IconTrendingDown,\r\n//   IconTrendingUp,\r\n// } from \"@tabler/icons-react\";\r\n// import { Badge } from \"@/components/ui/badge\";\r\n// import {\r\n//   Card,\r\n//   CardAction,\r\n//   CardDescription,\r\n//   CardFooter,\r\n//   CardHeader,\r\n//   CardTitle,\r\n// } from \"@/components/ui/card\";\r\n// import { useEffect, useMemo, useCallback, useState } from \"react\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import {\r\n//   getAllTaskList,\r\n// } from \"@/features/taskSlice\";\r\n// import {\r\n//   fetchAllProjects,\r\n// } from \"@/features/projectSlice\";\r\n// import {\r\n//   fetchClients,\r\n// } from \"@/features/clientSlice\";\r\n// import { fetchAllTeams } from \"@/features/teamSlice\";\r\n// import { useCountUp } from \"@/hooks/useCountUp\"; // Make sure path is correct\r\n\r\n// import { motion, AnimatePresence } from \"framer-motion\";\r\n\r\n// // Skeleton Loader\r\n// const CardSkeleton = () => (\r\n//   <Card className=\"@container/card animate-pulse\">\r\n//     <CardHeader>\r\n//       <CardDescription>\r\n//         <span className=\"inline-block h-4 w-50 bg-muted rounded\" />\r\n//       </CardDescription>\r\n//       <CardTitle className=\"text-2xl font-semibold tabular-nums @[250px]/card:text-3xl\">\r\n//         <span className=\"inline-block h-8 w-16 bg-muted rounded\" />\r\n//       </CardTitle>\r\n//       <CardAction>\r\n//         <span className=\"inline-block h-6 w-16 bg-muted rounded-full\" />\r\n//       </CardAction>\r\n//     </CardHeader>\r\n//     <CardFooter className=\"flex-col items-start gap-1.5 text-sm\">\r\n//       <div className=\"line-clamp-1 flex gap-2 font-medium\">\r\n//         <span className=\"inline-block h-4 w-32 bg-muted rounded\" />\r\n//       </div>\r\n//       <div className=\"text-muted-foreground\">\r\n//         <span className=\"inline-block h-4 w-40 bg-muted rounded\" />\r\n//       </div>\r\n//     </CardFooter>\r\n//   </Card>\r\n// );\r\n\r\n// export function SectionCardCPC() {\r\n//   const dispatch = useDispatch();\r\n\r\n//   const { projects, status: projectStatus } = useSelector((state) => state.project);\r\n//   const { allTaskList, status: taskStatus } = useSelector((state) => state.task);\r\n//   const { clients, fetchClientsLoading } = useSelector((state) => state.client);\r\n//   const { allTeams, status: teamStatus } = useSelector((state) => state.team);\r\n\r\n//   const clientsStatus = fetchClientsLoading\r\n//     ? \"loading\"\r\n//     : clients?.length\r\n//       ? \"succeeded\"\r\n//       : \"idle\";\r\n\r\n//   const counts = useMemo(() => ({\r\n//     projects: projects?.length || 0,\r\n//     clients: Array.isArray(clients) ? clients.length : 0,\r\n//     tasks: allTaskList?.length || 0,\r\n//     teams: allTeams?.length || 0,\r\n//   }), [projects, clients, allTaskList, allTeams]);\r\n\r\n//   const isProjectsLoading = projectStatus === \"loading\";\r\n//   const isClientsLoading = fetchClientsLoading;\r\n//   const isTasksLoading = taskStatus === \"loading\";\r\n//   const isTeamsLoading = teamStatus === \"loading\";\r\n\r\n//   const allLoaded = useMemo(() => {\r\n//     return (\r\n//       !isProjectsLoading &&\r\n//       !isClientsLoading &&\r\n//       !isTasksLoading &&\r\n//       !isTeamsLoading\r\n//     );\r\n//   }, [isProjectsLoading, isClientsLoading, isTasksLoading, isTeamsLoading]);\r\n\r\n//   const fetchAllData = useCallback(() => {\r\n//     const promises = [];\r\n\r\n//     if (clientsStatus === \"idle\" || !clients?.length) {\r\n//       promises.push(dispatch(fetchClients()).unwrap().catch(() => []));\r\n//     }\r\n//     if (projectStatus === \"idle\" || !projects?.length) {\r\n//       promises.push(dispatch(fetchAllProjects()).unwrap().catch(() => []));\r\n//     }\r\n//     if (taskStatus === \"idle\" || !allTaskList?.length) {\r\n//       promises.push(dispatch(getAllTaskList()).unwrap().catch(() => []));\r\n//     }\r\n//     if (teamStatus === \"idle\" || !allTeams?.length) {\r\n//       promises.push(dispatch(fetchAllTeams()).unwrap().catch(() => []));\r\n//     }\r\n\r\n//     Promise.allSettled(promises).catch(console.error);\r\n//   }, [dispatch,clientsStatus,\r\n//   projectStatus,\r\n//   taskStatus,\r\n//   teamStatus,\r\n//   clients?.length,\r\n//   projects?.length,\r\n//   allTaskList?.length,\r\n//   allTeams?.length]);\r\n//   // }, [dispatch, clientsStatus, projectStatus, taskStatus, teamStatus, clients, projects, allTaskList, allTeams]);\r\n\r\n//   useEffect(() => {\r\n//     fetchAllData();\r\n//   }, [fetchAllData]);\r\n\r\n//   const animatedProjects = useCountUp(counts.projects);\r\n//   const animatedClients = useCountUp(counts.clients);\r\n//   const animatedTasks = useCountUp(counts.tasks);\r\n//   const animatedTeams = useCountUp(counts.teams);\r\n\r\n//   const cardVariants = {\r\n//     hidden: { opacity: 0, y: 10 },\r\n//     visible: { opacity: 1, y: 0 },\r\n//   };\r\n\r\n//   const cards = [\r\n//     {\r\n//       title: \"Total Projects\",\r\n//       count: animatedProjects,\r\n//       badge: \"+12.5%\",\r\n//       trendIcon: <IconTrendingUp />,\r\n//       footer: \"Increased project participation\",\r\n//       note: \"Tracks all  projects\",\r\n//       bgColor: \"bg-[#7209b7] border-blue-100\",\r\n//     },\r\n//     {\r\n//       title: \"All Clients\",\r\n//       count: animatedClients,\r\n//       badge: \"20%\",\r\n//       trendIcon: <IconTrendingDown />,\r\n//       footer: \"Client acquisition dropped\",\r\n//       note: \"Consider reviewing outreach strategy\",\r\n//       bgColor: \"bg-[#007200] border-blue-100\",\r\n//     },\r\n//     {\r\n//       title: \"Active Tasks\",\r\n//       count: animatedTasks,\r\n//       badge: \"+12.5%\",\r\n//       trendIcon: <IconTrendingUp />,\r\n//       footer: \"Strong user retention\",\r\n//       note: \"Task activity exceeds expectations\",\r\n//       bgColor: \"bg-[#0a89e9] border-blue-100\",\r\n//     },\r\n//     {\r\n//       title: \"All Teams\",\r\n//       count: animatedTeams,\r\n//       badge: \"+4.5%\",\r\n//       trendIcon: <IconTrendingUp />,\r\n//       footer: \"Consistent team performance\",\r\n//       note: \"On track with growth metrics\",\r\n//       bgColor: \"bg-[#eb5e28] border-blue-100\",\r\n//     },\r\n//   ];\r\n\r\n//   return (\r\n//     <div className=\"grid grid-cols-1 gap-4 px-4 sm:grid-cols-2 xl:grid-cols-4 lg:px-6\">\r\n//       {allLoaded ? (\r\n//         <AnimatePresence>\r\n//           {cards.map((card, index) => (\r\n//             <motion.div\r\n//               key={index}\r\n//               initial=\"hidden\"\r\n//               animate=\"visible\"\r\n//               exit=\"hidden\"\r\n//               variants={cardVariants}\r\n//               transition={{ duration: 0.4, delay: index * 0.1 }}\r\n//             >\r\n//               <div className={`rounded-xl border p-1 ${card.bgColor}`}>\r\n//                 <Card className=\"bg-transparent shadow-none\">\r\n//                   <CardHeader>\r\n//                     <CardDescription className=\"text-lg font-large text-white\">{card.title}</CardDescription>\r\n//                     <CardTitle className=\"text-2xl font-semibold text-white\">{card.count}</CardTitle>\r\n//                     <CardAction>\r\n//                     </CardAction>\r\n//                   </CardHeader>\r\n//                   <CardFooter className=\"flex-col items-start gap-1.5 text-sm text-white\">\r\n//                     <div className=\"flex gap-2 font-medium\">\r\n//                       {card.footer} {card.trendIcon}\r\n//                     </div>\r\n//                     <div className=\"text-muted-foreground text-white\">{card.note}</div>\r\n//                   </CardFooter>\r\n//                 </Card>\r\n//               </div>\r\n//             </motion.div>\r\n//           ))}\r\n//         </AnimatePresence>\r\n//       ) : (\r\n//         <>\r\n//           <CardSkeleton />\r\n//           <CardSkeleton />\r\n//           <CardSkeleton />\r\n//           <CardSkeleton />\r\n//         </>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n'use client';\r\n\r\nimport {\r\n  IconTrendingDown,\r\n  IconTrendingUp,\r\n} from \"@tabler/icons-react\";\r\nimport {\r\n  Card,\r\n  CardAction,\r\n  CardDescription,\r\n  CardFooter,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@/components/ui/card\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getAllTaskList,\r\n} from \"@/features/taskSlice\";\r\nimport {\r\n  fetchAllProjects,\r\n} from \"@/features/projectSlice\";\r\nimport {\r\n  fetchClients,\r\n} from \"@/features/clientSlice\";\r\nimport { fetchAllTeams } from \"@/features/teamSlice\";\r\nimport { useCountUp } from \"@/hooks/useCountUp\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\n\r\n// Skeleton Loader\r\nconst CardSkeleton = () => (\r\n  <Card className=\"@container/card animate-pulse\">\r\n    <CardHeader>\r\n      <CardDescription>\r\n        <span className=\"inline-block h-4 w-50 bg-muted rounded\" />\r\n      </CardDescription>\r\n      <CardTitle className=\"text-2xl font-semibold tabular-nums @[250px]/card:text-3xl\">\r\n        <span className=\"inline-block h-8 w-16 bg-muted rounded\" />\r\n      </CardTitle>\r\n      <CardAction>\r\n        <span className=\"inline-block h-6 w-16 bg-muted rounded-full\" />\r\n      </CardAction>\r\n    </CardHeader>\r\n    <CardFooter className=\"flex-col items-start gap-1.5 text-sm\">\r\n      <div className=\"line-clamp-1 flex gap-2 font-medium\">\r\n        <span className=\"inline-block h-4 w-32 bg-muted rounded\" />\r\n      </div>\r\n      <div className=\"text-muted-foreground\">\r\n        <span className=\"inline-block h-4 w-40 bg-muted rounded\" />\r\n      </div>\r\n    </CardFooter>\r\n  </Card>\r\n);\r\n\r\nexport function SectionCardCPC() {\r\n  const dispatch = useDispatch();\r\n\r\n  const { projects, status: projectStatus } = useSelector((state) => state.project);\r\n  const { allTaskList, status: taskStatus } = useSelector((state) => state.task);\r\n  const { clients, fetchClientsLoading } = useSelector((state) => state.client);\r\n  const { allTeams, status: teamStatus } = useSelector((state) => state.team);\r\n\r\n  // ✅ Fetch all data ONCE on mount\r\n  useEffect(() => {\r\n    dispatch(fetchClients());\r\n    dispatch(fetchAllProjects());\r\n    dispatch(getAllTaskList());\r\n    dispatch(fetchAllTeams());\r\n  }, [dispatch]); // ✅ Empty dependency = only on initial mount\r\n\r\n  const counts = {\r\n    projects: projects?.length || 0,\r\n    clients: Array.isArray(clients) ? clients.length : 0,\r\n    tasks: allTaskList?.length || 0,\r\n    teams: allTeams?.length || 0,\r\n  };\r\n\r\n  const isLoading =\r\n    projectStatus === \"loading\" ||\r\n    fetchClientsLoading ||\r\n    taskStatus === \"loading\" ||\r\n    teamStatus === \"loading\";\r\n\r\n  const animatedProjects = useCountUp(counts.projects);\r\n  const animatedClients = useCountUp(counts.clients);\r\n  const animatedTasks = useCountUp(counts.tasks);\r\n  const animatedTeams = useCountUp(counts.teams);\r\n\r\n  const cardVariants = {\r\n    hidden: { opacity: 0, y: 10 },\r\n    visible: { opacity: 1, y: 0 },\r\n  };\r\n\r\n  const cards = [\r\n    {\r\n      title: \"Total Projects\",\r\n      count: animatedProjects,\r\n      badge: \"+12.5%\",\r\n      trendIcon: <IconTrendingUp />,\r\n      footer: \"Increased project participation\",\r\n      note: \"Tracks all projects\",\r\n      bgColor: \"bg-[#7209b7] border-blue-100\",\r\n    },\r\n    {\r\n      title: \"All Clients\",\r\n      count: animatedClients,\r\n      badge: \"20%\",\r\n      trendIcon: <IconTrendingDown />,\r\n      footer: \"Client acquisition dropped\",\r\n      note: \"Consider reviewing outreach strategy\",\r\n      bgColor: \"bg-[#007200] border-blue-100\",\r\n    },\r\n    {\r\n      title: \"Active Tasks\",\r\n      count: animatedTasks,\r\n      badge: \"+12.5%\",\r\n      trendIcon: <IconTrendingUp />,\r\n      footer: \"Strong user retention\",\r\n      note: \"Task activity exceeds expectations\",\r\n      bgColor: \"bg-[#0a89e9] border-blue-100\",\r\n    },\r\n    {\r\n      title: \"All Teams\",\r\n      count: animatedTeams,\r\n      badge: \"+4.5%\",\r\n      trendIcon: <IconTrendingUp />,\r\n      footer: \"Consistent team performance\",\r\n      note: \"On track with growth metrics\",\r\n      bgColor: \"bg-[#eb5e28] border-blue-100\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-1 gap-4 px-4 sm:grid-cols-2 xl:grid-cols-4 lg:px-6\">\r\n      {!isLoading ? (\r\n        <AnimatePresence>\r\n          {cards.map((card, index) => (\r\n            <motion.div\r\n              key={index}\r\n              initial=\"hidden\"\r\n              animate=\"visible\"\r\n              exit=\"hidden\"\r\n              variants={cardVariants}\r\n              transition={{ duration: 0.4, delay: index * 0.1 }}\r\n            >\r\n              <div className={`rounded-xl border p-1 ${card.bgColor}`}>\r\n                <Card className=\"bg-transparent shadow-none\">\r\n                  <CardHeader>\r\n                    <CardDescription className=\"text-lg font-large text-white\">{card.title}</CardDescription>\r\n                    <CardTitle className=\"text-2xl font-semibold text-white\">{card.count}</CardTitle>\r\n                    <CardAction />\r\n                  </CardHeader>\r\n                  <CardFooter className=\"flex-col items-start gap-1.5 text-sm text-white\">\r\n                    <div className=\"flex gap-2 font-medium\">\r\n                      {card.footer} {card.trendIcon}\r\n                    </div>\r\n                    <div className=\"text-muted-foreground text-white\">{card.note}</div>\r\n                  </CardFooter>\r\n                </Card>\r\n              </div>\r\n            </motion.div>\r\n          ))}\r\n        </AnimatePresence>\r\n      ) : (\r\n        <>\r\n          <CardSkeleton />\r\n          <CardSkeleton />\r\n          <CardSkeleton />\r\n          <CardSkeleton />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5552, "column": 0}, "map": {"version":3,"sources":["file:///C:/Dev%20Directory/Blueprints/blueprintfro-v1/src/modules/dashboard/sectioncard/Employee-section-card.js"],"sourcesContent":["\r\n'use client';\r\n\r\nimport {\r\n  IconTrendingUp,\r\n} from \"@tabler/icons-react\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport {\r\n  Card,\r\n  CardAction,\r\n  CardDescription,\r\n  CardFooter,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@/components/ui/card\";\r\nimport { useEffect, useMemo, useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getAllTaskByEmployeeId,\r\n  selectAllTaskListByEmployeeId,\r\n} from \"@/features/taskSlice\";\r\nimport {\r\n  fetchProjectsByEmployeeId,\r\n} from \"@/features/projectSlice\";\r\nimport { fetchTeamsByEmployeeId } from \"@/features/teamSlice\";\r\nimport { fetchBugByEmployeeId } from \"@/features/bugSlice\";\r\nimport { useCountUp } from \"@/hooks/useCountUp\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\n\r\nconst CardSkeleton = () => (\r\n  <Card className=\"@container/card animate-pulse\">\r\n    <CardHeader>\r\n      <CardDescription><span className=\"inline-block h-4 w-50 bg-muted rounded\" /></CardDescription>\r\n      <CardTitle className=\"text-2xl font-semibold\"><span className=\"inline-block h-8 w-16 bg-muted rounded\" /></CardTitle>\r\n      <CardAction><span className=\"inline-block h-6 w-16 bg-muted rounded-full\" /></CardAction>\r\n    </CardHeader>\r\n    <CardFooter className=\"flex-col items-start gap-1.5 text-sm\">\r\n      <div className=\"line-clamp-1 flex gap-2 font-medium\"><span className=\"inline-block h-4 w-32 bg-muted rounded\" /></div>\r\n      <div className=\"text-muted-foreground\"><span className=\"inline-block h-4 w-40 bg-muted rounded\" /></div>\r\n    </CardFooter>\r\n  </Card>\r\n);\r\n\r\nexport function SectionCardEmployee({ employeeId }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const { teamsByEmployee, status: teamStatus } = useSelector((state) => state.team);\r\n  const { employeeProjects } = useSelector((state) => state.project);\r\n  const { bugsByEmployeeId, loading: bugLoading } = useSelector((state) => state.bugs);\r\n  const tasks = useSelector(selectAllTaskListByEmployeeId);\r\n\r\n  const isProjectsLoading = teamStatus.fetchEmployeeProjects === \"loading\";\r\n  const isTasksLoading = teamStatus.fetchAllTaskByEmployeeId === \"loading\";\r\n  const isBugLoading = bugLoading?.bugsByEmployeeId === \"loading\";\r\n  const isTeamsLoading = teamStatus.fetchTeamsByEmployeeId === \"loading\";\r\n\r\n  const allLoaded = useMemo(() =>\r\n    !isProjectsLoading && !isTasksLoading && !isBugLoading && !isTeamsLoading,\r\n    [isProjectsLoading, isTasksLoading, isBugLoading, isTeamsLoading]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (employeeId) {\r\n      dispatch(fetchProjectsByEmployeeId(employeeId));\r\n      dispatch(getAllTaskByEmployeeId(employeeId));\r\n      dispatch(fetchBugByEmployeeId(employeeId));\r\n      dispatch(fetchTeamsByEmployeeId(employeeId));\r\n    }\r\n  }, [dispatch, employeeId]);\r\n\r\n  const animatedProjects = useCountUp(employeeProjects?.length || 0);\r\n  const animatedTasks = useCountUp(tasks?.length || 0);\r\n  const animatedBugs = useCountUp(bugsByEmployeeId?.length || 0);\r\n  const animatedTeams = useCountUp(teamsByEmployee?.length || 0);\r\n\r\n  const cardVariants = {\r\n    hidden: { opacity: 0, y: 10 },\r\n    visible: { opacity: 1, y: 0 },\r\n  };\r\n\r\n  const cards = [\r\n    {\r\n      title: \"Total Projects\",\r\n      count: animatedProjects,\r\n      badge: \"+12.5%\",\r\n      footer: \"Increased project participation\",\r\n      note: \"Tracks all assigned or collaborated projects\",\r\n      bgColor: \"bg-[#7209b7] border-blue-100\",\r\n    },\r\n    {\r\n      title: \"My Tasks\",\r\n      count: animatedTasks,\r\n      badge: \"+12.5%\",\r\n      footer: \"Strong user retention\",\r\n      note: \"Task activity exceeds expectations\",\r\n      bgColor: \"bg-[#007200] border-blue-100\",\r\n    },\r\n    {\r\n      title: \"Bug Found\",\r\n      count: animatedBugs,\r\n      badge: \"+12.5%\",\r\n      footer: \"Increased QA visibility\",\r\n      note: \"Helps improve overall system stability\",\r\n      bgColor: \"bg-[#0a89e9] border-blue-100\",\r\n    },\r\n    {\r\n      title: \"Teams I’ve Collaborated With\",\r\n      count: animatedTeams,\r\n      badge: \"+4.5%\",\r\n      footer: \"Consistent team performance\",\r\n      note: \"On track with growth metrics\",\r\n      bgColor: \"bg-[#eb5e28] border-blue-100\",\r\n    },\r\n  ];\r\n\r\n\r\n  return (\r\n  <div className=\"grid grid-cols-1 gap-4 px-4 sm:grid-cols-2 xl:grid-cols-4 lg:px-6\">\r\n    {allLoaded ? (\r\n      <AnimatePresence>\r\n        {cards.map((card, index) => (\r\n          <motion.div\r\n            key={index}\r\n            initial=\"hidden\"\r\n            animate=\"visible\"\r\n            exit=\"hidden\"\r\n            variants={cardVariants}\r\n            transition={{ duration: 0.4, delay: index * 0.1 }}\r\n          >\r\n            {/* Outer div for background, text, and border color */}\r\n            <div className={`rounded-xl border p-1 ${card.bgColor}`}>\r\n              <Card className=\"bg-transparent shadow-none\">\r\n                <CardHeader>\r\n                  <CardDescription className=\"text-lg font-large text-white\">\r\n                    {card.title}\r\n                  </CardDescription>\r\n                  <CardTitle className=\"text-2xl font-bold text-white\">{card.count}</CardTitle>\r\n                  <CardAction>\r\n                    {/* Optionally show badge here */}\r\n                  </CardAction>\r\n                </CardHeader>\r\n                <CardFooter className=\"flex-col items-start gap-1.5 text-sm text-white\">\r\n                  <div className=\"flex gap-2 font-medium items-center\">\r\n                    {card.footer} <IconTrendingUp className=\"size-4\" />\r\n                  </div>\r\n                  <div className=\"opacity-80\">{card.note}</div>\r\n                </CardFooter>\r\n              </Card>\r\n            </div>\r\n          </motion.div>\r\n        ))}\r\n      </AnimatePresence>\r\n    ) : (\r\n      <>\r\n        <CardSkeleton />\r\n        <CardSkeleton />\r\n        <CardSkeleton />\r\n        <CardSkeleton />\r\n      </>\r\n    )}\r\n  </div>\r\n);\r\n\r\n\r\n\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5887, "column": 0}, "map": {"version":3,"sources":["file:///C:/Dev%20Directory/Blueprints/blueprintfro-v1/src/app/%28protected%29/dashboard/page.jsx"],"sourcesContent":["\r\n\"use client\";\r\n\r\nimport { ChartAreaInteractive } from \"@/modules/dashboard/chartarea/cpc-chart-area\";\r\nimport ChartAreaInteractiveEmployee from \"@/modules/dashboard/chartarea/employee-chart-area\";\r\nimport { DataTableEmployee } from \"@/modules/dashboard/datatable/employee-data-table\";\r\nimport { DataTable } from \"@/modules/dashboard/datatable/cpc-data-table\";\r\nimport { SectionCardCPC } from \"@/modules/dashboard/sectioncard/Cpc-section-card\";\r\nimport { SectionCardEmployee } from \"@/modules/dashboard/sectioncard/Employee-section-card\";\r\nimport { useLoggedinUser } from \"@/hooks/useLoggedinUser\";\r\n\r\nexport default function Dashboard() {\r\n  const { currentUser } = useLoggedinUser();\r\n  const employeeId = currentUser?.employeeID  // Default to a specific employee ID if not available\r\n\r\n  return (\r\n    <div className=\"p-4\">\r\n    \r\n      {currentUser?.role === \"cpc\"|| currentUser?.position === \"Team Lead\" ? (\r\n      // {currentUser?.position === \"CPC\" ? (\r\n        <div className=\"space-y-6\">\r\n          <SectionCardCPC />\r\n          <div className=\"px-4 lg:px-6\">\r\n            <ChartAreaInteractive />\r\n          </div>\r\n          <DataTable />\r\n        </div>\r\n      ) : (\r\n        <div className=\"space-y-6\">\r\n          <SectionCardEmployee employeeId={employeeId} />\r\n          <div className=\"px-4 lg:px-6\">\r\n            <ChartAreaInteractiveEmployee employeeId={employeeId} />\r\n          </div>\r\n          <DataTableEmployee employeeId={employeeId} />\r\n        </div>\r\n      )}\r\n\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;;;;;;;;;AAUe,SAAS;IACtB,MAAM,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,kBAAe,AAAD;IACtC,MAAM,aAAa,aAAa,WAAY,qDAAqD;;IAEjG,qBACE,8OAAC;QAAI,WAAU;kBAEZ,aAAa,SAAS,SAAQ,aAAa,aAAa,cACzD,uCAAuC;sBACrC,8OAAC;YAAI,WAAU;;8BACb,8OAAC,oKAAA,CAAA,iBAAc;;;;;8BACf,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC,gKAAA,CAAA,uBAAoB;;;;;;;;;;8BAEvB,8OAAC,gKAAA,CAAA,YAAS;;;;;;;;;;iCAGZ,8OAAC;YAAI,WAAU;;8BACb,8OAAC,yKAAA,CAAA,sBAAmB;oBAAC,YAAY;;;;;;8BACjC,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC,qKAAA,CAAA,UAA4B;wBAAC,YAAY;;;;;;;;;;;8BAE5C,8OAAC,qKAAA,CAAA,oBAAiB;oBAAC,YAAY;;;;;;;;;;;;;;;;;AAOzC","debugId":null}}]
}
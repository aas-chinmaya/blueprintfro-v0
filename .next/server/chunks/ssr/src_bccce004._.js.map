{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Dev%20Directory/Blueprints/blueprintfro-v1/src/components/ui/dialog.jsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\r\nimport { XIcon } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Dialog({\r\n  ...props\r\n}) {\r\n  return <DialogPrimitive.Root data-slot=\"dialog\" {...props} />;\r\n}\r\n\r\nfunction DialogTrigger({\r\n  ...props\r\n}) {\r\n  return <DialogPrimitive.Trigger data-slot=\"dialog-trigger\" {...props} />;\r\n}\r\n\r\nfunction DialogPortal({\r\n  ...props\r\n}) {\r\n  return <DialogPrimitive.Portal data-slot=\"dialog-portal\" {...props} />;\r\n}\r\n\r\nfunction DialogClose({\r\n  ...props\r\n}) {\r\n  return <DialogPrimitive.Close data-slot=\"dialog-close\" {...props} />;\r\n}\r\n\r\nfunction DialogOverlay({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    <DialogPrimitive.Overlay\r\n      data-slot=\"dialog-overlay\"\r\n      className={cn(\r\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50\",\r\n        className\r\n      )}\r\n      {...props} />\r\n  );\r\n}\r\n\r\nfunction DialogContent({\r\n  className,\r\n  children,\r\n  showCloseButton = true,\r\n  ...props\r\n}) {\r\n  return (\r\n    <DialogPortal data-slot=\"dialog-portal\">\r\n      <DialogOverlay />\r\n      <DialogPrimitive.Content\r\n        data-slot=\"dialog-content\"\r\n        className={cn(\r\n          \"bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg\",\r\n          className\r\n        )}\r\n        {...props}>\r\n        {children}\r\n        {showCloseButton && (\r\n          <DialogPrimitive.Close\r\n            data-slot=\"dialog-close\"\r\n            className=\"ring-offset-background focus:ring-ring data-[state=open]:bg-accent data-[state=open]:text-muted-foreground absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\">\r\n            <XIcon />\r\n            <span className=\"sr-only\">Close</span>\r\n          </DialogPrimitive.Close>\r\n        )}\r\n      </DialogPrimitive.Content>\r\n    </DialogPortal>\r\n  );\r\n}\r\n\r\nfunction DialogHeader({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    <div\r\n      data-slot=\"dialog-header\"\r\n      className={cn(\"flex flex-col gap-2 text-center sm:text-left\", className)}\r\n      {...props} />\r\n  );\r\n}\r\n\r\nfunction DialogFooter({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    <div\r\n      data-slot=\"dialog-footer\"\r\n      className={cn(\"flex flex-col-reverse gap-2 sm:flex-row sm:justify-end\", className)}\r\n      {...props} />\r\n  );\r\n}\r\n\r\nfunction DialogTitle({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    <DialogPrimitive.Title\r\n      data-slot=\"dialog-title\"\r\n      className={cn(\"text-lg leading-none font-semibold\", className)}\r\n      {...props} />\r\n  );\r\n}\r\n\r\nfunction DialogDescription({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    <DialogPrimitive.Description\r\n      data-slot=\"dialog-description\"\r\n      className={cn(\"text-muted-foreground text-sm\", className)}\r\n      {...props} />\r\n  );\r\n}\r\n\r\nexport {\r\n  Dialog,\r\n  DialogClose,\r\n  DialogContent,\r\n  DialogDescription,\r\n  DialogFooter,\r\n  DialogHeader,\r\n  DialogOverlay,\r\n  DialogPortal,\r\n  DialogTitle,\r\n  DialogTrigger,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,SAAS,OAAO,EACd,GAAG,OACJ;IACC,qBAAO,8OAAC,kKAAA,CAAA,OAAoB;QAAC,aAAU;QAAU,GAAG,KAAK;;;;;;AAC3D;AAEA,SAAS,cAAc,EACrB,GAAG,OACJ;IACC,qBAAO,8OAAC,kKAAA,CAAA,UAAuB;QAAC,aAAU;QAAkB,GAAG,KAAK;;;;;;AACtE;AAEA,SAAS,aAAa,EACpB,GAAG,OACJ;IACC,qBAAO,8OAAC,kKAAA,CAAA,SAAsB;QAAC,aAAU;QAAiB,GAAG,KAAK;;;;;;AACpE;AAEA,SAAS,YAAY,EACnB,GAAG,OACJ;IACC,qBAAO,8OAAC,kKAAA,CAAA,QAAqB;QAAC,aAAU;QAAgB,GAAG,KAAK;;;;;;AAClE;AAEA,SAAS,cAAc,EACrB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,8OAAC,kKAAA,CAAA,UAAuB;QACtB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;AAEf;AAEA,SAAS,cAAc,EACrB,SAAS,EACT,QAAQ,EACR,kBAAkB,IAAI,EACtB,GAAG,OACJ;IACC,qBACE,8OAAC;QAAa,aAAU;;0BACtB,8OAAC;;;;;0BACD,8OAAC,kKAAA,CAAA,UAAuB;gBACtB,aAAU;gBACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+WACA;gBAED,GAAG,KAAK;;oBACR;oBACA,iCACC,8OAAC,kKAAA,CAAA,QAAqB;wBACpB,aAAU;wBACV,WAAU;;0CACV,8OAAC,gMAAA,CAAA,QAAK;;;;;0CACN,8OAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAMtC;AAEA,SAAS,aAAa,EACpB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAEf;AAEA,SAAS,aAAa,EACpB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,0DAA0D;QACvE,GAAG,KAAK;;;;;;AAEf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,8OAAC,kKAAA,CAAA,QAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAEf;AAEA,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,8OAAC,kKAAA,CAAA,cAA2B;QAC1B,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAEf","debugId":null}},
    {"offset": {"line": 183, "column": 0}, "map": {"version":3,"sources":["file:///C:/Dev%20Directory/Blueprints/blueprintfro-v1/src/components/ui/label.jsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Label({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    <LabelPrimitive.Root\r\n      data-slot=\"label\"\r\n      className={cn(\r\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\r\n        className\r\n      )}\r\n      {...props} />\r\n  );\r\n}\r\n\r\nexport { Label }\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,SAAS,MAAM,EACb,SAAS,EACT,GAAG,OACJ;IACC,qBACE,8OAAC,iKAAA,CAAA,OAAmB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,uNACA;QAED,GAAG,KAAK;;;;;;AAEf","debugId":null}},
    {"offset": {"line": 213, "column": 0}, "map": {"version":3,"sources":["file:///C:/Dev%20Directory/Blueprints/blueprintfro-v1/src/modules/TaskModules/CpcTaskList.js"],"sourcesContent":["\r\n\r\n\r\n\r\n'use client';\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  getAllTaskList,\r\n  selectAllTaskList,\r\n  selectTaskStatus,\r\n} from '@/features/taskSlice';\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from '@/components/ui/table';\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogHeader,\r\n  DialogTitle,\r\n} from '@/components/ui/dialog';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuTrigger,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuLabel,\r\n  DropdownMenuSeparator,\r\n} from '@/components/ui/dropdown-menu';\r\nimport {\r\n  FiSearch,\r\n  FiFilter,\r\n  FiChevronDown,\r\n  FiArrowUp,\r\n  FiArrowDown,\r\n  FiEye,\r\n  FiX,\r\n} from 'react-icons/fi';\r\nimport {\r\n  Tooltip,\r\n  TooltipProvider,\r\n  TooltipTrigger,\r\n  TooltipContent,\r\n} from '@/components/ui/tooltip';\r\nimport { cn } from '@/lib/utils';\r\nimport { toast } from 'sonner';\r\n\r\nconst statusColors = {\r\n  Pending: 'bg-green-100 text-green-800 border-green-200',\r\n  'In Progress': 'bg-yellow-100 text-yellow-800 border-yellow-200',\r\n  Completed: 'bg-blue-100 text-blue-800 border-blue-200',\r\n};\r\n\r\nconst priorityColors = {\r\n  High: 'bg-red-100 text-red-800 border-red-200',\r\n  Medium: 'bg-orange-100 text-orange-800 border-orange-200',\r\n  Low: 'bg-green-100 text-green-800 border-green-200',\r\n};\r\n\r\nexport default function Task() {\r\n  const dispatch = useDispatch();\r\n  const tasks = useSelector(selectAllTaskList) || [];\r\n  const status = useSelector(selectTaskStatus);\r\n  const [viewTask, setViewTask] = useState(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedStatus, setSelectedStatus] = useState('all');\r\n  const [selectedPriority, setSelectedPriority] = useState('all');\r\n  const [sortField, setSortField] = useState(null);\r\n  const [sortDirection, setSortDirection] = useState('asc');\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [itemsPerPage, setItemsPerPage] = useState(6);\r\n  const [goToPage, setGoToPage] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (status === 'idle') {\r\n      dispatch(getAllTaskList());\r\n    }\r\n  }, [status, dispatch]);\r\n\r\n  useEffect(() => {\r\n    const updateItemsPerPage = () => {\r\n      const height = window.innerHeight;\r\n      const calculated = Math.floor((height - 50) / 60);\r\n      setItemsPerPage(calculated > 3 ? calculated : 3);\r\n    };\r\n\r\n    updateItemsPerPage();\r\n    window.addEventListener('resize', updateItemsPerPage);\r\n    return () => window.removeEventListener('resize', updateItemsPerPage);\r\n  }, []);\r\n\r\n  // Reset to first page when filters or itemsPerPage change\r\n  useEffect(() => {\r\n    setCurrentPage(1);\r\n  }, [searchTerm, selectedStatus, selectedPriority, itemsPerPage]);\r\n\r\n  // Calculate task statistics\r\n  const taskStats = {\r\n    total: tasks.length,\r\n    pending: tasks.filter((task) => task.status === 'Pending').length,\r\n    inProgress: tasks.filter((task) => task.status === 'In Progress').length,\r\n    completed: tasks.filter((task) => task.status === 'Completed').length,\r\n    highPriority: tasks.filter((task) => task.priority === 'High').length,\r\n    mediumPriority: tasks.filter((task) => task.priority === 'Medium').length,\r\n    lowPriority: tasks.filter((task) => task.priority === 'Low').length,\r\n  };\r\n\r\n  // Filter and sort tasks\r\n  const filteredAndSortedTasks = () => {\r\n    let filtered = tasks;\r\n\r\n    if (selectedStatus !== 'all') {\r\n      filtered = filtered.filter((task) => task.status === selectedStatus);\r\n    }\r\n\r\n    if (selectedPriority !== 'all') {\r\n      filtered = filtered.filter((task) => task.priority === selectedPriority);\r\n    }\r\n\r\n    if (searchTerm.trim() !== '') {\r\n      const term = searchTerm.toLowerCase();\r\n      filtered = filtered.filter(\r\n        (task) =>\r\n          task.title?.toLowerCase().includes(term) ||\r\n          task.projectName?.toLowerCase().includes(term) ||\r\n          task.task_id?.toString().includes(term)\r\n      );\r\n    }\r\n\r\n    if (sortField) {\r\n      return [...filtered].sort((a, b) => {\r\n        const fieldA = a[sortField] || '';\r\n        const fieldB = b[sortField] || '';\r\n        if (sortDirection === 'asc') {\r\n          return fieldA < fieldB ? -1 : fieldA > fieldB ? 1 : 0;\r\n        } else {\r\n          return fieldA > fieldB ? -1 : fieldA < fieldB ? 1 : 0;\r\n        }\r\n      });\r\n    }\r\n\r\n    return filtered;\r\n  };\r\n\r\n  // Pagination logic\r\n  const sortedTasks = filteredAndSortedTasks();\r\n  const totalPages = Math.ceil(sortedTasks.length / itemsPerPage);\r\n  const paginatedTasks = sortedTasks.slice(\r\n    (currentPage - 1) * itemsPerPage,\r\n    currentPage * itemsPerPage\r\n  );\r\n\r\n  const handlePageChange = (pageNumber) => {\r\n    if (pageNumber >= 1 && pageNumber <= totalPages) {\r\n      setCurrentPage(pageNumber);\r\n    }\r\n  };\r\n\r\n  const handleGoToPage = (e) => {\r\n    e.preventDefault();\r\n    const page = parseInt(goToPage, 10);\r\n    if (!isNaN(page) && page >= 1 && page <= totalPages) {\r\n      setCurrentPage(page);\r\n      setGoToPage('');\r\n    } else {\r\n      toast.info(`Please enter a page number between 1 and ${totalPages}.`);\r\n    }\r\n  };\r\n\r\n  const handleSort = (field) => {\r\n    if (sortField === field) {\r\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\r\n    } else {\r\n      setSortField(field);\r\n      setSortDirection('asc');\r\n    }\r\n  };\r\n\r\n  const handleStatusFilter = (status) => {\r\n    setSelectedStatus(status);\r\n  };\r\n\r\n  const handlePriorityFilter = (priority) => {\r\n    setSelectedPriority(priority);\r\n  };\r\n\r\n  const clearFilters = () => {\r\n    setSearchTerm('');\r\n    setSelectedStatus('all');\r\n    setSelectedPriority('all');\r\n    setSortField(null);\r\n    setSortDirection('asc');\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4 min-h-screen\">\r\n      {/* Header */}\r\n      <div className=\"flex flex-col sm:flex-row justify-between items-center mb-6 gap-4\">\r\n        <h1 className=\"text-2xl font-bold\">Task Manager</h1>\r\n        <div className=\"flex flex-col sm:flex-row items-center gap-3 w-full sm:w-auto\">\r\n          <div className=\"relative w-full sm:w-64\">\r\n            <FiSearch className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-600\" />\r\n            <Input\r\n              type=\"text\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n              placeholder=\"Search tasks...\"\r\n              className=\"pl-10 border-gray-300 text-black\"\r\n            />\r\n            {searchTerm && (\r\n              <Button\r\n                variant=\"ghost\"\r\n                size=\"icon\"\r\n                onClick={() => setSearchTerm('')}\r\n                className=\"absolute right-2 top-1/2 transform -translate-y-1/2 text-gray-600 hover:text-blue-600\"\r\n              >\r\n                <FiX className=\"h-5 w-5\" />\r\n              </Button>\r\n            )}\r\n          </div>\r\n          <DropdownMenu>\r\n            <DropdownMenuTrigger asChild>\r\n              <Button\r\n                variant=\"outline\"\r\n                className=\"flex items-center gap-2 border-gray-300 text-black hover:bg-gray-100\"\r\n              >\r\n                <FiFilter />\r\n                <span className=\"hidden sm:inline\">Filter</span>\r\n                <FiChevronDown />\r\n              </Button>\r\n            </DropdownMenuTrigger>\r\n            <DropdownMenuContent align=\"end\" className=\"w-64 bg-white border-gray-200\">\r\n              <DropdownMenuLabel>Filter by Status</DropdownMenuLabel>\r\n              <DropdownMenuItem onClick={() => handleStatusFilter('all')}>\r\n                <div className=\"flex justify-between w-full\">\r\n                  <span>All Tasks</span>\r\n                  <Badge variant=\"secondary\" className=\"bg-gray-100 text-gray-800\">\r\n                    {taskStats.total}\r\n                  </Badge>\r\n                </div>\r\n              </DropdownMenuItem>\r\n              <DropdownMenuItem onClick={() => handleStatusFilter('Pending')}>\r\n                <div className=\"flex justify-between w-full\">\r\n                  <span>Pending</span>\r\n                  <Badge variant=\"secondary\" className=\"bg-gray-100 text-gray-800\">\r\n                    {taskStats.pending}\r\n                  </Badge>\r\n                </div>\r\n              </DropdownMenuItem>\r\n              <DropdownMenuItem onClick={() => handleStatusFilter('In Progress')}>\r\n                <div className=\"flex justify-between w-full\">\r\n                  <span>In Progress</span>\r\n                  <Badge variant=\"secondary\" className=\"bg-gray-100 text-gray-800\">\r\n                    {taskStats.inProgress}\r\n                  </Badge>\r\n                </div>\r\n              </DropdownMenuItem>\r\n              <DropdownMenuItem onClick={() => handleStatusFilter('Completed')}>\r\n                <div className=\"flex justify-between w-full\">\r\n                  <span>Completed</span>\r\n                  <Badge variant=\"secondary\" className=\"bg-gray-100 text-gray-800\">\r\n                    {taskStats.completed}\r\n                  </Badge>\r\n                </div>\r\n              </DropdownMenuItem>\r\n              <DropdownMenuSeparator />\r\n              <DropdownMenuLabel>Filter by Priority</DropdownMenuLabel>\r\n              <DropdownMenuItem onClick={() => handlePriorityFilter('all')}>\r\n                <div className=\"flex justify-between w-full\">\r\n                  <span>All Priorities</span>\r\n                  <Badge variant=\"secondary\" className=\"bg-gray-100 text-gray-800\">\r\n                    {taskStats.total}\r\n                  </Badge>\r\n                </div>\r\n              </DropdownMenuItem>\r\n              <DropdownMenuItem onClick={() => handlePriorityFilter('High')}>\r\n                <div className=\"flex justify-between w-full\">\r\n                  <span>High</span>\r\n                  <Badge variant=\"secondary\" className=\"bg-gray-100 text-gray-800\">\r\n                    {taskStats.highPriority}\r\n                  </Badge>\r\n                </div>\r\n              </DropdownMenuItem>\r\n              <DropdownMenuItem onClick={() => handlePriorityFilter('Medium')}>\r\n                <div className=\"flex justify-between w-full\">\r\n                  <span>Medium</span>\r\n                  <Badge variant=\"secondary\" className=\"bg-gray-100 text-gray-800\">\r\n                    {taskStats.mediumPriority}\r\n                  </Badge>\r\n                </div>\r\n              </DropdownMenuItem>\r\n              <DropdownMenuItem onClick={() => handlePriorityFilter('Low')}>\r\n                <div className=\"flex justify-between w-full\">\r\n                  <span>Low</span>\r\n                  <Badge variant=\"secondary\" className=\"bg-gray-100 text-gray-800\">\r\n                    {taskStats.lowPriority}\r\n                  </Badge>\r\n                </div>\r\n              </DropdownMenuItem>\r\n              <DropdownMenuSeparator />\r\n              <DropdownMenuItem onClick={clearFilters} className=\"justify-center\">\r\n                Clear All Filters\r\n              </DropdownMenuItem>\r\n            </DropdownMenuContent>\r\n          </DropdownMenu>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Tasks Table */}\r\n      {sortedTasks.length === 0 ? (\r\n        <div className=\"text-center bg-white p-6 rounded-md border border-gray-200\">\r\n          <h3 className=\"text-xl font-semibold text-black mb-2\">No tasks found</h3>\r\n          <p className=\"text-gray-600 mb-6\">\r\n            {selectedStatus === 'all' && selectedPriority === 'all' && !searchTerm\r\n              ? 'No tasks available.'\r\n              : 'No tasks match your current filters. Try adjusting your search or filter criteria.'}\r\n          </p>\r\n          <Button\r\n            variant=\"outline\"\r\n            onClick={clearFilters}\r\n            className=\"flex items-center gap-2 mx-auto border-gray-300 text-black hover:bg-gray-100\"\r\n          >\r\n            <FiX />\r\n            Clear Filters\r\n          </Button>\r\n        </div>\r\n      ) : (\r\n        <div className=\"overflow-x-auto border border-gray-200 rounded-md\">\r\n          <Table>\r\n            <TableHeader className=\"sticky top-0 bg-gradient-to-r from-blue-600 to-indigo-600 text-white z-10\">\r\n              <TableRow>\r\n                <TableHead\r\n               className=\" !text-white\"\r\n                  onClick={() => handleSort('task_id')}\r\n                >\r\n                  Task ID\r\n                  {sortField === 'task_id' &&\r\n                    (sortDirection === 'asc' ? (\r\n                      <FiArrowUp className=\"inline ml-1\" />\r\n                    ) : (\r\n                      <FiArrowDown className=\"inline ml-1\" />\r\n                    ))}\r\n                </TableHead>\r\n                <TableHead\r\n                className=\" !text-white\"\r\n                  onClick={() => handleSort('title')}\r\n                >\r\n                  Title\r\n                  {sortField === 'title' &&\r\n                    (sortDirection === 'asc' ? (\r\n                      <FiArrowUp className=\"inline ml-1\" />\r\n                    ) : (\r\n                      <FiArrowDown className=\"inline ml-1\" />\r\n                    ))}\r\n                </TableHead>\r\n                <TableHead\r\n                  className=\" !text-white\"\r\n                  onClick={() => handleSort('status')}\r\n                >\r\n                  Status\r\n                  {sortField === 'status' &&\r\n                    (sortDirection === 'asc' ? (\r\n                      <FiArrowUp className=\"inline ml-1\" />\r\n                    ) : (\r\n                      <FiArrowDown className=\"inline ml-1\" />\r\n                    ))}\r\n                </TableHead>\r\n                <TableHead\r\n                  className=\" !text-white\"\r\n                  onClick={() => handleSort('priority')}\r\n                >\r\n                  Priority\r\n                  {sortField === 'priority' &&\r\n                    (sortDirection === 'asc' ? (\r\n                      <FiArrowUp className=\"inline ml-1\" />\r\n                    ) : (\r\n                      <FiArrowDown className=\"inline ml-1\" />\r\n                    ))}\r\n                </TableHead>\r\n                <TableHead className=\" !text-white\">Project Name</TableHead>\r\n                <TableHead className=\" !text-white\">Action</TableHead>\r\n              </TableRow>\r\n            </TableHeader>\r\n            <TableBody>\r\n              {paginatedTasks.map((task) => (\r\n                <TableRow key={task.task_id}>\r\n                  <TableCell>{task.task_id}</TableCell>\r\n                  <TableCell>{task.title}</TableCell>\r\n                  <TableCell>\r\n                    <Badge\r\n                      className={cn('capitalize border', statusColors[task.status] || '')}\r\n                    >\r\n                      {task.status}\r\n                    </Badge>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Badge\r\n                      className={cn(\r\n                        'capitalize border',\r\n                        priorityColors[task.priority] || ''\r\n                      )}\r\n                    >\r\n                      {task.priority}\r\n                    </Badge>\r\n                  </TableCell>\r\n                  <TableCell>{task.projectName || 'N/A'}</TableCell>\r\n                  <TableCell>\r\n                    <TooltipProvider delayDuration={100}>\r\n                      <Tooltip>\r\n                        <TooltipTrigger asChild>\r\n                          <Button\r\n                            variant=\"ghost\"\r\n                            size=\"icon\"\r\n                            onClick={() => setViewTask(task)}\r\n                            className=\"text-blue-600 hover:text-blue-800\"\r\n                          >\r\n                            <FiEye />\r\n                          </Button>\r\n                        </TooltipTrigger>\r\n                        <TooltipContent side=\"top\">\r\n                          <span>View Task</span>\r\n                        </TooltipContent>\r\n                      </Tooltip>\r\n                    </TooltipProvider>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n      )}\r\n\r\n      {/* Pagination */}\r\n      {totalPages > 1 && (\r\n        <div className=\"flex flex-col sm:flex-row justify-between items-center mt-4 gap-4\">\r\n          <div className=\"flex items-center space-x-2\">\r\n            <Label htmlFor=\"itemsPerPage\" className=\"text-black\">\r\n              Tasks per page:\r\n            </Label>\r\n            <select\r\n              id=\"itemsPerPage\"\r\n              value={itemsPerPage}\r\n              onChange={(e) => setItemsPerPage(Number(e.target.value))}\r\n              className=\"border border-gray-300 rounded px-2 py-1 text-black\"\r\n            >\r\n              <option value=\"6\">6</option>\r\n              <option value=\"10\">10</option>\r\n              <option value=\"20\">20</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"flex items-center gap-2\">\r\n            <Button\r\n              variant=\"outline\"\r\n              disabled={currentPage === 1}\r\n              onClick={() => handlePageChange(currentPage - 1)}\r\n              className=\"border-gray-300 text-black hover:bg-gray-100\"\r\n            >\r\n              Previous\r\n            </Button>\r\n            {[...Array(totalPages).keys()].map((page) => (\r\n              <Button\r\n                key={page + 1}\r\n                variant={currentPage === page + 1 ? 'default' : 'outline'}\r\n                onClick={() => handlePageChange(page + 1)}\r\n                className={\r\n                  currentPage === page + 1\r\n                    ? 'bg-blue-600 text-white hover:bg-blue-700'\r\n                    : 'border-gray-300 text-black hover:bg-gray-100'\r\n                }\r\n              >\r\n                {page + 1}\r\n              </Button>\r\n            ))}\r\n            <Button\r\n              variant=\"outline\"\r\n              disabled={currentPage === totalPages}\r\n              onClick={() => handlePageChange(currentPage + 1)}\r\n              className=\"border-gray-300 text-black hover:bg-gray-100\"\r\n            >\r\n              Next\r\n            </Button>\r\n          </div>\r\n          <div className=\"flex items-center space-x-2\">\r\n            <Label htmlFor=\"goToPage\" className=\"text-black\">\r\n              Go to page:\r\n            </Label>\r\n            <Input\r\n              id=\"goToPage\"\r\n              type=\"number\"\r\n              value={goToPage}\r\n              onChange={(e) => setGoToPage(e.target.value)}\r\n              className=\"w-20 border-gray-300 text-black\"\r\n              placeholder=\"Page\"\r\n              min=\"1\"\r\n              max={totalPages}\r\n            />\r\n            <Button\r\n              onClick={handleGoToPage}\r\n              className=\"bg-blue-600 hover:bg-blue-700 text-white\"\r\n            >\r\n              Go\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* View Task Modal */}\r\n      {viewTask && (\r\n        <Dialog open={!!viewTask} onOpenChange={() => setViewTask(null)}>\r\n          <DialogContent className=\"bg-white border border-gray-200 max-w-lg\">\r\n            <DialogHeader>\r\n              <DialogTitle className=\"text-black\">Task Details</DialogTitle>\r\n            </DialogHeader>\r\n            <div className=\"grid gap-3 py-2 text-black\">\r\n              {[\r\n                { label: 'Task ID:', value: viewTask.task_id },\r\n                { label: 'Project Name:', value: viewTask.projectName || 'N/A' },\r\n                { label: 'Title:', value: viewTask.title },\r\n                {\r\n                  label: 'Description:',\r\n                  value: viewTask.description || 'No description',\r\n                },\r\n                {\r\n                  label: 'Status:',\r\n                  value: (\r\n                    <Badge\r\n                      className={cn(\r\n                        'capitalize border',\r\n                        statusColors[viewTask.status] || ''\r\n                      )}\r\n                    >\r\n                      {viewTask.status}\r\n                    </Badge>\r\n                  ),\r\n                },\r\n                {\r\n                  label: 'Priority:',\r\n                  value: (\r\n                    <Badge\r\n                      className={cn(\r\n                        'capitalize border',\r\n                        priorityColors[viewTask.priority] || ''\r\n                      )}\r\n                    >\r\n                      {viewTask.priority}\r\n                    </Badge>\r\n                  ),\r\n                },\r\n                {\r\n                  label: 'Deadline:',\r\n                  value: viewTask.deadline\r\n                    ? new Date(viewTask.deadline).toLocaleDateString('en-IN')\r\n                    : 'N/A',\r\n                },\r\n              ].map(({ label, value }, idx) => (\r\n                <div key={idx} className=\"flex justify-between\">\r\n                  <Label>{label}</Label>\r\n                  <span>{value}</span>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </DialogContent>\r\n        </Dialog>\r\n      )}\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1357, "column": 0}, "map": {"version":3,"sources":["file:///C:/Dev%20Directory/Blueprints/blueprintfro-v1/src/components/ui/select.jsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\r\nimport { CheckIcon, ChevronDownIcon, ChevronUpIcon } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Select({\r\n  ...props\r\n}) {\r\n  return <SelectPrimitive.Root data-slot=\"select\" {...props} />;\r\n}\r\n\r\nfunction SelectGroup({\r\n  ...props\r\n}) {\r\n  return <SelectPrimitive.Group data-slot=\"select-group\" {...props} />;\r\n}\r\n\r\nfunction SelectValue({\r\n  ...props\r\n}) {\r\n  return <SelectPrimitive.Value data-slot=\"select-value\" {...props} />;\r\n}\r\n\r\nfunction SelectTrigger({\r\n  className,\r\n  size = \"default\",\r\n  children,\r\n  ...props\r\n}) {\r\n  return (\r\n    <SelectPrimitive.Trigger\r\n      data-slot=\"select-trigger\"\r\n      data-size={size}\r\n      className={cn(\r\n        \"border-input data-[placeholder]:text-muted-foreground [&_svg:not([class*='text-'])]:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 dark:hover:bg-input/50 flex w-fit items-center justify-between gap-2 rounded-md border bg-transparent px-3 py-2 text-sm whitespace-nowrap shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 data-[size=default]:h-9 data-[size=sm]:h-8 *:data-[slot=select-value]:line-clamp-1 *:data-[slot=select-value]:flex *:data-[slot=select-value]:items-center *:data-[slot=select-value]:gap-2 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\r\n        className\r\n      )}\r\n      {...props}>\r\n      {children}\r\n      <SelectPrimitive.Icon asChild>\r\n        <ChevronDownIcon className=\"size-4 opacity-50\" />\r\n      </SelectPrimitive.Icon>\r\n    </SelectPrimitive.Trigger>\r\n  );\r\n}\r\n\r\nfunction SelectContent({\r\n  className,\r\n  children,\r\n  position = \"popper\",\r\n  ...props\r\n}) {\r\n  return (\r\n    <SelectPrimitive.Portal>\r\n      <SelectPrimitive.Content\r\n        data-slot=\"select-content\"\r\n        className={cn(\r\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 relative z-50 max-h-(--radix-select-content-available-height) min-w-[8rem] origin-(--radix-select-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border shadow-md\",\r\n          position === \"popper\" &&\r\n            \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\r\n          className\r\n        )}\r\n        position={position}\r\n        {...props}>\r\n        <SelectScrollUpButton />\r\n        <SelectPrimitive.Viewport\r\n          className={cn(\"p-1\", position === \"popper\" &&\r\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)] scroll-my-1\")}>\r\n          {children}\r\n        </SelectPrimitive.Viewport>\r\n        <SelectScrollDownButton />\r\n      </SelectPrimitive.Content>\r\n    </SelectPrimitive.Portal>\r\n  );\r\n}\r\n\r\nfunction SelectLabel({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    <SelectPrimitive.Label\r\n      data-slot=\"select-label\"\r\n      className={cn(\"text-muted-foreground px-2 py-1.5 text-xs\", className)}\r\n      {...props} />\r\n  );\r\n}\r\n\r\nfunction SelectItem({\r\n  className,\r\n  children,\r\n  ...props\r\n}) {\r\n  return (\r\n    <SelectPrimitive.Item\r\n      data-slot=\"select-item\"\r\n      className={cn(\r\n        \"focus:bg-accent focus:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex w-full cursor-default items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-2\",\r\n        className\r\n      )}\r\n      {...props}>\r\n      <span className=\"absolute right-2 flex size-3.5 items-center justify-center\">\r\n        <SelectPrimitive.ItemIndicator>\r\n          <CheckIcon className=\"size-4\" />\r\n        </SelectPrimitive.ItemIndicator>\r\n      </span>\r\n      <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\r\n    </SelectPrimitive.Item>\r\n  );\r\n}\r\n\r\nfunction SelectSeparator({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    <SelectPrimitive.Separator\r\n      data-slot=\"select-separator\"\r\n      className={cn(\"bg-border pointer-events-none -mx-1 my-1 h-px\", className)}\r\n      {...props} />\r\n  );\r\n}\r\n\r\nfunction SelectScrollUpButton({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    <SelectPrimitive.ScrollUpButton\r\n      data-slot=\"select-scroll-up-button\"\r\n      className={cn(\"flex cursor-default items-center justify-center py-1\", className)}\r\n      {...props}>\r\n      <ChevronUpIcon className=\"size-4\" />\r\n    </SelectPrimitive.ScrollUpButton>\r\n  );\r\n}\r\n\r\nfunction SelectScrollDownButton({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    <SelectPrimitive.ScrollDownButton\r\n      data-slot=\"select-scroll-down-button\"\r\n      className={cn(\"flex cursor-default items-center justify-center py-1\", className)}\r\n      {...props}>\r\n      <ChevronDownIcon className=\"size-4\" />\r\n    </SelectPrimitive.ScrollDownButton>\r\n  );\r\n}\r\n\r\nexport {\r\n  Select,\r\n  SelectContent,\r\n  SelectGroup,\r\n  SelectItem,\r\n  SelectLabel,\r\n  SelectScrollDownButton,\r\n  SelectScrollUpButton,\r\n  SelectSeparator,\r\n  SelectTrigger,\r\n  SelectValue,\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1584, "column": 0}, "map": {"version":3,"sources":["file:///C:/Dev%20Directory/Blueprints/blueprintfro-v1/src/components/ui/textarea.jsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Textarea({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    <textarea\r\n      data-slot=\"textarea\"\r\n      className={cn(\r\n        \"border-input placeholder:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 flex field-sizing-content min-h-16 w-full rounded-md border bg-transparent px-3 py-2 text-base shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\r\n        className\r\n      )}\r\n      {...props} />\r\n  );\r\n}\r\n\r\nexport { Textarea }\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,ucACA;QAED,GAAG,KAAK;;;;;;AAEf","debugId":null}},
    {"offset": {"line": 1611, "column": 0}, "map": {"version":3,"sources":["file:///C:/Dev%20Directory/Blueprints/blueprintfro-v1/src/utils/formatDate.js"],"sourcesContent":["// lib/formatRange.js\r\nexport function formatRange(start, end) {\r\n  const options = { month: 'short', day: 'numeric' };\r\n  const startStr = start.toLocaleDateString(undefined, options);\r\n  const endStr = end.toLocaleDateString(undefined, options);\r\n\r\n  return `${startStr} – ${endStr}`;\r\n}\r\n\r\n\r\n\r\n\r\n// utils/date.js\r\nexport function formatDateUTC(dateString) {\r\n    if (!dateString) return '';\r\n    return new Date(dateString).toLocaleDateString('en-GB', {\r\n        timeZone: 'UTC',\r\n        day: '2-digit',\r\n        month: 'short',\r\n        year: 'numeric'\r\n    });\r\n}\r\n"],"names":[],"mappings":"AAAA,qBAAqB;;;;;AACd,SAAS,YAAY,KAAK,EAAE,GAAG;IACpC,MAAM,UAAU;QAAE,OAAO;QAAS,KAAK;IAAU;IACjD,MAAM,WAAW,MAAM,kBAAkB,CAAC,WAAW;IACrD,MAAM,SAAS,IAAI,kBAAkB,CAAC,WAAW;IAEjD,OAAO,GAAG,SAAS,GAAG,EAAE,QAAQ;AAClC;AAMO,SAAS,cAAc,UAAU;IACpC,IAAI,CAAC,YAAY,OAAO;IACxB,OAAO,IAAI,KAAK,YAAY,kBAAkB,CAAC,SAAS;QACpD,UAAU;QACV,KAAK;QACL,OAAO;QACP,MAAM;IACV;AACJ","debugId":null}},
    {"offset": {"line": 1640, "column": 0}, "map": {"version":3,"sources":["file:///C:/Dev%20Directory/Blueprints/blueprintfro-v1/src/modules/TaskModules/EmployeeTaskList.js"],"sourcesContent":["\r\n\r\n'use client';\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useRouter } from 'next/navigation';\r\nimport { getAllTaskByEmployeeId, updateTaskStatus } from '@/features/taskSlice';\r\nimport {\r\n  FiSearch,\r\n  FiFilter,\r\n  FiChevronDown,\r\n  FiArrowUp,\r\n  FiArrowDown,\r\n  FiEye,\r\n  FiEdit,\r\n  FiClock,\r\n  FiAlertCircle,\r\n  FiCheckCircle,\r\n  FiX,\r\n  FiCalendar,\r\n} from 'react-icons/fi';\r\nimport { Briefcase } from 'lucide-react';\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from '@/components/ui/table';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuTrigger,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuLabel,\r\n  DropdownMenuSeparator,\r\n} from '@/components/ui/dropdown-menu';\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogHeader,\r\n  DialogTitle,\r\n  DialogFooter,\r\n} from '@/components/ui/dialog';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\r\nimport { toast } from \"sonner\";\r\nimport { Skeleton } from '@/components/ui/skeleton';\r\nimport { Textarea } from '@/components/ui/textarea';\r\nimport { formatDateUTC } from '@/utils/formatDate';\r\n\r\n// Status and priority styling (black and white)\r\nconst statusColors = {\r\n  Planned: 'bg-green-100 text-green-800 border-green-200',\r\n  'In Progress': 'bg-green-200 text-green-900 border-green-300',\r\n  Completed: 'bg-green-300 text-green-900 border-green-400',\r\n};\r\n\r\nconst statusIcons = {\r\n  Planned: <FiClock className=\"inline-block mr-1\" />,\r\n  'In Progress': <FiAlertCircle className=\"inline-block mr-1\" />,\r\n  Completed: <FiCheckCircle className=\"inline-block mr-1\" />,\r\n};\r\n\r\nconst priorityColors = {\r\n  High: 'bg-red-100 text-red-800 border-red-200',\r\n  Medium: 'bg-yellow-100 text-yellow-800 border-yellow-200',\r\n  Low: 'bg-green-100 text-green-800 border-green-200',\r\n};\r\nconst reviewStatusColors = {\r\n  NA: 'bg-gray-100 text-gray-800 border-gray-300',           // Neutral / Not Available\r\n  INREVIEW: 'bg-blue-100 text-blue-800 border-blue-200',     // Info / In Review\r\n  BUGREPORTED: 'bg-yellow-100 text-yellow-800 border-yellow-300', // Warning / Bug Reported\r\n  RESOLVED: 'bg-green-100 text-green-800 border-green-300',  // Success / Resolved\r\n};\r\n\r\nconst AllTasksList = () => {\r\n  const dispatch = useDispatch();\r\n  const router = useRouter();\r\n  const { employeeTasks, isLoading, error } = useSelector((state) => state.task);\r\n  const { employeeData, loading: userLoading } = useSelector((state) => state.user);\r\n  const employeeId = employeeData?.employeeID;\r\n\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedStatus, setSelectedStatus] = useState('all');\r\n  const [selectedPriority, setSelectedPriority] = useState('all');\r\n  const [sortField, setSortField] = useState(null); // No default sorting\r\n  const [sortDirection, setSortDirection] = useState('asc');\r\n  const [viewTask, setViewTask] = useState(null);\r\n  const [editTask, setEditTask] = useState(null);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [tasksPerPage, setTasksPerPage] = useState(8);\r\n  const [goToPage, setGoToPage] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (employeeId) {\r\n      dispatch(getAllTaskByEmployeeId(employeeId));\r\n    }\r\n  }, [dispatch, employeeId]);\r\n\r\n  // Reset to first page when filters or tasksPerPage change\r\n  useEffect(() => {\r\n    setCurrentPage(1);\r\n  }, [searchTerm, selectedStatus, selectedPriority, tasksPerPage]);\r\n\r\n  const tasks = employeeTasks || [];\r\n\r\n  // Calculate task statistics\r\n  const taskStats = {\r\n    total: tasks.length,\r\n    planned: tasks.filter((task) => task.status === 'Planned').length,\r\n    inProgress: tasks.filter((task) => task.status === 'In Progress').length,\r\n    completed: tasks.filter((task) => task.status === 'Completed').length,\r\n    highPriority: tasks.filter((task) => task.priority === 'High').length,\r\n    mediumPriority: tasks.filter((task) => task.priority === 'Medium').length,\r\n    lowPriority: tasks.filter((task) => task.priority === 'Low').length,\r\n  };\r\n\r\n  // Filter and sort tasks\r\n  const filteredAndSortedTasks = () => {\r\n    let filtered = tasks;\r\n\r\n    if (selectedStatus !== 'all') {\r\n      filtered = filtered.filter((task) => task.status === selectedStatus);\r\n    }\r\n\r\n    if (selectedPriority !== 'all') {\r\n      filtered = filtered.filter((task) => task.priority === selectedPriority);\r\n    }\r\n\r\n    if (searchTerm.trim() !== '') {\r\n      const term = searchTerm.toLowerCase();\r\n      filtered = filtered.filter(\r\n        (task) =>\r\n          task.title?.toLowerCase().includes(term) ||\r\n          task.projectName?.toLowerCase().includes(term) ||\r\n          task.assignedBy?.toLowerCase().includes(term) ||\r\n          task.task_id?.toString().includes(term)\r\n      );\r\n    }\r\n\r\n    // Only sort if sortField is set\r\n    if (sortField) {\r\n      return [...filtered].sort((a, b) => {\r\n        const fieldA = a[sortField] || '';\r\n        const fieldB = b[sortField] || '';\r\n        if (sortDirection === 'asc') {\r\n          return fieldA < fieldB ? -1 : fieldA > fieldB ? 1 : 0;\r\n        } else {\r\n          return fieldA > fieldB ? -1 : fieldA < fieldB ? 1 : 0;\r\n        }\r\n      });\r\n    }\r\n\r\n    return filtered; // Return unsorted filtered list by default\r\n  };\r\n\r\n  // Pagination logic\r\n  const sortedTasks = filteredAndSortedTasks();\r\n  const totalPages = Math.ceil(sortedTasks.length / tasksPerPage);\r\n  const indexOfLastTask = currentPage * tasksPerPage;\r\n  const indexOfFirstTask = indexOfLastTask - tasksPerPage;\r\n  const currentTasks = sortedTasks.slice(indexOfFirstTask, indexOfLastTask);\r\n\r\n  const handlePageChange = (pageNumber) => {\r\n    if (pageNumber >= 1 && pageNumber <= totalPages) {\r\n      setCurrentPage(pageNumber);\r\n    }\r\n  };\r\n\r\n  const handleGoToPage = (e) => {\r\n    e.preventDefault();\r\n    const page = parseInt(goToPage, 10);\r\n    if (!isNaN(page) && page >= 1 && page <= totalPages) {\r\n      setCurrentPage(page);\r\n      setGoToPage('');\r\n    } else {\r\n      toast.info(`Please enter a page number between 1 and ${totalPages}.`);\r\n    }\r\n  };\r\n\r\n  const handleViewTask = (task) => {\r\n    setViewTask(task);\r\n  };\r\n\r\n  const handleEditTask = (task) => {\r\n    if (task.status !== 'Completed') {\r\n      setEditTask({ ...task, delayReason: task.delayReason || '' });\r\n    }\r\n  };\r\n\r\n  const handleSaveEdit = async () => {\r\n    try {\r\n      const payload = { \r\n        task_id: editTask.task_id, \r\n        status: editTask.status \r\n      };\r\n      if (new Date(editTask.deadline) < new Date()) {\r\n        payload.delayReason = editTask.delayReason || '';\r\n      }\r\n      const result = await dispatch(updateTaskStatus(payload));\r\n      if (updateTaskStatus.fulfilled.match(result)) {\r\n        toast.success('Task status updated successfully!');\r\n        setEditTask(null);\r\n        dispatch(getAllTaskByEmployeeId(employeeId));\r\n      } else {\r\n        toast.error('Failed to update task status.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating task status:', error);\r\n      toast.error('An unexpected error occurred.');\r\n    }\r\n  };\r\n\r\n  const handleSort = (field) => {\r\n    if (sortField === field) {\r\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\r\n    } else {\r\n      setSortField(field);\r\n      setSortDirection('asc');\r\n    }\r\n  };\r\n\r\n  const handleStatusFilter = (status) => {\r\n    setSelectedStatus(status);\r\n  };\r\n\r\n  const handlePriorityFilter = (priority) => {\r\n    setSelectedPriority(priority);\r\n  };\r\n\r\n  const clearFilters = () => {\r\n    setSearchTerm('');\r\n    setSelectedStatus('all');\r\n    setSelectedPriority('all');\r\n    setSortField(null); // Reset sorting\r\n    setSortDirection('asc');\r\n  };\r\n\r\n  // Check if deadline has passed\r\nconst isdeadlinePassed = (task) => {\r\n    if (!task?.deadline) return false;\r\n\r\n    const deadlineDate = new Date(task.deadline);\r\n    const now = new Date();\r\n\r\n    // Convert both dates to UTC midnight for comparison\r\n    const deadlineUTC = Date.UTC(deadlineDate.getUTCFullYear(), deadlineDate.getUTCMonth(), deadlineDate.getUTCDate());\r\n    const nowUTC = Date.UTC(now.getUTCFullYear(), now.getUTCMonth(), now.getUTCDate());\r\n\r\n    // Optional: formatted dates for logging or display\r\n    // console.log('Deadline (UTC formatted):', formatDateUTC(deadlineDate));\r\n    // console.log('Today (UTC formatted):', formatDateUTC(now));\r\n\r\n    return deadlineUTC < nowUTC;\r\n};\r\n\r\n\r\n\r\n  // Loading state\r\n  if (isLoading || userLoading) {\r\n    return (\r\n      <div className=\"p-6 space-y-4 bg-white rounded-lg shadow-md border border-gray-200\">\r\n        {[...Array(5)].map((_, i) => (\r\n          <Skeleton key={i} className=\"h-12 w-full rounded-lg\" />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Error state\r\n  if (error) {\r\n    return (\r\n      <div className=\"mt-8 text-center bg-white p-6 rounded-lg shadow-md border border-gray-200\">\r\n        <div className=\"inline-flex items-center justify-center w-16 h-16 rounded-full bg-gray-100 text-gray-800 mb-4\">\r\n          <FiCalendar className=\"text-3xl\" />\r\n        </div>\r\n        <h3 className=\"text-xl font-semibold text-gray-800 mb-2\">\r\n          Error loading tasks\r\n        </h3>\r\n        <p className=\"text-gray-600 mb-6 max-w-md mx-auto\">\r\n          {error}\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* Header */}\r\n      <div className=\"bg-white border-b border-gray-200 shadow-sm\">\r\n        <div className=\"container mx-auto px-4 py-6 sm:py-8\">\r\n          <div className=\"flex flex-col sm:flex-row items-center justify-between gap-4 sm:gap-6\">\r\n            <div className=\"flex items-center gap-3\">\r\n              <h1 className=\"text-2xl sm:text-3xl font-bold text-gray-800\">\r\n                My Tasks\r\n              </h1>\r\n            </div>\r\n            <div className=\"flex flex-col sm:flex-row items-center gap-3 w-full sm:w-auto\">\r\n              <div className=\"relative w-full sm:w-64 md:w-80\">\r\n                <FiSearch className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-800\" />\r\n                <Input\r\n                  type=\"text\"\r\n                  value={searchTerm}\r\n                  onChange={(e) => setSearchTerm(e.target.value)}\r\n                  placeholder=\"Search tasks...\"\r\n                  className=\"pl-10 border-gray-300 focus:border-[#1447e6] focus:ring-[#1447e6] text-gray-800\"\r\n                />\r\n                {searchTerm && (\r\n                  <Button\r\n                    variant=\"ghost\"\r\n                    size=\"icon\"\r\n                    onClick={() => setSearchTerm('')}\r\n                    className=\"absolute right-2 top-1/2 transform -translate-y-1/2 text-gray-800 hover:text-[#1447e6] hover:bg-gray-100\"\r\n                  >\r\n                    <FiX className=\"h-5 w-5\" />\r\n                  </Button>\r\n                )}\r\n              </div>\r\n              <DropdownMenu>\r\n                <DropdownMenuTrigger asChild>\r\n                  <Button\r\n                    variant=\"outline\"\r\n                    className=\"flex items-center gap-2 border-gray-300 text-gray-800 hover:bg-gray-100\"\r\n                  >\r\n                    <FiFilter />\r\n                    <span className=\"hidden sm:inline\">Filter</span>\r\n                    <FiChevronDown />\r\n                  </Button>\r\n                </DropdownMenuTrigger>\r\n               \r\n                <DropdownMenuContent align=\"end\" className=\"w-64 bg-white border-green-200\">\r\n  <DropdownMenuLabel>Filter by Status</DropdownMenuLabel>\r\n\r\n  <DropdownMenuItem onClick={() => handleStatusFilter('all')}>\r\n    <div className=\"flex justify-between w-full\">\r\n      <span>All Tasks</span>\r\n      <Badge variant=\"secondary\" className=\"bg-green-100 text-green-800\">\r\n        {taskStats.total}\r\n      </Badge>\r\n    </div>\r\n  </DropdownMenuItem>\r\n\r\n\r\n\r\n  <DropdownMenuItem onClick={() => handleStatusFilter('In Progress')}>\r\n    <div className=\"flex justify-between w-full\">\r\n      <div className=\"flex items-center\">\r\n        <FiAlertCircle className=\"mr-1.5 text-green-600\" />\r\n        In Progress\r\n      </div>\r\n      <Badge variant=\"secondary\" className=\"bg-green-100 text-green-800\">\r\n        {taskStats.inProgress}\r\n      </Badge>\r\n    </div>\r\n  </DropdownMenuItem>\r\n\r\n  <DropdownMenuItem onClick={() => handleStatusFilter('Completed')}>\r\n    <div className=\"flex justify-between w-full\">\r\n      <div className=\"flex items-center\">\r\n        <FiCheckCircle className=\"mr-1.5 text-green-700\" />\r\n        Completed\r\n      </div>\r\n      <Badge variant=\"secondary\" className=\"bg-green-100 text-green-800\">\r\n        {taskStats.completed}\r\n      </Badge>\r\n    </div>\r\n  </DropdownMenuItem>\r\n\r\n  <DropdownMenuSeparator />\r\n\r\n  <DropdownMenuLabel>Filter by Priority</DropdownMenuLabel>\r\n\r\n  <DropdownMenuItem onClick={() => handlePriorityFilter('all')}>\r\n    <div className=\"flex justify-between w-full\">\r\n      <span>All Priorities</span>\r\n      <Badge variant=\"secondary\" className=\"bg-green-100 text-green-800\">\r\n        {taskStats.total}\r\n      </Badge>\r\n    </div>\r\n  </DropdownMenuItem>\r\n\r\n  <DropdownMenuItem onClick={() => handlePriorityFilter('High')}>\r\n    <div className=\"flex justify-between w-full\">\r\n      <div className=\"flex items-center\">\r\n        <span className=\"mr-1.5 text-red-500\">●</span>\r\n        High\r\n      </div>\r\n      <Badge variant=\"secondary\" className=\"bg-green-100 text-green-800\">\r\n        {taskStats.highPriority}\r\n      </Badge>\r\n    </div>\r\n  </DropdownMenuItem>\r\n\r\n  <DropdownMenuItem onClick={() => handlePriorityFilter('Medium')}>\r\n    <div className=\"flex justify-between w-full\">\r\n      <div className=\"flex items-center\">\r\n        <span className=\"mr-1.5 text-yellow-500\">●</span>\r\n        Medium\r\n      </div>\r\n      <Badge variant=\"secondary\" className=\"bg-green-100 text-green-800\">\r\n        {taskStats.mediumPriority}\r\n      </Badge>\r\n    </div>\r\n  </DropdownMenuItem>\r\n\r\n  <DropdownMenuItem onClick={() => handlePriorityFilter('Low')}>\r\n    <div className=\"flex justify-between w-full\">\r\n      <div className=\"flex items-center\">\r\n        <span className=\"mr-1.5 text-green-500\">●</span>\r\n        Low\r\n      </div>\r\n      <Badge variant=\"secondary\" className=\"bg-green-100 text-green-800\">\r\n        {taskStats.lowPriority}\r\n      </Badge>\r\n    </div>\r\n  </DropdownMenuItem>\r\n\r\n  <DropdownMenuSeparator />\r\n\r\n  <DropdownMenuItem onClick={clearFilters} className=\"justify-center\">\r\n    Clear All Filters\r\n  </DropdownMenuItem>\r\n</DropdownMenuContent>\r\n\r\n              </DropdownMenu>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Tasks Table */}\r\n      {sortedTasks.length === 0 ? (\r\n        <div className=\"mt-8 text-center bg-white p-6 rounded-lg shadow-md border border-gray-200\">\r\n          <div className=\"inline-flex items-center justify-center w-16 h-16 rounded-full bg-gray-100 text-gray-800 mb-4\">\r\n            <FiCalendar className=\"text-3xl\" />\r\n          </div>\r\n          <h3 className=\"text-xl font-semibold text-gray-800 mb-2\">No tasks found</h3>\r\n          <p className=\"text-gray-600 mb-6 max-w-md mx-auto\">\r\n            {selectedStatus === 'all' && selectedPriority === 'all' && !searchTerm\r\n              ? 'You have no tasks assigned to you.'\r\n              : 'No tasks match your current filters. Try adjusting your search or filter criteria.'}\r\n          </p>\r\n          <Button\r\n            variant=\"outline\"\r\n            onClick={clearFilters}\r\n            className=\"flex items-center gap-2 mx-auto border-gray-300 text-gray-800 hover:bg-gray-100\"\r\n          >\r\n            <FiX />\r\n            Clear Filters\r\n          </Button>\r\n        </div>\r\n      ) : (\r\n        <div className=\"mt-0 bg-white rounded-lg shadow-md border border-gray-200\">\r\n          <Table>\r\n            <TableHeader>\r\n              <TableRow className=\"bg-gradient-to-r from-blue-600 to-indigo-600 text-white\">\r\n                <TableHead\r\n                  className=\"w-[100px] text-gray-800 cursor-pointer text-white\"\r\n                  onClick={() => handleSort('task_id')}\r\n                >\r\n                  ID\r\n                  {sortField === 'task_id' &&\r\n                    (sortDirection === 'asc' ? <FiArrowUp className=\"inline ml-1\" /> : <FiArrowDown className=\"inline ml-1\" />)}\r\n                </TableHead>\r\n                <TableHead\r\n                  className=\"text-gray-800 cursor-pointer text-white\"\r\n                  onClick={() => handleSort('title')}\r\n                >\r\n                  Task Name\r\n                  {sortField === 'title' &&\r\n                    (sortDirection === 'asc' ? <FiArrowUp className=\"inline ml-1\" /> : <FiArrowDown className=\"inline ml-1\" />)}\r\n                </TableHead>\r\n                <TableHead className=\"text-gray-800 text-white\">Project Name</TableHead>\r\n                <TableHead\r\n                  className=\"text-gray-800 cursor-pointer text-white\"\r\n                  onClick={() => handleSort('status')}\r\n                >\r\n                  Status\r\n                  {sortField === 'status' &&\r\n                    (sortDirection === 'asc' ? <FiArrowUp className=\"inline ml-1\" /> : <FiArrowDown className=\"inline ml-1\" />)}\r\n                </TableHead>\r\n                <TableHead className=\"text-gray-800 text-white\">Deadline</TableHead>\r\n                <TableHead\r\n                  className=\"text-gray-800 cursor-pointer text-white\"\r\n                  onClick={() => handleSort('priority')}\r\n                >\r\n                  Priority\r\n                  {sortField === 'priority' &&\r\n                    (sortDirection === 'asc' ? <FiArrowUp className=\"inline ml-1\" /> : <FiArrowDown className=\"inline ml-1\" />)}\r\n                </TableHead>\r\n                <TableHead className=\"text-gray-800 text-white\">Actions</TableHead>\r\n              </TableRow>\r\n            </TableHeader>\r\n            <TableBody>\r\n              {currentTasks.map((task) => (\r\n                <TableRow key={task._id} className=\"hover:bg-gray-100\">\r\n                  <TableCell className=\"font-medium text-gray-800\">{task.task_id}</TableCell>\r\n                  <TableCell className=\"text-gray-800 max-w-xs truncate\">{task.title}</TableCell>\r\n                  <TableCell className=\"text-gray-800\">{task.projectName}</TableCell>\r\n                  <TableCell>\r\n                    <Badge className={`${statusColors[task.status]} border`}>\r\n                      {statusIcons[task.status]}\r\n                      {task.status}\r\n                    </Badge>\r\n                  </TableCell>\r\n                  <TableCell className=\"text-gray-800\">\r\n                   {formatDateUTC(task.deadline)}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Badge className={`${priorityColors[task.priority]} border`}>{task.priority}</Badge>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <div className=\"flex gap-2\">\r\n                      <Button\r\n                        variant=\"ghost\"\r\n                        size=\"icon\"\r\n                        className=\"text-gray-800 hover:text-[#1447e6] hover:bg-gray-100\"\r\n                        onClick={() => handleViewTask(task)}\r\n                      >\r\n                        <FiEye className=\"w-5 h-5\" />\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"ghost\"\r\n                        size=\"icon\"\r\n                        className={`${\r\n                          task.status === 'Completed'\r\n                            ? 'text-gray-400 cursor-not-allowed'\r\n                            : 'text-gray-800 hover:text-[#1447e6] hover:bg-gray-100'\r\n                        }`}\r\n                        onClick={() => handleEditTask(task)}\r\n                        disabled={task.status === 'Completed'}\r\n                      >\r\n                        <FiEdit className=\"w-5 h-5\" />\r\n                      </Button>\r\n                    </div>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n\r\n          {/* Pagination */}\r\n          {totalPages > 1 && (\r\n            <div className=\"flex flex-col sm:flex-row justify-between items-center space-y-4 sm:space-y-0 sm:space-x-4 mt-4 mb-10 px-4\">\r\n              <div className=\"flex items-center space-x-2\">\r\n                <Label htmlFor=\"tasksPerPage\" className=\"text-gray-800\">\r\n                  Tasks per page:\r\n                </Label>\r\n                <Select\r\n                  value={tasksPerPage.toString()}\r\n                  onValueChange={(value) => setTasksPerPage(Number(value))}\r\n                >\r\n                  <SelectTrigger className=\"w-24 border-gray-300 focus:ring-[#1447e6]\">\r\n                    <SelectValue />\r\n                  </SelectTrigger>\r\n                  <SelectContent>\r\n                    <SelectItem value=\"8\">8</SelectItem>\r\n                    <SelectItem value=\"10\">10</SelectItem>\r\n                    <SelectItem value=\"20\">20</SelectItem>\r\n                  </SelectContent>\r\n                </Select>\r\n              </div>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <Button\r\n                  variant=\"outline\"\r\n                  onClick={() => handlePageChange(currentPage - 1)}\r\n                  disabled={currentPage === 1}\r\n                  className=\"text-gray-800 hover:bg-gray-100 border-gray-300\"\r\n                >\r\n                  Previous\r\n                </Button>\r\n                {[...Array(totalPages).keys()].map((page) => (\r\n                  <Button\r\n                    key={page + 1}\r\n                    variant={currentPage === page + 1 ? 'default' : 'outline'}\r\n                    onClick={() => handlePageChange(page + 1)}\r\n                    className={\r\n                      currentPage === page + 1\r\n                        ? 'bg-[#1447e6] text-white hover:bg-[#0f3cb5]'\r\n                        : 'text-gray-800 hover:bg-gray-100 border-gray-300'\r\n                    }\r\n                  >\r\n                    {page + 1}\r\n                  </Button>\r\n                ))}\r\n                <Button\r\n                  variant=\"outline\"\r\n                  onClick={() => handlePageChange(currentPage + 1)}\r\n                  disabled={currentPage === totalPages}\r\n                  className=\"text-gray-800 hover:bg-gray-100 border-gray-300\"\r\n                >\r\n                  Next\r\n                </Button>\r\n              </div>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <Label htmlFor=\"goToPage\" className=\"text-gray-800\">Go to page:</Label>\r\n                <Input\r\n                  id=\"goToPage\"\r\n                  type=\"number\"\r\n                  value={goToPage}\r\n                  onChange={(e) => setGoToPage(e.target.value)}\r\n                  className=\"w-20 border-gray-300 focus:ring-[#1447e6] text-gray-800\"\r\n                  placeholder=\"Page\"\r\n                  min=\"1\"\r\n                  max={totalPages}\r\n                />\r\n                <Button\r\n                  onClick={handleGoToPage}\r\n                  className=\"bg-[#1447e6] hover:bg-[#0f3cb5] text-white\"\r\n                >\r\n                  Go\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* View Task Modal */}\r\n      <Dialog open={!!viewTask} onOpenChange={() => setViewTask(null)}>\r\n        <DialogContent className=\"max-w-full sm:max-w-2xl w-full bg-white border border-gray-200 shadow-md rounded-md overflow-y-auto max-h-[90vh]\">\r\n          <DialogHeader>\r\n            <DialogTitle className=\"text-gray-800 text-lg font-semibold\">Task Details</DialogTitle>\r\n          </DialogHeader>\r\n          <div className=\"flex flex-col space-y-4 py-2 px-1 sm:px-2\">\r\n            \r\n           \r\n            {[\r\n              { label: 'Task ID', value: viewTask?.task_id },\r\n              { label: 'Task Name', value: viewTask?.title },\r\n              { label: 'Description', value: viewTask?.description || 'No description provided' },\r\n              { label: 'Project', value: viewTask?.projectName },\r\n              { label: 'Assigned By', value: viewTask?.assignedBy },\r\n              {\r\n                label: 'Review Status',\r\n                value: (\r\n                  <Badge className={`${reviewStatusColors[viewTask?.reviewStatus]} capitalize`}>\r\n                    {viewTask?.reviewStatus}\r\n                  </Badge>\r\n                ),\r\n              },\r\n              {\r\n                label: 'Status',\r\n                value: (\r\n                  <Badge className={`${statusColors[viewTask?.status]} border capitalize`}>\r\n                    {statusIcons[viewTask?.status]} {viewTask?.status}\r\n                  </Badge>\r\n                ),\r\n              },\r\n              {\r\n                label: 'deadline',\r\n                value: viewTask ?formatDateUTC(viewTask.deadline): '',\r\n              },\r\n          \r\n              {\r\n                label: 'Priority',\r\n                value: (\r\n                  <Badge className={`${priorityColors[viewTask?.priority]} border capitalize`}>\r\n                    {viewTask?.priority}\r\n                  </Badge>\r\n                ),\r\n              },\r\n              {\r\n                label: 'Delay Reason',\r\n                value: isdeadlinePassed(viewTask) && viewTask?.delayReason ? viewTask.delayReason : null,\r\n              },\r\n            ].map(({ label, value }, idx) => value && (\r\n              <div key={idx} className=\"flex flex-col sm:flex-row\">\r\n                <div className=\"w-full sm:w-1/2 font-semibold text-sm text-gray-800 mb-1 sm:mb-0 sm:pr-4\">\r\n                  {label}\r\n                </div>\r\n                <div className=\"w-full sm:w-1/2 text-sm text-gray-800 whitespace-pre-wrap break-words\">\r\n                  {value}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n      {/* Edit Task Modal */}\r\n      <Dialog open={!!editTask} onOpenChange={() => setEditTask(null)}>\r\n        <DialogContent className=\"max-w-full sm:max-w-2xl w-full bg-white border border-gray-200 shadow-md rounded-md overflow-y-auto max-h-[90vh]\">\r\n          <DialogHeader>\r\n            <DialogTitle className=\"text-gray-800 text-lg font-semibold\">Edit Task Status</DialogTitle>\r\n          </DialogHeader>\r\n          <div className=\"flex flex-col space-y-4 py-2 px-1 sm:px-2\">\r\n            {[\r\n              { label: 'Task ID', value: editTask?.task_id },\r\n              { label: 'Title', value: editTask?.title },\r\n              { label: 'Description', value: editTask?.description },\r\n              { label: 'Project', value: editTask?.projectName },\r\n              { label: 'Assigned By', value: editTask?.assignedBy },\r\n              {\r\n                label: 'Status',\r\n                value: (\r\n               \r\n\r\n                  <Select\r\n  value={editTask?.status || \"\"}\r\n  onValueChange={(value) => setEditTask({ ...editTask, status: value })}\r\n>\r\n  <SelectTrigger className=\"w-full text-black border-gray-300 focus:ring-[#1447e6] focus:text-black\">\r\n    <div className=\"px-3 py-2 text-sm font-semibold text-black\">\r\n      {editTask?.status ? editTask.status : (\r\n        <span className=\"opacity-60\">Select Status</span>\r\n      )}\r\n    </div>\r\n  </SelectTrigger>\r\n  \r\n  <SelectContent className=\"text-black bg-white border border-gray-300\">\r\n    <SelectItem value=\"In Progress\" className=\"text-black hover:bg-gray-100\">\r\n      In Progress\r\n    </SelectItem>\r\n    <SelectItem value=\"Completed\" className=\"text-black hover:bg-gray-100\">\r\n      Completed\r\n    </SelectItem>\r\n  </SelectContent>\r\n</Select>\r\n\r\n                ),\r\n              },\r\n              {\r\n                label: 'Delay Reason',\r\n                value: isdeadlinePassed(editTask) && (\r\n                  <Textarea\r\n                    className=\"w-full border-gray-300 focus:ring-[#1447e6] text-gray-800 placeholder:text-gray-400\"\r\n                    value={editTask?.delayReason}\r\n                    onChange={(e) => setEditTask({ ...editTask, delayReason: e.target.value })}\r\n                    placeholder=\"Enter reason for delay\"\r\n                  />\r\n                ),\r\n              },\r\n              {\r\n                label: 'Deadline',\r\n                value: editTask ? formatDateUTC(editTask.deadline): '',              },\r\n              {\r\n                label: 'Priority',\r\n                value: (\r\n                  <Badge className={`${priorityColors[editTask?.priority]} border capitalize`}>\r\n                    {editTask?.priority}\r\n                  </Badge>\r\n                ),\r\n              },\r\n            ].map(({ label, value }, idx) => value && (\r\n              <div key={idx} className=\"flex flex-col sm:flex-row\">\r\n                <div className=\"w-full sm:w-1/2 font-semibold text-sm text-gray-800 mb-1 sm:mb-0 sm:pr-4\">\r\n                  {label}\r\n                </div>\r\n                <div className=\"w-full sm:w-1/2 text-sm text-gray-800 whitespace-pre-wrap break-words\">\r\n                  {value}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <DialogFooter>\r\n            <Button\r\n              variant=\"outline\"\r\n              onClick={() => setEditTask(null)}\r\n              className=\"border-gray-300 text-gray-800 hover:bg-gray-100\"\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              onClick={handleSaveEdit}\r\n              className=\"bg-[#1447e6] hover:bg-[#0f3cb5] text-white\"\r\n            >\r\n              Save\r\n            </Button>\r\n          </DialogFooter>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllTasksList;\r\n\r\n\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3249, "column": 0}, "map": {"version":3,"sources":["file:///C:/Dev%20Directory/Blueprints/blueprintfro-v1/src/app/%28protected%29/task/page.jsx"],"sourcesContent":["'use client';\r\n\r\nimport CpcTaskList from '@/modules/TaskModules/CpcTaskList';\r\nimport EmployeeTaskList from '@/modules/TaskModules/EmployeeTaskList';\r\nimport { useCurrentUser } from '@/hooks/useCurrentUser';\r\n\r\n\r\n\r\n\r\n\r\nexport default function AllTaskListByRole() {\r\n  const { currentUser} = useCurrentUser();\r\n\r\n\r\n  return (\r\n    <div className=\"\">\r\n      {currentUser?.role === \"cpc\"|| currentUser?.position === \"Team Lead\"? (\r\n        <CpcTaskList  currentUser={currentUser} />\r\n      ) : (\r\n        <EmployeeTaskList  currentUser={currentUser} />\r\n      )}\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAUe,SAAS;IACtB,MAAM,EAAE,WAAW,EAAC,GAAG,CAAA,GAAA,8HAAA,CAAA,iBAAc,AAAD;IAGpC,qBACE,8OAAC;QAAI,WAAU;kBACZ,aAAa,SAAS,SAAQ,aAAa,aAAa,4BACvD,8OAAC,4IAAA,CAAA,UAAW;YAAE,aAAa;;;;;iCAE3B,8OAAC,iJAAA,CAAA,UAAgB;YAAE,aAAa;;;;;;;;;;;AAIxC","debugId":null}}]
}
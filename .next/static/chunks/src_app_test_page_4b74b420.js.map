{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["file:///C:/Dev%20Directory/Blueprints/blueprintfro-v1/src/app/test/page.js"],"sourcesContent":["\"use client\";\r\n\r\n\r\n// import { useState } from 'react';\r\n// import {\r\n//   Card,\r\n//   CardContent,\r\n//   CardHeader,\r\n//   CardTitle,\r\n// } from '@/components/ui/card';\r\n// import { Button } from '@/components/ui/button';\r\n// import {\r\n//   Dialog,\r\n//   DialogContent,\r\n//   DialogHeader,\r\n//   DialogTitle,\r\n//   DialogClose,\r\n// } from '@/components/ui/dialog';\r\n// import { Input } from '@/components/ui/input';\r\n// import { Progress } from '@/components/ui/progress';\r\n// import { Badge } from '@/components/ui/badge';\r\n// import { Separator } from '@/components/ui/separator';\r\n// import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from '@/components/ui/tooltip';\r\n// import {\r\n//   CheckCircle2,\r\n//   Edit,\r\n//   Eye,\r\n//   Plus,\r\n//   User,\r\n//   Mail,\r\n//   Flag,\r\n//   Folder,\r\n//   Hash,\r\n//   ListTodo,\r\n//   History,\r\n//   Bug,\r\n//   XCircle,\r\n//   Trash2,\r\n//   AlertTriangle,\r\n//   Lock,\r\n//   Info as InfoIcon,\r\n//   ChevronLeft,\r\n//   ChevronRight,\r\n//   AlertCircle,\r\n//   ClipboardList,\r\n// } from 'lucide-react';\r\n\r\n// const TaskView = () => {\r\n//   // Dummy data\r\n//   const [task, setTask] = useState({\r\n//     id: 'TASK-123',\r\n//     title: 'Implement Feature X',\r\n//     description: 'Develop and integrate the new feature into the main application.',\r\n//     priority: 'High',\r\n//     project: 'Project Alpha',\r\n//     status: 'Open',\r\n//   });\r\n\r\n//   const [owner] = useState({\r\n//     name: 'John Doe',\r\n//     role: 'Developer',\r\n//     email: 'john.doe@example.com',\r\n//   });\r\n\r\n//   const [subtasks, setSubtasks] = useState([\r\n//     { id: 1, title: 'Research requirements', status: 'Closed' },\r\n//     { id: 2, title: 'Design UI', status: 'Open' },\r\n//     { id: 3, title: 'Implement backend', status: 'Open' },\r\n//     { id: 4, title: 'Test integration', status: 'Open' },\r\n//     { id: 5, title: 'Deploy to staging', status: 'Open' },\r\n//     { id: 6, title: 'Review code', status: 'Closed' },\r\n//     { id: 7, title: 'Fix bugs', status: 'Open' },\r\n//     { id: 8, title: 'Optimize performance', status: 'Open' },\r\n//     { id: 9, title: 'Document changes', status: 'Open' },\r\n//     { id: 10, title: 'Final testing', status: 'Open' },\r\n//   ]);\r\n\r\n//   const [history] = useState([\r\n//     { date: '2025-09-01', message: 'Initial review: Approved' },\r\n//     { date: '2025-09-05', message: 'Progress update: 30% complete' },\r\n//     { date: '2025-09-10', message: 'Bug found and reported' },\r\n//   ]);\r\n\r\n//   // Modal states\r\n//   const [openView, setOpenView] = useState(false);\r\n//   const [openEdit, setOpenEdit] = useState(false);\r\n//   const [openAdd, setOpenAdd] = useState(false);\r\n//   const [openDelete, setOpenDelete] = useState(false);\r\n//   const [selectedSubtask, setSelectedSubtask] = useState(null);\r\n//   const [newTitle, setNewTitle] = useState('');\r\n//   const [editTitle, setEditTitle] = useState('');\r\n//   const [editStatus, setEditStatus] = useState('Open');\r\n\r\n//   // Pagination for subtasks\r\n//   const [currentPage, setCurrentPage] = useState(1);\r\n//   const subtasksPerPage = 5;\r\n//   const totalPages = Math.ceil(subtasks.length / subtasksPerPage);\r\n//   const indexOfLastSubtask = currentPage * subtasksPerPage;\r\n//   const indexOfFirstSubtask = indexOfLastSubtask - subtasksPerPage;\r\n//   const currentSubtasks = subtasks.slice(indexOfFirstSubtask, indexOfLastSubtask);\r\n\r\n//   // Calculate progress\r\n//   const closedSubtasks = subtasks.filter((st) => st.status === 'Closed').length;\r\n//   const progress = subtasks.length > 0 ? (closedSubtasks / subtasks.length) * 100 : 0;\r\n//   const allClosed = closedSubtasks === subtasks.length;\r\n//   const isTaskClosed = task.status === 'Closed';\r\n\r\n//   // Handlers\r\n//   const handleToggleStatus = (id) => {\r\n//     if (isTaskClosed) return;\r\n//     setSubtasks(\r\n//       subtasks.map((st) =>\r\n//         st.id === id ? { ...st, status: st.status === 'Open' ? 'Closed' : 'Open' } : st\r\n//       )\r\n//     );\r\n//   };\r\n\r\n//   const handleView = (subtask) => {\r\n//     setSelectedSubtask(subtask);\r\n//     setOpenView(true);\r\n//   };\r\n\r\n//   const handleEdit = (subtask) => {\r\n//     if (isTaskClosed) return;\r\n//     setSelectedSubtask(subtask);\r\n//     setEditTitle(subtask.title);\r\n//     setEditStatus(subtask.status);\r\n//     setOpenEdit(true);\r\n//   };\r\n\r\n//   const handleSaveEdit = () => {\r\n//     if (isTaskClosed) return;\r\n//     setSubtasks(\r\n//       subtasks.map((st) =>\r\n//         st.id === selectedSubtask.id ? { ...st, title: editTitle, status: editStatus } : st\r\n//       )\r\n//     );\r\n//     setOpenEdit(false);\r\n//     alert('Subtask edited');\r\n//   };\r\n\r\n//   const handleAdd = () => {\r\n//     if (isTaskClosed || !newTitle.trim()) return;\r\n//     setSubtasks([\r\n//       ...subtasks,\r\n//       { id: subtasks.length + 1, title: newTitle, status: 'Open' },\r\n//     ]);\r\n//     setNewTitle('');\r\n//     setOpenAdd(false);\r\n//     alert('Subtask added');\r\n//     setCurrentPage(1);\r\n//   };\r\n\r\n//   const handleDelete = (subtask) => {\r\n//     if (isTaskClosed) return;\r\n//     setSelectedSubtask(subtask);\r\n//     setOpenDelete(true);\r\n//   };\r\n\r\n//   const confirmDelete = () => {\r\n//     if (isTaskClosed) return;\r\n//     setSubtasks(subtasks.filter((st) => st.id !== selectedSubtask.id));\r\n//     setOpenDelete(false);\r\n//     alert('Subtask deleted');\r\n//     if (currentSubtasks.length === 1 && currentPage > 1) {\r\n//       setCurrentPage(currentPage - 1);\r\n//     }\r\n//   };\r\n\r\n//   const handleCloseTask = () => {\r\n//     if (allClosed && !isTaskClosed) {\r\n//       setTask({ ...task, status: 'Closed' });\r\n//       alert('Task closed');\r\n//     }\r\n//   };\r\n\r\n//   const handleReportBug = () => {\r\n//     alert('Bug reported');\r\n//   };\r\n\r\n//   const getPriorityVariant = (priority) => {\r\n//     switch (priority) {\r\n//       case 'High':\r\n//         return 'destructive';\r\n//       case 'Medium':\r\n//         return 'default';\r\n//       case 'Low':\r\n//         return 'secondary';\r\n//       default:\r\n//         return 'outline';\r\n//     }\r\n//   };\r\n\r\n//   const getStatusVariant = (status) => {\r\n//     return status === 'Closed' ? 'success' : 'secondary';\r\n//   };\r\n\r\n//   const handlePrevPage = () => {\r\n//     if (currentPage > 1) setCurrentPage(currentPage - 1);\r\n//   };\r\n\r\n//   const handleNextPage = () => {\r\n//     if (currentPage < totalPages) setCurrentPage(currentPage + 1);\r\n//   };\r\n\r\n//   return (\r\n//     <TooltipProvider>\r\n//       <div className=\"container mx-auto p-4 sm:p-6 max-w-7xl\">\r\n//         <Card className=\"shadow-lg\">\r\n//           <CardHeader>\r\n//             <CardTitle className=\"flex items-center justify-between text-xl sm:text-2xl\">\r\n//               <div className=\"flex items-center\">\r\n//                 <ClipboardList className=\"mr-2 h-6 w-6 text-primary\" />\r\n//                 {task.title}\r\n//               </div>\r\n//               <Badge variant={isTaskClosed ? 'destructive' : 'default'} className=\"ml-2\">\r\n//                 {task.status}\r\n//               </Badge>\r\n//             </CardTitle>\r\n//           </CardHeader>\r\n//           <CardContent>\r\n//             <div className=\"grid grid-cols-1 md:grid-cols-[4fr,1fr] gap-4 sm:gap-6 lg:gap-8\">\r\n//               {/* Left Column (80% - Task Details and Subtasks) */}\r\n//               <div className=\"space-y-6\">\r\n//                 {/* Task Details Section */}\r\n//                 <section>\r\n//                   <h3 className=\"text-lg font-semibold mb-3 flex items-center\">\r\n//                     <InfoIcon className=\"mr-2 h-5 w-5 text-blue-500\" />\r\n//                     Task Details\r\n//                   </h3>\r\n//                   <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\r\n//                     <div className=\"flex items-center\">\r\n//                       <Hash className=\"mr-2 h-4 w-4 text-gray-500\" />\r\n//                       <span className=\"font-medium\">{task.id}</span>\r\n//                     </div>\r\n//                     <div className=\"flex items-center\">\r\n//                       <Folder className=\"mr-2 h-4 w-4 text-gray-500\" />\r\n//                       <span className=\"font-medium\">{task.project}</span>\r\n//                     </div>\r\n//                     <div className=\"flex items-start sm:col-span-2\">\r\n//                       <AlertCircle className=\"mr-2 h-4 w-4 text-gray-500 mt-1\" />\r\n//                       <span className=\"font-medium\">{task.description}</span>\r\n//                     </div>\r\n//                     <div className=\"flex items-center\">\r\n//                       <Flag className=\"mr-2 h-4 w-4 text-gray-500\" />\r\n//                       <Badge variant={getPriorityVariant(task.priority)}>{task.priority}</Badge>\r\n//                     </div>\r\n//                   </div>\r\n//                 </section>\r\n\r\n//                 <Separator className=\"my-4\" />\r\n\r\n//                 {/* Subtasks Section */}\r\n//                 <section>\r\n//                   <div className=\"flex justify-between items-center mb-3\">\r\n//                     <h3 className=\"text-lg font-semibold flex items-center\">\r\n//                       <ListTodo className=\"mr-2 h-5 w-5 text-green-500\" />\r\n//                       Subtasks\r\n//                     </h3>\r\n//                     {!isTaskClosed ? (\r\n//                       <Button\r\n//                         className=\"bg-blue-600 hover:bg-blue-700 text-sm px-3 py-1 h-8\"\r\n//                         onClick={() => setOpenAdd(true)}\r\n//                       >\r\n//                         <Plus className=\"mr-1 h-4 w-4\" /> Add\r\n//                       </Button>\r\n//                     ) : (\r\n//                       <Badge variant=\"secondary\" className=\"flex items-center text-sm\">\r\n//                         <Lock className=\"mr-1 h-4 w-4\" /> Read-Only\r\n//                       </Badge>\r\n//                     )}\r\n//                   </div>\r\n//                   <div className=\"mb-4\">\r\n//                     <div className=\"flex justify-between items-center mb-2\">\r\n//                       <span className=\"font-medium text-sm sm:text-base\">\r\n//                         Progress: {progress.toFixed(0)}%\r\n//                       </span>\r\n//                       <Badge variant={progress === 100 ? 'success' : 'default'}>\r\n//                         {closedSubtasks}/{subtasks.length} Completed\r\n//                       </Badge>\r\n//                     </div>\r\n//                     <Progress value={progress} className=\"h-2 bg-gray-200\" />\r\n//                   </div>\r\n//                   <ul className=\"space-y-3\">\r\n//                     {currentSubtasks.map((st) => (\r\n//                       <li\r\n//                         key={st.id}\r\n//                         className=\"flex flex-col sm:flex-row items-start sm:items-center justify-between gap-3 p-3 border rounded-lg bg-muted/50 transition-all hover:shadow-md\"\r\n//                       >\r\n//                         <div className=\"flex-1 flex items-center\">\r\n//                           <CheckCircle2\r\n//                             className={`mr-2 h-4 w-4 ${st.status === 'Closed' ? 'text-green-500' : 'text-gray-400'}`}\r\n//                           />\r\n//                           <span className=\"font-medium text-sm sm:text-base\">{st.title}</span>\r\n//                         </div>\r\n//                         <div className=\"flex items-center gap-1 sm:gap-2\">\r\n//                           <Badge variant={getStatusVariant(st.status)}>{st.status}</Badge>\r\n//                           <Tooltip>\r\n//                             <TooltipTrigger asChild>\r\n//                               <Button variant=\"ghost\" size=\"icon\" onClick={() => handleView(st)}>\r\n//                                 <Eye className=\"h-4 w-4 text-blue-500\" />\r\n//                               </Button>\r\n//                             </TooltipTrigger>\r\n//                             <TooltipContent>View</TooltipContent>\r\n//                           </Tooltip>\r\n//                           {!isTaskClosed && (\r\n//                             <>\r\n//                               <Tooltip>\r\n//                                 <TooltipTrigger asChild>\r\n//                                   <Button\r\n//                                     variant=\"ghost\"\r\n//                                     size=\"icon\"\r\n//                                     onClick={() => handleToggleStatus(st.id)}\r\n//                                   >\r\n//                                     <XCircle className=\"h-4 w-4 text-gray-500\" />\r\n//                                   </Button>\r\n//                                 </TooltipTrigger>\r\n//                                 <TooltipContent>Toggle Status</TooltipContent>\r\n//                               </Tooltip>\r\n//                               <Tooltip>\r\n//                                 <TooltipTrigger asChild>\r\n//                                   <Button variant=\"ghost\" size=\"icon\" onClick={() => handleEdit(st)}>\r\n//                                     <Edit className=\"h-4 w-4 text-yellow-500\" />\r\n//                                   </Button>\r\n//                                 </TooltipTrigger>\r\n//                                 <TooltipContent>Edit</TooltipContent>\r\n//                               </Tooltip>\r\n//                               <Tooltip>\r\n//                                 <TooltipTrigger asChild>\r\n//                                   <Button variant=\"ghost\" size=\"icon\" onClick={() => handleDelete(st)}>\r\n//                                     <Trash2 className=\"h-4 w-4 text-red-500\" />\r\n//                                   </Button>\r\n//                                 </TooltipTrigger>\r\n//                                 <TooltipContent>Delete</TooltipContent>\r\n//                               </Tooltip>\r\n//                             </>\r\n//                           )}\r\n//                         </div>\r\n//                       </li>\r\n//                     ))}\r\n//                   </ul>\r\n//                   {totalPages > 1 && (\r\n//                     <div className=\"flex justify-center items-center gap-4 mt-4\">\r\n//                       <Button\r\n//                         variant=\"ghost\"\r\n//                         size=\"icon\"\r\n//                         onClick={handlePrevPage}\r\n//                         disabled={currentPage === 1}\r\n//                         className=\"h-8 w-8\"\r\n//                       >\r\n//                         <ChevronLeft className=\"h-4 w-4\" />\r\n//                       </Button>\r\n//                       <span className=\"text-sm font-medium\">\r\n//                         Page {currentPage} of {totalPages}\r\n//                       </span>\r\n//                       <Button\r\n//                         variant=\"ghost\"\r\n//                         size=\"icon\"\r\n//                         onClick={handleNextPage}\r\n//                         disabled={currentPage === totalPages}\r\n//                         className=\"h-8 w-8\"\r\n//                       >\r\n//                         <ChevronRight className=\"h-4 w-4\" />\r\n//                       </Button>\r\n//                     </div>\r\n//                   )}\r\n//                 </section>\r\n//               </div>\r\n\r\n//               {/* Right Column (20% - Owner Details, Actions, History) */}\r\n//               <div className=\"space-y-6\">\r\n//                 {/* Owner Details & Actions Section */}\r\n//                 <section>\r\n//                   <h3 className=\"text-lg font-semibold mb-3 flex items-center\">\r\n//                     <User className=\"mr-2 h-5 w-5 text-purple-500\" />\r\n//                     Owner & Actions\r\n//                   </h3>\r\n//                   <div className=\"grid grid-cols-1 gap-3\">\r\n//                     <div className=\"flex items-center\">\r\n//                       <User className=\"mr-2 h-4 w-4 text-gray-500\" />\r\n//                       <span className=\"font-medium text-sm sm:text-base\">{owner.name}</span>\r\n//                     </div>\r\n//                     <div className=\"flex items-center\">\r\n//                       <AlertCircle className=\"mr-2 h-4 w-4 text-gray-500\" />\r\n//                       <span className=\"font-medium text-sm sm:text-base\">{owner.role}</span>\r\n//                     </div>\r\n//                     <div className=\"flex items-center\">\r\n//                       <Mail className=\"mr-2 h-4 w-4 text-gray-500\" />\r\n//                       <span className=\"font-medium text-sm sm:text-base\">{owner.email}</span>\r\n//                     </div>\r\n//                     <div className=\"space-y-2\">\r\n//                       <div className=\"flex items-center\">\r\n//                         <ListTodo className=\"mr-2 h-4 w-4 text-gray-500\" />\r\n//                         <span className=\"font-medium text-sm sm:text-base\">\r\n//                           Progress: {progress.toFixed(0)}%\r\n//                         </span>\r\n//                       </div>\r\n//                       <Progress value={progress} className=\"h-2 bg-gray-200\" />\r\n//                     </div>\r\n//                     <div className=\"flex flex-col gap-2\">\r\n//                       <Tooltip>\r\n//                         <TooltipTrigger asChild>\r\n//                           <Button\r\n//                             size=\"sm\"\r\n//                             variant=\"default\"\r\n//                             disabled={!allClosed || isTaskClosed}\r\n//                             onClick={handleCloseTask}\r\n//                             className=\"bg-green-600 hover:bg-green-700 w-full text-sm h-8\"\r\n//                           >\r\n//                             <XCircle className=\"mr-1 h-4 w-4\" /> Mark as Closed\r\n//                           </Button>\r\n//                         </TooltipTrigger>\r\n//                         <TooltipContent>\r\n//                           {allClosed ? 'Close the task' : 'All subtasks must be closed first'}\r\n//                         </TooltipContent>\r\n//                       </Tooltip>\r\n//                       <Button\r\n//                         size=\"sm\"\r\n//                         variant=\"outline\"\r\n//                         onClick={handleReportBug}\r\n//                         className=\"border-red-500 text-red-500 hover:bg-red-50 w-full text-sm h-8\"\r\n//                       >\r\n//                         <Bug className=\"mr-1 h-4 w-4\" /> Report Bug\r\n//                       </Button>\r\n//                     </div>\r\n//                   </div>\r\n//                 </section>\r\n\r\n//                 <Separator className=\"my-4\" />\r\n\r\n//                 {/* Task Review History Section */}\r\n//                 <section>\r\n//                   <h3 className=\"text-lg font-semibold mb-3 flex items-center\">\r\n//                     <History className=\"mr-2 h-5 w-5 text-red-500\" />\r\n//                     Review History\r\n//                   </h3>\r\n//                   <ul className=\"space-y-3 max-h-80 sm:max-h-96 overflow-y-auto\">\r\n//                     {history.map((item, index) => (\r\n//                       <li\r\n//                         key={index}\r\n//                         className=\"p-3 border rounded-lg bg-muted/50 transition-all hover:shadow-md\"\r\n//                       >\r\n//                         <div className=\"flex items-center\">\r\n//                           <History className=\"mr-2 h-4 w-4 text-gray-500\" />\r\n//                           <span className=\"font-medium text-sm sm:text-base\">{item.date}</span>\r\n//                         </div>\r\n//                         <p className=\"text-sm mt-1\">{item.message}</p>\r\n//                       </li>\r\n//                     ))}\r\n//                   </ul>\r\n//                 </section>\r\n//               </div>\r\n//             </div>\r\n//           </CardContent>\r\n//         </Card>\r\n\r\n//         {/* View Subtask Modal */}\r\n//         <Dialog open={openView} onOpenChange={setOpenView}>\r\n//           <DialogContent>\r\n//             <DialogHeader>\r\n//               <DialogTitle className=\"flex items-center\">\r\n//                 <Eye className=\"mr-2 h-5 w-5 text-blue-500\" />\r\n//                 View Subtask\r\n//               </DialogTitle>\r\n//             </DialogHeader>\r\n//             {selectedSubtask && (\r\n//               <div className=\"space-y-4\">\r\n//                 <div>\r\n//                   <span className=\"font-medium\">Title:</span>\r\n//                   <p className=\"mt-1 text-sm sm:text-base\">{selectedSubtask.title}</p>\r\n//                 </div>\r\n//                 <div>\r\n//                   <span className=\"font-medium\">Status:</span>\r\n//                   <Badge variant={getStatusVariant(selectedSubtask.status)} className=\"ml-2\">\r\n//                     {selectedSubtask.status}\r\n//                   </Badge>\r\n//                 </div>\r\n//               </div>\r\n//             )}\r\n//           </DialogContent>\r\n//         </Dialog>\r\n\r\n\r\n//         <Dialog open={openEdit} onOpenChange={setOpenEdit}>\r\n//           <DialogContent>\r\n//             <DialogHeader>\r\n//               <DialogTitle className=\"flex items-center\">\r\n//                 <Edit className=\"mr-2 h-5 w-5 text-yellow-500\" />\r\n//                 Edit Subtask\r\n//               </DialogTitle>\r\n//             </DialogHeader>\r\n//             <div className=\"space-y-4\">\r\n//               <div>\r\n//                 <span className=\"font-medium\">Title:</span>\r\n//                 <Input\r\n//                   value={editTitle}\r\n//                   onChange={(e) => setEditTitle(e.target.value)}\r\n//                   className=\"mt-1\"\r\n//                   disabled={isTaskClosed}\r\n//                 />\r\n//               </div>\r\n//               <div>\r\n//                 <span className=\"font-medium\">Status:</span>\r\n//                 <select\r\n//                   className=\"w-full p-2 border rounded bg-background text-foreground mt-1 text-sm sm:text-base\"\r\n//                   value={editStatus}\r\n//                   onChange={(e) => setEditStatus(e.target.value)}\r\n//                   disabled={isTaskClosed}\r\n//                 >\r\n//                   <option>Open</option>\r\n//                   <option>Closed</option>\r\n//                 </select>\r\n//               </div>\r\n//               <DialogClose asChild>\r\n//                 <Button\r\n//                   onClick={handleSaveEdit}\r\n//                   disabled={isTaskClosed}\r\n//                   className=\"bg-blue-600 hover:bg-blue-700 text-sm h-8\"\r\n//                 >\r\n//                   Save Changes\r\n//                 </Button>\r\n//               </DialogClose>\r\n//             </div>\r\n//           </DialogContent>\r\n//         </Dialog>\r\n\r\n//         <Dialog open={openAdd} onOpenChange={setOpenAdd}>\r\n//           <DialogContent>\r\n//             <DialogHeader>\r\n//               <DialogTitle className=\"flex items-center\">\r\n//                 <Plus className=\"mr-2 h-5 w-5 text-green-500\" />\r\n//                 Add New Subtask\r\n//               </DialogTitle>\r\n//             </DialogHeader>\r\n//             <div className=\"space-y-4\">\r\n//               <div>\r\n//                 <span className=\"font-medium\">Title:</span>\r\n//                 <Input\r\n//                   value={newTitle}\r\n//                   onChange={(e) => setNewTitle(e.target.value)}\r\n//                   className=\"mt-1\"\r\n//                   disabled={isTaskClosed}\r\n//                 />\r\n//               </div>\r\n//               <DialogClose asChild>\r\n//                 <Button\r\n//                   onClick={handleAdd}\r\n//                   disabled={isTaskClosed}\r\n//                   className=\"bg-blue-600 hover:bg-blue-700 text-sm h-8\"\r\n//                 >\r\n//                   Add Subtask\r\n//                 </Button>\r\n//               </DialogClose>\r\n//             </div>\r\n//           </DialogContent>\r\n//         </Dialog>\r\n\r\n//         <Dialog open={openDelete} onOpenChange={setOpenDelete}>\r\n//           <DialogContent>\r\n//             <DialogHeader>\r\n//               <DialogTitle className=\"flex items-center\">\r\n//                 <AlertTriangle className=\"mr-2 h-5 w-5 text-red-500\" />\r\n//                 Delete Subtask\r\n//               </DialogTitle>\r\n//             </DialogHeader>\r\n//             <p className=\"text-sm sm:text-base\">Are you sure you want to delete {selectedSubtask?.title}?</p>\r\n//             <div className=\"flex justify-end gap-2 mt-4\">\r\n//               <DialogClose asChild>\r\n//                 <Button variant=\"outline\" className=\"text-sm h-8\">Cancel</Button>\r\n//               </DialogClose>\r\n//               <Button\r\n//                 variant=\"destructive\"\r\n//                 onClick={confirmDelete}\r\n//                 disabled={isTaskClosed}\r\n//                 className=\"bg-red-600 hover:bg-red-700 text-sm h-8\"\r\n//               >\r\n//                 Delete\r\n//               </Button>\r\n//             </div>\r\n//           </DialogContent>\r\n//         </Dialog>\r\n//       </div>\r\n//     </TooltipProvider>\r\n//   );\r\n// };\r\n\r\n// export default TaskView;\r\n\r\n\r\n\r\n\r\n\r\n"],"names":[],"mappings":"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","debugId":null}}]
}
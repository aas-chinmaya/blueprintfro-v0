{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Dev%20Directory/Blueprints/blueprintfro-v1/src/components/ui/dialog.jsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\r\nimport { XIcon } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Dialog({\r\n  ...props\r\n}) {\r\n  return <DialogPrimitive.Root data-slot=\"dialog\" {...props} />;\r\n}\r\n\r\nfunction DialogTrigger({\r\n  ...props\r\n}) {\r\n  return <DialogPrimitive.Trigger data-slot=\"dialog-trigger\" {...props} />;\r\n}\r\n\r\nfunction DialogPortal({\r\n  ...props\r\n}) {\r\n  return <DialogPrimitive.Portal data-slot=\"dialog-portal\" {...props} />;\r\n}\r\n\r\nfunction DialogClose({\r\n  ...props\r\n}) {\r\n  return <DialogPrimitive.Close data-slot=\"dialog-close\" {...props} />;\r\n}\r\n\r\nfunction DialogOverlay({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    <DialogPrimitive.Overlay\r\n      data-slot=\"dialog-overlay\"\r\n      className={cn(\r\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50\",\r\n        className\r\n      )}\r\n      {...props} />\r\n  );\r\n}\r\n\r\nfunction DialogContent({\r\n  className,\r\n  children,\r\n  showCloseButton = true,\r\n  ...props\r\n}) {\r\n  return (\r\n    <DialogPortal data-slot=\"dialog-portal\">\r\n      <DialogOverlay />\r\n      <DialogPrimitive.Content\r\n        data-slot=\"dialog-content\"\r\n        className={cn(\r\n          \"bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg\",\r\n          className\r\n        )}\r\n        {...props}>\r\n        {children}\r\n        {showCloseButton && (\r\n          <DialogPrimitive.Close\r\n            data-slot=\"dialog-close\"\r\n            className=\"ring-offset-background focus:ring-ring data-[state=open]:bg-accent data-[state=open]:text-muted-foreground absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\">\r\n            <XIcon />\r\n            <span className=\"sr-only\">Close</span>\r\n          </DialogPrimitive.Close>\r\n        )}\r\n      </DialogPrimitive.Content>\r\n    </DialogPortal>\r\n  );\r\n}\r\n\r\nfunction DialogHeader({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    <div\r\n      data-slot=\"dialog-header\"\r\n      className={cn(\"flex flex-col gap-2 text-center sm:text-left\", className)}\r\n      {...props} />\r\n  );\r\n}\r\n\r\nfunction DialogFooter({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    <div\r\n      data-slot=\"dialog-footer\"\r\n      className={cn(\"flex flex-col-reverse gap-2 sm:flex-row sm:justify-end\", className)}\r\n      {...props} />\r\n  );\r\n}\r\n\r\nfunction DialogTitle({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    <DialogPrimitive.Title\r\n      data-slot=\"dialog-title\"\r\n      className={cn(\"text-lg leading-none font-semibold\", className)}\r\n      {...props} />\r\n  );\r\n}\r\n\r\nfunction DialogDescription({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    <DialogPrimitive.Description\r\n      data-slot=\"dialog-description\"\r\n      className={cn(\"text-muted-foreground text-sm\", className)}\r\n      {...props} />\r\n  );\r\n}\r\n\r\nexport {\r\n  Dialog,\r\n  DialogClose,\r\n  DialogContent,\r\n  DialogDescription,\r\n  DialogFooter,\r\n  DialogHeader,\r\n  DialogOverlay,\r\n  DialogPortal,\r\n  DialogTitle,\r\n  DialogTrigger,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,SAAS,OAAO,EACd,GAAG,OACJ;IACC,qBAAO,6LAAC,qKAAA,CAAA,OAAoB;QAAC,aAAU;QAAU,GAAG,KAAK;;;;;;AAC3D;KAJS;AAMT,SAAS,cAAc,EACrB,GAAG,OACJ;IACC,qBAAO,6LAAC,qKAAA,CAAA,UAAuB;QAAC,aAAU;QAAkB,GAAG,KAAK;;;;;;AACtE;MAJS;AAMT,SAAS,aAAa,EACpB,GAAG,OACJ;IACC,qBAAO,6LAAC,qKAAA,CAAA,SAAsB;QAAC,aAAU;QAAiB,GAAG,KAAK;;;;;;AACpE;MAJS;AAMT,SAAS,YAAY,EACnB,GAAG,OACJ;IACC,qBAAO,6LAAC,qKAAA,CAAA,QAAqB;QAAC,aAAU;QAAgB,GAAG,KAAK;;;;;;AAClE;MAJS;AAMT,SAAS,cAAc,EACrB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,6LAAC,qKAAA,CAAA,UAAuB;QACtB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;AAEf;MAbS;AAeT,SAAS,cAAc,EACrB,SAAS,EACT,QAAQ,EACR,kBAAkB,IAAI,EACtB,GAAG,OACJ;IACC,qBACE,6LAAC;QAAa,aAAU;;0BACtB,6LAAC;;;;;0BACD,6LAAC,qKAAA,CAAA,UAAuB;gBACtB,aAAU;gBACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+WACA;gBAED,GAAG,KAAK;;oBACR;oBACA,iCACC,6LAAC,qKAAA,CAAA,QAAqB;wBACpB,aAAU;wBACV,WAAU;;0CACV,6LAAC,mMAAA,CAAA,QAAK;;;;;0CACN,6LAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAMtC;MA5BS;AA8BT,SAAS,aAAa,EACpB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAEf;MAVS;AAYT,SAAS,aAAa,EACpB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,0DAA0D;QACvE,GAAG,KAAK;;;;;;AAEf;MAVS;AAYT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,6LAAC,qKAAA,CAAA,QAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAEf;MAVS;AAYT,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,6LAAC,qKAAA,CAAA,cAA2B;QAC1B,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAEf;MAVS","debugId":null}},
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///C:/Dev%20Directory/Blueprints/blueprintfro-v1/src/components/ui/textarea.jsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Textarea({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    <textarea\r\n      data-slot=\"textarea\"\r\n      className={cn(\r\n        \"border-input placeholder:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 flex field-sizing-content min-h-16 w-full rounded-md border bg-transparent px-3 py-2 text-base shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\r\n        className\r\n      )}\r\n      {...props} />\r\n  );\r\n}\r\n\r\nexport { Textarea }\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,ucACA;QAED,GAAG,KAAK;;;;;;AAEf;KAbS","debugId":null}},
    {"offset": {"line": 240, "column": 0}, "map": {"version":3,"sources":["file:///C:/Dev%20Directory/Blueprints/blueprintfro-v1/src/modules/Tasks/sub-task/ReportBugModal.jsx"],"sourcesContent":["import { useState } from 'react';\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogHeader,\r\n  DialogTitle,\r\n  DialogClose,\r\n} from '@/components/ui/dialog';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Textarea } from '@/components/ui/textarea';\r\nimport { Bug } from 'lucide-react';\r\n\r\nconst ReportBugModal = ({ onClose }) => {\r\n  const isTaskClosed = false; // You can pass this as a prop if needed\r\n  const [open, setOpen] = useState(true); // Open by default\r\n  const [bugTitle, setBugTitle] = useState('');\r\n  const [bugDescription, setBugDescription] = useState('');\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    onClose();\r\n  };\r\n\r\n  const handleReportBug = () => {\r\n    if (isTaskClosed || !bugTitle.trim() || !bugDescription.trim()) return;\r\n\r\n    // Handle bug submission logic here\r\n    alert(`Bug reported: ${bugTitle} - ${bugDescription}`);\r\n\r\n    setBugTitle('');\r\n    setBugDescription('');\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onOpenChange={(openState) => {\r\n      setOpen(openState);\r\n      if (!openState) {\r\n        onClose();\r\n      }\r\n    }}>\r\n      <DialogContent>\r\n        <DialogHeader>\r\n          <div className=\"flex items-center justify-between\">\r\n            <DialogTitle className=\"flex items-center\">\r\n              <Bug className=\"mr-2 h-4 w-4 sm:h-5 sm:w-5 text-red-500\" />\r\n              Report Bug\r\n            </DialogTitle>\r\n           \r\n          </div>\r\n        </DialogHeader>\r\n        <div className=\"space-y-4\">\r\n          <div>\r\n            <label className=\"font-medium text-xs sm:text-sm\">\r\n              Bug Title:\r\n            </label>\r\n            <Input\r\n              value={bugTitle}\r\n              onChange={(e) => setBugTitle(e.target.value)}\r\n              className=\"mt-1 text-xs sm:text-sm\"\r\n              disabled={isTaskClosed}\r\n              placeholder=\"Enter bug title\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <label className=\"font-medium text-xs sm:text-sm\">\r\n              Description:\r\n            </label>\r\n            <Textarea\r\n              value={bugDescription}\r\n              onChange={(e) => setBugDescription(e.target.value)}\r\n              className=\"mt-1 text-xs sm:text-sm\"\r\n              disabled={isTaskClosed}\r\n              placeholder=\"Describe the bug\"\r\n            />\r\n          </div>\r\n          <div className=\"flex justify-end space-x-2\">\r\n            <Button variant=\"outline\" onClick={handleClose}>\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              onClick={handleReportBug}\r\n              disabled={isTaskClosed || !bugTitle.trim() || !bugDescription.trim()}\r\n              className=\"bg-red-600 hover:bg-red-700 text-xs sm:text-sm h-8 sm:h-9\"\r\n            >\r\n              Submit Bug Report\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ReportBugModal;\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AAOA;AACA;AACA;AACA;;;;;;;;;AAEA,MAAM,iBAAiB,CAAC,EAAE,OAAO,EAAE;;IACjC,MAAM,eAAe,OAAO,wCAAwC;IACpE,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,OAAO,kBAAkB;IAC1D,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAErD,MAAM,cAAc;QAClB,QAAQ;QACR;IACF;IAEA,MAAM,kBAAkB;QACtB,IAAI,gBAAgB,CAAC,SAAS,IAAI,MAAM,CAAC,eAAe,IAAI,IAAI;QAEhE,mCAAmC;QACnC,MAAM,CAAC,cAAc,EAAE,SAAS,GAAG,EAAE,gBAAgB;QAErD,YAAY;QACZ,kBAAkB;QAClB;IACF;IAEA,qBACE,6LAAC,qIAAA,CAAA,SAAM;QAAC,MAAM;QAAM,cAAc,CAAC;YACjC,QAAQ;YACR,IAAI,CAAC,WAAW;gBACd;YACF;QACF;kBACE,cAAA,6LAAC,qIAAA,CAAA,gBAAa;;8BACZ,6LAAC,qIAAA,CAAA,eAAY;8BACX,cAAA,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC,qIAAA,CAAA,cAAW;4BAAC,WAAU;;8CACrB,6LAAC,mMAAA,CAAA,MAAG;oCAAC,WAAU;;;;;;gCAA4C;;;;;;;;;;;;;;;;;8BAMjE,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;;8CACC,6LAAC;oCAAM,WAAU;8CAAiC;;;;;;8CAGlD,6LAAC,oIAAA,CAAA,QAAK;oCACJ,OAAO;oCACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;oCAC3C,WAAU;oCACV,UAAU;oCACV,aAAY;;;;;;;;;;;;sCAGhB,6LAAC;;8CACC,6LAAC;oCAAM,WAAU;8CAAiC;;;;;;8CAGlD,6LAAC,uIAAA,CAAA,WAAQ;oCACP,OAAO;oCACP,UAAU,CAAC,IAAM,kBAAkB,EAAE,MAAM,CAAC,KAAK;oCACjD,WAAU;oCACV,UAAU;oCACV,aAAY;;;;;;;;;;;;sCAGhB,6LAAC;4BAAI,WAAU;;8CACb,6LAAC,qIAAA,CAAA,SAAM;oCAAC,SAAQ;oCAAU,SAAS;8CAAa;;;;;;8CAGhD,6LAAC,qIAAA,CAAA,SAAM;oCACL,SAAS;oCACT,UAAU,gBAAgB,CAAC,SAAS,IAAI,MAAM,CAAC,eAAe,IAAI;oCAClE,WAAU;8CACX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQb;GAhFM;KAAA;uCAkFS","debugId":null}},
    {"offset": {"line": 433, "column": 0}, "map": {"version":3,"sources":["file:///C:/Dev%20Directory/Blueprints/blueprintfro-v1/src/utils/formatDate.js"],"sourcesContent":["// lib/formatRange.js\r\nexport function formatRange(start, end) {\r\n  const options = { month: 'short', day: 'numeric' };\r\n  const startStr = start.toLocaleDateString(undefined, options);\r\n  const endStr = end.toLocaleDateString(undefined, options);\r\n\r\n  return `${startStr} – ${endStr}`;\r\n}\r\n\r\n\r\n\r\n\r\n// utils/date.js\r\nexport function formatDateUTC(dateString) {\r\n    if (!dateString) return '';\r\n    return new Date(dateString).toLocaleDateString('en-GB', {\r\n        timeZone: 'UTC',\r\n        day: '2-digit',\r\n        month: 'short',\r\n        year: 'numeric'\r\n    });\r\n}\r\n"],"names":[],"mappings":"AAAA,qBAAqB;;;;;AACd,SAAS,YAAY,KAAK,EAAE,GAAG;IACpC,MAAM,UAAU;QAAE,OAAO;QAAS,KAAK;IAAU;IACjD,MAAM,WAAW,MAAM,kBAAkB,CAAC,WAAW;IACrD,MAAM,SAAS,IAAI,kBAAkB,CAAC,WAAW;IAEjD,OAAO,GAAG,SAAS,GAAG,EAAE,QAAQ;AAClC;AAMO,SAAS,cAAc,UAAU;IACpC,IAAI,CAAC,YAAY,OAAO;IACxB,OAAO,IAAI,KAAK,YAAY,kBAAkB,CAAC,SAAS;QACpD,UAAU;QACV,KAAK;QACL,OAAO;QACP,MAAM;IACV;AACJ","debugId":null}},
    {"offset": {"line": 465, "column": 0}, "map": {"version":3,"sources":["file:///C:/Dev%20Directory/Blueprints/blueprintfro-v1/src/modules/Tasks/task/ViewTask.jsx"],"sourcesContent":["\r\n\r\n\r\n// \"use client\";\r\n\r\n// import { useEffect, useState } from \"react\";\r\n// import { useParams } from \"next/navigation\";\r\n// import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\n// import { Badge } from \"@/components/ui/badge\";\r\n// import { Separator } from \"@/components/ui/separator\";\r\n// import {\r\n//   Tooltip,\r\n//   TooltipContent,\r\n//   TooltipProvider,\r\n//   TooltipTrigger,\r\n// } from \"@/components/ui/tooltip\";\r\n// import {\r\n//   User,\r\n//   Mail,\r\n//   Flag,\r\n//   Folder,\r\n//   Hash,\r\n//   ListTodo,\r\n//   History,\r\n//   AlertCircle,\r\n//   ClipboardList,\r\n//   Info as InfoIcon,\r\n//   FileText,\r\n//   BugIcon,\r\n// } from \"lucide-react\";\r\n\r\n// import SubTaskList from \"@/modules/Tasks/sub-task/SubTaskList\";\r\n// import ReportBugModal from \"@/modules/Tasks/sub-task/ReportBugModal\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import { fetchTaskById } from \"@/features/taskSlice\";\r\n// import { formatDateUTC } from \"@/utils/formatDate\";\r\n// import { Button } from \"@/components/ui/button\";\r\n// import { useCurrentUser } from \"@/hooks/useCurrentUser\";\r\n\r\n// const reviewStatusColors = {\r\n//   Approved: \"bg-green-100 text-green-800 border-green-200\",\r\n//   Rejected: \"bg-red-100 text-red-800 border-red-200\",\r\n//   Pending: \"bg-yellow-100 text-yellow-800 border-yellow-200\",\r\n//   Resolved: \"bg-blue-100 text-blue-800 border-blue-200\",\r\n// };\r\n// const TaskView = () => {\r\n//   const dispatch = useDispatch();\r\n//   const params = useParams();\r\n//   const task_id = params.id;\r\n\r\n//   const task = useSelector((state) => state.task.currentTask);\r\n//   const loading = useSelector((state) => state.task.status === \"loading\");\r\n//   const error = useSelector((state) => state.task.error);\r\n//   const { currentUser } = useCurrentUser(task?.teamLeadId);\r\n// // ✅ State for modal visibility\r\n//   const [isReportBugOpen, setIsReportBugOpen] = useState(false);\r\n\r\n\r\n//   const isTeamLead = task?.teamLeadId === currentUser?.employeeID;\r\n//   const canReportBug =\r\n//     (isTeamLead ||\r\n//       currentUser?.role === \"cpc\" ||\r\n//       currentUser?.position === \"Team Lead\") &&\r\n//     task?.status === \"Completed\";\r\n\r\n//   useEffect(() => {\r\n//     if (task_id) {\r\n//       dispatch(fetchTaskById(task_id));\r\n//     }\r\n//   }, [dispatch, task_id]);\r\n\r\n \r\n\r\n//   // const isTaskClosed = \"Closed\";\r\n//   const isTaskClosed = task?.status === 'Completed' ;\r\n\r\n//   const getPriorityVariant = (priority) => {\r\n//     switch (priority) {\r\n//       case \"High\":\r\n//         return \"destructive\";\r\n//       case \"Medium\":\r\n//         return \"default\";\r\n//       case \"Low\":\r\n//         return \"secondary\";\r\n//       default:\r\n//         return \"outline\";\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <TooltipProvider>\r\n//       <div className=\"p-3 sm:p-4\">\r\n//         <Card className=\"shadow-lg\">\r\n//           <CardHeader>\r\n//             <CardTitle className=\"flex items-center justify-between text-lg sm:text-xl\">\r\n//               <div className=\"flex items-center\">\r\n//                 <ClipboardList className=\"mr-2 h-5 w-5 text-primary\" />\r\n//                 {task?.task_id}\r\n//               </div>\r\n//               <Badge\r\n//                 variant={isTaskClosed ? \"destructive\" : \"default\"}\r\n//                 className=\"ml-2 text-xs sm:text-sm\"\r\n//               >\r\n//                 {task?.status}\r\n//               </Badge>\r\n//             </CardTitle>\r\n//           </CardHeader>\r\n//           <CardContent>\r\n//             <div className=\"grid grid-cols-1 lg:grid-cols-[4fr_1fr] gap-3 sm:gap-4 lg:gap-6\">\r\n//               {/* Left Column (Task Details & Subtasks) */}\r\n\r\n//               <div className=\"space-y-4\">\r\n//                 <section>\r\n//                   <h3 className=\"text-base sm:text-lg font-semibold mb-3 flex items-center\">\r\n//                     <InfoIcon className=\"mr-2 h-4 w-4 sm:h-5 sm:w-5 text-blue-500\" />\r\n//                     Task Details\r\n//                   </h3>\r\n\r\n//                   <div className=\"space-y-4\">\r\n//                     {/* Row 1: Title */}\r\n//                     <div>\r\n//                       <label className=\"text-xs sm:text-sm font-medium text-gray-600\">\r\n//                         Title\r\n//                       </label>\r\n//                       <div className=\"flex items-center mt-1\">\r\n//                         <span className=\"font-medium text-sm sm:text-base\">\r\n//                           {task?.title}\r\n//                         </span>\r\n//                       </div>\r\n//                     </div>\r\n\r\n//                     {/* Row 2: Priority & Project */}\r\n//                     <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\r\n//                       <div>\r\n//                         <label className=\"text-xs sm:text-sm font-medium text-gray-600\">\r\n//                           Project\r\n//                         </label>\r\n//                         <div className=\"flex items-center mt-1\">\r\n//                           <span className=\"font-medium text-sm\">\r\n//                             {task?.projectName}\r\n//                           </span>\r\n//                         </div>\r\n//                       </div>\r\n//                       <div>\r\n//                         <label className=\"text-xs sm:text-sm font-medium text-gray-600\">\r\n//                           Priority\r\n//                         </label>\r\n//                         <div className=\"flex items-center mt-1\">\r\n//                           <Badge\r\n//                             variant={getPriorityVariant(task?.priority)}\r\n//                             className=\"text-sm\"\r\n//                           >\r\n//                             {task?.priority}\r\n//                           </Badge>\r\n//                         </div>\r\n//                       </div>\r\n//                     </div>\r\n\r\n//                     {/* Row 3: Description */}\r\n//                     <div>\r\n//                       <label className=\"text-xs sm:text-sm font-medium text-gray-600\">\r\n//                         Description\r\n//                       </label>\r\n//                       <div className=\"flex items-start mt-1\">\r\n//                         <AlertCircle className=\"mr-2 h-4 w-4 text-gray-500 mt-1\" />\r\n//                         <span className=\"font-medium text-sm\">\r\n//                           {task?.description}\r\n//                         </span>\r\n//                       </div>\r\n//                     </div>\r\n//                   </div>\r\n//                 </section>\r\n\r\n//                 <Separator className=\"my-3\" />\r\n\r\n//                 {/* Subtask List */}\r\n//                 <SubTaskList isTaskClosed={isTaskClosed} task={task} taskId={task?.task_id} subtasks={task?.subtasks}/>\r\n             \r\n//               </div>\r\n\r\n//               {/* Right Column (Owner, Actions, History) */}\r\n//               <div className=\"space-y-4\">\r\n//                 <section>\r\n//                   <h3 className=\"text-base sm:text-lg font-semibold mb-2 flex items-center\">\r\n//                     <User className=\"mr-2 h-4 w-4 sm:h-5 sm:w-5 text-purple-500\" />\r\n//                     Task Management\r\n//                   </h3>\r\n//                   <div className=\"grid grid-cols-1 gap-3\">\r\n//                     {/* Owner Details */}\r\n//                     <div className=\"space-y-2\">\r\n//                       <h4 className=\"text-xs sm:text-sm font-semibold text-gray-700\">\r\n//                         Owner Details\r\n//                       </h4>\r\n//                       <div className=\"flex items-center\">\r\n//                         <User className=\"mr-2 h-3 w-3 sm:h-4 sm:w-4 text-gray-500\" />\r\n//                         <span className=\"font-medium text-xs sm:text-sm\">\r\n//                           {task?.assignedToDetails?.memberName}\r\n//                         </span>\r\n//                       </div>\r\n//                       <div className=\"flex items-center\">\r\n//                         <AlertCircle className=\"mr-2 h-3 w-3 sm:h-4 sm:w-4 text-gray-500\" />\r\n//                         <span className=\"font-medium text-xs sm:text-sm\">\r\n//                           {task?.assignedBy}\r\n//                         </span>\r\n//                       </div>\r\n//                       <div className=\"flex items-center\">\r\n//                         <Mail className=\"mr-2 h-3 w-3 sm:h-4 sm:w-4 text-gray-500\" />\r\n//                         <span className=\"font-medium text-xs sm:text-sm\">\r\n//                           {task?.assignedToDetails?.memberName}\r\n//                         </span>\r\n//                       </div>\r\n//                     </div>\r\n\r\n//                     {/* Actions */}\r\n//                     <div className=\"space-y-2\">\r\n//                       <h4 className=\"text-xs sm:text-sm font-semibold text-gray-700\">\r\n//                         Actions\r\n//                       </h4>\r\n//                       <div className=\"flex flex-col gap-2\">\r\n//                         <Tooltip>\r\n//                           <TooltipTrigger asChild>\r\n                            \r\n//                             <button\r\n//                               className={`w-full text-xs sm:text-sm h-8 sm:h-9 px-3 rounded-md flex items-center justify-center bg-green-600 text-white hover:bg-green-700 opacity-50 cursor-not-allowed`}\r\n//                               onClick={() => {}}\r\n//                             >\r\n//                               <ListTodo className=\"mr-1 h-3 w-3 sm:h-4 sm:w-4\" />{\" \"}\r\n//                               Mark as Closed\r\n//                             </button>\r\n//                           </TooltipTrigger>\r\n//                           <TooltipContent>\r\n//                             {isTaskClosed\r\n//                               ? \"Task is already closed\"\r\n//                               : \"Close the task\"}\r\n//                           </TooltipContent>\r\n//                         </Tooltip>\r\n//                         { task?.status === \"Completed\" && (\r\n//                           <Button\r\n//                           onClick={() => setIsReportBugOpen(true)} // ✅ Open modal on click\r\n//                             className=\"bg-blue-600 hover:bg-blue-700 text-white\"\r\n//                           >\r\n//                             <BugIcon className=\"h-4 w-4\" />\r\n//                             Report Bug\r\n//                           </Button>\r\n//                         )}\r\n//                         {/*  Report Bug Modal */}\r\n//                         {isReportBugOpen && (\r\n//                           <ReportBugModal onClose={() => setIsReportBugOpen(false)} />\r\n//                         )}\r\n//                       </div>\r\n//                     </div>\r\n\r\n//                     {/* Review History */}\r\n//                     <div className=\"space-y-2\">\r\n//                       <h4 className=\"text-xs sm:text-sm font-semibold text-gray-700\">\r\n//                         Review History\r\n//                       </h4>\r\n\r\n//                       {task?.taskHistory && task?.taskHistory.length > 0 ? (\r\n//                         <ul className=\"space-y-2\">\r\n//                           {task.taskHistory.map((entry, index) => (\r\n//                             <li\r\n//                               key={index}\r\n//                               className=\"bg-white border border-gray-200 rounded-xl px-3 py-2 shadow-sm hover:shadow-md transition-all\"\r\n//                             >\r\n//                               <div className=\"flex justify-between items-center text-sm\">\r\n//                                 <span className=\"font-semibold text-gray-800 truncate max-w-[150px]\">\r\n//                                   {entry.bugTitle || \"Untitled\"}\r\n//                                 </span>\r\n\r\n//                                 <span className=\"text-xs text-gray-500 whitespace-nowrap\">\r\n//                                   {entry.timestamp\r\n//                                     ? formatDateUTC(entry.timestamp)\r\n//                                     : \"N/A\"}\r\n//                                 </span>\r\n//                               </div>\r\n//                               <div className=\"flex justify-between items-center text-xs mt-1\">\r\n//                                 <span className=\"text-gray-600 italic\">\r\n//                                   {entry.bugStatus || \"Unknown\"}\r\n//                                 </span>\r\n//                                 <span\r\n//                                   className={`text-[10px] font-semibold px-2 py-0.5 rounded-full border \r\n//                       ${\r\n//                         reviewStatusColors[entry.reviewStatus?.toUpperCase()] ||\r\n//                         \"bg-gray-100 text-gray-800 border-gray-300\"\r\n//                       }`}\r\n//                                 >\r\n//                                   {entry.reviewStatus || \"N/A\"}\r\n//                                 </span>\r\n//                               </div>\r\n//                             </li>\r\n//                           ))}\r\n//                         </ul>\r\n//                       ) : (\r\n//                         <div className=\"flex items-center justify-center h-[100px] text-gray-600 border border-dashed rounded-lg\">\r\n//                           <div className=\"text-center\">\r\n//                             <FileText className=\"h-6 w-6 mx-auto mb-2 opacity-50\" />\r\n//                             <p className=\"text-sm\">\r\n//                               No review history available\r\n//                             </p>\r\n//                           </div>\r\n//                         </div>\r\n//                       )}\r\n//                     </div>\r\n//                   </div>\r\n//                 </section>\r\n//               </div>\r\n//             </div>\r\n//           </CardContent>\r\n//         </Card>\r\n\r\n \r\n//       </div>\r\n//     </TooltipProvider>\r\n//   );\r\n// };\r\n\r\n// export default TaskView;\r\n\"use client\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { useParams } from \"next/navigation\";\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Separator } from \"@/components/ui/separator\";\r\nimport {\r\n  Tooltip,\r\n  TooltipContent,\r\n  TooltipProvider,\r\n  TooltipTrigger,\r\n} from \"@/components/ui/tooltip\";\r\nimport {\r\n  User,\r\n  Mail,\r\n  Flag,\r\n  Folder,\r\n  Hash,\r\n  ListTodo,\r\n  History,\r\n  AlertCircle,\r\n  ClipboardList,\r\n  Info as InfoIcon,\r\n  FileText,\r\n  BugIcon,\r\n} from \"lucide-react\";\r\nimport SubTaskList from \"@/modules/Tasks/sub-task/SubTaskList\";\r\nimport ReportBugModal from \"@/modules/Tasks/sub-task/ReportBugModal\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchTaskById, updateTaskStatus } from \"@/features/taskSlice\";\r\nimport { formatDateUTC } from \"@/utils/formatDate\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { useCurrentUser } from \"@/hooks/useCurrentUser\";\r\nimport { toast } from 'sonner';\r\n\r\nconst reviewStatusColors = {\r\n  Approved: \"bg-green-100 text-green-800 border-green-200\",\r\n  Rejected: \"bg-red-100 text-red-800 border-red-200\",\r\n  Pending: \"bg-yellow-100 text-yellow-800 border-yellow-200\",\r\n  Resolved: \"bg-blue-100 text-blue-800 border-blue-200\",\r\n};\r\n\r\nconst TaskView = () => {\r\n  const dispatch = useDispatch();\r\n  const params = useParams();\r\n  const task_id = params.id;\r\n\r\n  const task = useSelector((state) => state.task.currentTask);\r\n  const loading = useSelector((state) => state.task.status === \"loading\");\r\n  const updating = useSelector((state) => state.task.updating); // Added for update status\r\n  const error = useSelector((state) => state.task.error);\r\n  const { currentUser } = useCurrentUser(task?.teamLeadId);\r\n\r\n  const [isReportBugOpen, setIsReportBugOpen] = useState(false);\r\n\r\n  const isTeamLead = task?.teamLeadId === currentUser?.employeeID;\r\n  const canReportBug =\r\n    (isTeamLead ||\r\n      currentUser?.role === \"cpc\" ||\r\n      currentUser?.position === \"Team Lead\") &&\r\n    task?.status === \"Completed\";\r\n\r\n  const isTaskClosed = task?.status === 'Completed';\r\n\r\n  useEffect(() => {\r\n    if (task_id) {\r\n      dispatch(fetchTaskById(task_id));\r\n    }\r\n  }, [dispatch, task_id]);\r\n\r\n  // Handle marking task as completed\r\n  const handleMarkAsCompleted = async () => {\r\n    if (isTaskClosed) return;\r\n    try {\r\n      await dispatch(updateTaskStatus({ taskId: task_id, status: 'Completed' })).unwrap();\r\n      toast.success('Task marked as Completed');\r\n    } catch (err) {\r\n      toast.error(error || 'Failed to mark task as Completed');\r\n    }\r\n  };\r\n\r\n  const getPriorityVariant = (priority) => {\r\n    switch (priority) {\r\n      case \"High\":\r\n        return \"destructive\";\r\n      case \"Medium\":\r\n        return \"default\";\r\n      case \"Low\":\r\n        return \"secondary\";\r\n      default:\r\n        return \"outline\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TooltipProvider>\r\n      <div className=\"p-3 sm:p-4\">\r\n        <Card className=\"shadow-lg\">\r\n          <CardHeader>\r\n            <CardTitle className=\"flex items-center justify-between text-lg sm:text-xl\">\r\n              <div className=\"flex items-center\">\r\n                <ClipboardList className=\"mr-2 h-5 w-5 text-primary\" />\r\n                {task?.task_id}\r\n              </div>\r\n              <Badge\r\n                variant={isTaskClosed ? \"destructive\" : \"default\"}\r\n                className=\"ml-2 text-xs sm:text-sm\"\r\n              >\r\n                {task?.status}\r\n              </Badge>\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            {loading && <div className=\"text-center text-sm\">Loading...</div>}\r\n            {error && <div className=\"text-center text-sm text-red-500\">Error: {error}</div>}\r\n            {/* {!loading && !error && !task && <div className=\"text-center text-sm\">No task found</div>} */}\r\n            {task && (\r\n              <div className=\"grid grid-cols-1 lg:grid-cols-[4fr_1fr] gap-3 sm:gap-4 lg:gap-6\">\r\n                {/* Left Column (Task Details & Subtasks) */}\r\n                <div className=\"space-y-4\">\r\n                  <section>\r\n                    <h3 className=\"text-base sm:text-lg font-semibold mb-3 flex items-center\">\r\n                      <InfoIcon className=\"mr-2 h-4 w-4 sm:h-5 sm:w-5 text-blue-500\" />\r\n                      Task Details\r\n                    </h3>\r\n                    <div className=\"space-y-4\">\r\n                      {/* Row 1: Title */}\r\n                      <div>\r\n                        <label className=\"text-xs sm:text-sm font-medium text-gray-600\">\r\n                          Title\r\n                        </label>\r\n                        <div className=\"flex items-center mt-1\">\r\n                          <span className=\"font-medium text-sm sm:text-base\">\r\n                            {task?.title}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                      {/* Row 2: Priority & Project */}\r\n                      <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\r\n                        <div>\r\n                          <label className=\"text-xs sm:text-sm font-medium text-gray-600\">\r\n                            Project\r\n                          </label>\r\n                          <div className=\"flex items-center mt-1\">\r\n                            <span className=\"font-medium text-sm\">\r\n                              {task?.projectName}\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                        <div>\r\n                          <label className=\"text-xs sm:text-sm font-medium text-gray-600\">\r\n                            Priority\r\n                          </label>\r\n                          <div className=\"flex items-center mt-1\">\r\n                            <Badge\r\n                              variant={getPriorityVariant(task?.priority)}\r\n                              className=\"text-sm\"\r\n                            >\r\n                              {task?.priority}\r\n                            </Badge>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      {/* Row 3: Description */}\r\n                      <div>\r\n                        <label className=\"text-xs sm:text-sm font-medium text-gray-600\">\r\n                          Description\r\n                        </label>\r\n                        <div className=\"flex items-start mt-1\">\r\n                          <AlertCircle className=\"mr-2 h-4 w-4 text-gray-500 mt-1\" />\r\n                          <span className=\"font-medium text-sm\">\r\n                            {task?.description}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </section>\r\n                  <Separator className=\"my-3\" />\r\n                  {/* Subtask List */}\r\n                  <SubTaskList\r\n                    isTaskClosed={isTaskClosed}\r\n                    task={task}\r\n                    taskId={task?.task_id}\r\n                    subtasks={task?.subtasks || []}\r\n                  />\r\n                </div>\r\n                {/* Right Column (Owner, Actions, History) */}\r\n                <div className=\"space-y-4\">\r\n                  <section>\r\n                    <h3 className=\"text-base sm:text-lg font-semibold mb-2 flex items-center\">\r\n                      <User className=\"mr-2 h-4 w-4 sm:h-5 sm:w-5 text-purple-500\" />\r\n                      Task Management\r\n                    </h3>\r\n                    <div className=\"grid grid-cols-1 gap-3\">\r\n                      {/* Owner Details */}\r\n                      <div className=\"space-y-2\">\r\n                        <h4 className=\"text-xs sm:text-sm font-semibold text-gray-700\">\r\n                          Owner Details\r\n                        </h4>\r\n                        <div className=\"flex items-center\">\r\n                          <User className=\"mr-2 h-3 w-3 sm:h-4 sm:w-4 text-gray-500\" />\r\n                          <span className=\"font-medium text-xs sm:text-sm\">\r\n                            {task?.assignedToDetails?.memberName}\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"flex items-center\">\r\n                          <AlertCircle className=\"mr-2 h-3 w-3 sm:h-4 sm:w-4 text-gray-500\" />\r\n                          <span className=\"font-medium text-xs sm:text-sm\">\r\n                            {task?.assignedBy}\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"flex items-center\">\r\n                          <Mail className=\"mr-2 h-3 w-3 sm:h-4 sm:w-4 text-gray-500\" />\r\n                          <span className=\"font-medium text-xs sm:text-sm\">\r\n                            {task?.assignedToDetails?.memberName}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                      {/* Actions */}\r\n                      <div className=\"space-y-2\">\r\n                        <h4 className=\"text-xs sm:text-sm font-semibold text-gray-700\">\r\n                          Actions\r\n                        </h4>\r\n                        <div className=\"flex flex-col gap-2\">\r\n                          <Tooltip>\r\n                            <TooltipTrigger asChild>\r\n                              <Button\r\n                                className={`w-full text-xs sm:text-sm h-8 sm:h-9 px-3 rounded-md flex items-center justify-center bg-green-600 text-white hover:bg-green-700 ${\r\n                                  isTaskClosed || updating ? 'opacity-50 cursor-not-allowed' : ''\r\n                                }`}\r\n                                onClick={handleMarkAsCompleted}\r\n                                disabled={isTaskClosed || updating}\r\n                              >\r\n                                <ListTodo className=\"mr-1 h-3 w-3 sm:h-4 sm:w-4\" />\r\n                                {updating ? 'Updating...' : 'Mark as Completed'}\r\n                              </Button>\r\n                            </TooltipTrigger>\r\n                            <TooltipContent>\r\n                              {isTaskClosed ? \"Task is already completed\" : \"Mark the task as completed\"}\r\n                            </TooltipContent>\r\n                          </Tooltip>\r\n                          {task?.status === \"Completed\" && canReportBug && (\r\n                            <Button\r\n                              onClick={() => setIsReportBugOpen(true)}\r\n                              className=\"bg-blue-600 hover:bg-blue-700 text-white\"\r\n                            >\r\n                              <BugIcon className=\"h-4 w-4\" />\r\n                              Report Bug\r\n                            </Button>\r\n                          )}\r\n                          {isReportBugOpen && (\r\n                            <ReportBugModal onClose={() => setIsReportBugOpen(false)} />\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                      {/* Review History */}\r\n                      <div className=\"space-y-2\">\r\n                        <h4 className=\"text-xs sm:text-sm font-semibold text-gray-700\">\r\n                          Review History\r\n                        </h4>\r\n                        {task?.taskHistory && task?.taskHistory.length > 0 ? (\r\n                          <ul className=\"space-y-2\">\r\n                            {task.taskHistory.map((entry, index) => (\r\n                              <li\r\n                                key={index}\r\n                                className=\"bg-white border border-gray-200 rounded-xl px-3 py-2 shadow-sm hover:shadow-md transition-all\"\r\n                              >\r\n                                <div className=\"flex justify-between items-center text-sm\">\r\n                                  <span className=\"font-semibold text-gray-800 truncate max-w-[150px]\">\r\n                                    {entry.bugTitle || \"Untitled\"}\r\n                                  </span>\r\n                                  <span className=\"text-xs text-gray-500 whitespace-nowrap\">\r\n                                    {entry.timestamp\r\n                                      ? formatDateUTC(entry.timestamp)\r\n                                      : \"N/A\"}\r\n                                  </span>\r\n                                </div>\r\n                                <div className=\"flex justify-between items-center text-xs mt-1\">\r\n                                  <span className=\"text-gray-600 italic\">\r\n                                    {entry.bugStatus || \"Unknown\"}\r\n                                  </span>\r\n                                  <span\r\n                                    className={`text-[10px] font-semibold px-2 py-0.5 rounded-full border \r\n                                    ${\r\n                                      reviewStatusColors[entry.reviewStatus?.toUpperCase()] ||\r\n                                      \"bg-gray-100 text-gray-800 border-gray-300\"\r\n                                    }`}\r\n                                  >\r\n                                    {entry.reviewStatus || \"N/A\"}\r\n                                  </span>\r\n                                </div>\r\n                              </li>\r\n                            ))}\r\n                          </ul>\r\n                        ) : (\r\n                          <div className=\"flex items-center justify-center h-[100px] text-gray-600 border border-dashed rounded-lg\">\r\n                            <div className=\"text-center\">\r\n                              <FileText className=\"h-6 w-6 mx-auto mb-2 opacity-50\" />\r\n                              <p className=\"text-sm\">\r\n                                No review history available\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </section>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    </TooltipProvider>\r\n  );\r\n};\r\n\r\nexport default TaskView;"],"names":[],"mappings":"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","debugId":null}}]
}
{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Dev%20Directory/Blueprints/blueprintfro-v1/src/components/ui/progress.jsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Progress({\r\n  className,\r\n  value,\r\n  ...props\r\n}) {\r\n  return (\r\n    <ProgressPrimitive.Root\r\n      data-slot=\"progress\"\r\n      className={cn(\r\n        \"bg-primary/20 relative h-2 w-full overflow-hidden rounded-full\",\r\n        className\r\n      )}\r\n      {...props}>\r\n      <ProgressPrimitive.Indicator\r\n        data-slot=\"progress-indicator\"\r\n        className=\"bg-primary h-full w-full flex-1 transition-all\"\r\n        style={{ transform: `translateX(-${100 - (value || 0)}%)` }} />\r\n    </ProgressPrimitive.Root>\r\n  );\r\n}\r\n\r\nexport { Progress }\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,SAAS,SAAS,EAChB,SAAS,EACT,KAAK,EACL,GAAG,OACJ;IACC,qBACE,6LAAC,uKAAA,CAAA,OAAsB;QACrB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;kBACT,cAAA,6LAAC,uKAAA,CAAA,YAA2B;YAC1B,aAAU;YACV,WAAU;YACV,OAAO;gBAAE,WAAW,CAAC,YAAY,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC;YAAC;;;;;;;;;;;AAGlE;KAnBS","debugId":null}},
    {"offset": {"line": 54, "column": 0}, "map": {"version":3,"sources":["file:///C:/Dev%20Directory/Blueprints/blueprintfro-v1/src/components/ui/dialog.jsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\r\nimport { XIcon } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Dialog({\r\n  ...props\r\n}) {\r\n  return <DialogPrimitive.Root data-slot=\"dialog\" {...props} />;\r\n}\r\n\r\nfunction DialogTrigger({\r\n  ...props\r\n}) {\r\n  return <DialogPrimitive.Trigger data-slot=\"dialog-trigger\" {...props} />;\r\n}\r\n\r\nfunction DialogPortal({\r\n  ...props\r\n}) {\r\n  return <DialogPrimitive.Portal data-slot=\"dialog-portal\" {...props} />;\r\n}\r\n\r\nfunction DialogClose({\r\n  ...props\r\n}) {\r\n  return <DialogPrimitive.Close data-slot=\"dialog-close\" {...props} />;\r\n}\r\n\r\nfunction DialogOverlay({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    <DialogPrimitive.Overlay\r\n      data-slot=\"dialog-overlay\"\r\n      className={cn(\r\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50\",\r\n        className\r\n      )}\r\n      {...props} />\r\n  );\r\n}\r\n\r\nfunction DialogContent({\r\n  className,\r\n  children,\r\n  showCloseButton = true,\r\n  ...props\r\n}) {\r\n  return (\r\n    <DialogPortal data-slot=\"dialog-portal\">\r\n      <DialogOverlay />\r\n      <DialogPrimitive.Content\r\n        data-slot=\"dialog-content\"\r\n        className={cn(\r\n          \"bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg\",\r\n          className\r\n        )}\r\n        {...props}>\r\n        {children}\r\n        {showCloseButton && (\r\n          <DialogPrimitive.Close\r\n            data-slot=\"dialog-close\"\r\n            className=\"ring-offset-background focus:ring-ring data-[state=open]:bg-accent data-[state=open]:text-muted-foreground absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\">\r\n            <XIcon />\r\n            <span className=\"sr-only\">Close</span>\r\n          </DialogPrimitive.Close>\r\n        )}\r\n      </DialogPrimitive.Content>\r\n    </DialogPortal>\r\n  );\r\n}\r\n\r\nfunction DialogHeader({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    <div\r\n      data-slot=\"dialog-header\"\r\n      className={cn(\"flex flex-col gap-2 text-center sm:text-left\", className)}\r\n      {...props} />\r\n  );\r\n}\r\n\r\nfunction DialogFooter({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    <div\r\n      data-slot=\"dialog-footer\"\r\n      className={cn(\"flex flex-col-reverse gap-2 sm:flex-row sm:justify-end\", className)}\r\n      {...props} />\r\n  );\r\n}\r\n\r\nfunction DialogTitle({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    <DialogPrimitive.Title\r\n      data-slot=\"dialog-title\"\r\n      className={cn(\"text-lg leading-none font-semibold\", className)}\r\n      {...props} />\r\n  );\r\n}\r\n\r\nfunction DialogDescription({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    <DialogPrimitive.Description\r\n      data-slot=\"dialog-description\"\r\n      className={cn(\"text-muted-foreground text-sm\", className)}\r\n      {...props} />\r\n  );\r\n}\r\n\r\nexport {\r\n  Dialog,\r\n  DialogClose,\r\n  DialogContent,\r\n  DialogDescription,\r\n  DialogFooter,\r\n  DialogHeader,\r\n  DialogOverlay,\r\n  DialogPortal,\r\n  DialogTitle,\r\n  DialogTrigger,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,SAAS,OAAO,EACd,GAAG,OACJ;IACC,qBAAO,6LAAC,qKAAA,CAAA,OAAoB;QAAC,aAAU;QAAU,GAAG,KAAK;;;;;;AAC3D;KAJS;AAMT,SAAS,cAAc,EACrB,GAAG,OACJ;IACC,qBAAO,6LAAC,qKAAA,CAAA,UAAuB;QAAC,aAAU;QAAkB,GAAG,KAAK;;;;;;AACtE;MAJS;AAMT,SAAS,aAAa,EACpB,GAAG,OACJ;IACC,qBAAO,6LAAC,qKAAA,CAAA,SAAsB;QAAC,aAAU;QAAiB,GAAG,KAAK;;;;;;AACpE;MAJS;AAMT,SAAS,YAAY,EACnB,GAAG,OACJ;IACC,qBAAO,6LAAC,qKAAA,CAAA,QAAqB;QAAC,aAAU;QAAgB,GAAG,KAAK;;;;;;AAClE;MAJS;AAMT,SAAS,cAAc,EACrB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,6LAAC,qKAAA,CAAA,UAAuB;QACtB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;AAEf;MAbS;AAeT,SAAS,cAAc,EACrB,SAAS,EACT,QAAQ,EACR,kBAAkB,IAAI,EACtB,GAAG,OACJ;IACC,qBACE,6LAAC;QAAa,aAAU;;0BACtB,6LAAC;;;;;0BACD,6LAAC,qKAAA,CAAA,UAAuB;gBACtB,aAAU;gBACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+WACA;gBAED,GAAG,KAAK;;oBACR;oBACA,iCACC,6LAAC,qKAAA,CAAA,QAAqB;wBACpB,aAAU;wBACV,WAAU;;0CACV,6LAAC,mMAAA,CAAA,QAAK;;;;;0CACN,6LAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAMtC;MA5BS;AA8BT,SAAS,aAAa,EACpB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAEf;MAVS;AAYT,SAAS,aAAa,EACpB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,0DAA0D;QACvE,GAAG,KAAK;;;;;;AAEf;MAVS;AAYT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,6LAAC,qKAAA,CAAA,QAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAEf;MAVS;AAYT,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,6LAAC,qKAAA,CAAA,cAA2B;QAC1B,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAEf;MAVS","debugId":null}},
    {"offset": {"line": 254, "column": 0}, "map": {"version":3,"sources":["file:///C:/Dev%20Directory/Blueprints/blueprintfro-v1/src/modules/Tasks/sub-task/CreateSubTaskModal.jsx"],"sourcesContent":["import { useState } from 'react';\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogClose } from '@/components/ui/dialog';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Plus } from 'lucide-react';\r\n\r\nconst CreateSubtaskModal = ({ open, setOpen, subtasks, setSubtasks, isTaskClosed, setCurrentPage }) => {\r\n  const [newTitle, setNewTitle] = useState('');\r\n\r\n  const handleAdd = () => {\r\n    if (isTaskClosed || !newTitle.trim()) return;\r\n    setSubtasks([\r\n      ...subtasks,\r\n      { id: subtasks.length + 1, title: newTitle, status: 'Open' },\r\n    ]);\r\n    setNewTitle('');\r\n    setOpen(false);\r\n    alert('Subtask added');\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onOpenChange={setOpen}>\r\n      <DialogContent>\r\n        <DialogHeader>\r\n          <DialogTitle className=\"flex items-center\">\r\n            <Plus className=\"mr-2 h-4 w-4 sm:h-5 sm:w-5 text-green-500\" />\r\n            Add New Subtask\r\n          </DialogTitle>\r\n        </DialogHeader>\r\n        <div className=\"space-y-3\">\r\n          <div>\r\n            <span className=\"font-medium text-xs sm:text-sm\">Title:</span>\r\n            <Input\r\n              value={newTitle}\r\n              onChange={(e) => setNewTitle(e.target.value)}\r\n              className=\"mt-1 text-xs sm:text-sm\"\r\n              disabled={isTaskClosed}\r\n            />\r\n          </div>\r\n          <DialogClose asChild>\r\n            <Button\r\n              onClick={handleAdd}\r\n              disabled={isTaskClosed}\r\n              className=\"bg-blue-600 hover:bg-blue-700 text-xs sm:text-sm h-8 sm:h-9\"\r\n            >\r\n              Add Subtask\r\n            </Button>\r\n          </DialogClose>\r\n        </div>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default CreateSubtaskModal;"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;;;;;;;;AAEA,MAAM,qBAAqB,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,WAAW,EAAE,YAAY,EAAE,cAAc,EAAE;;IAChG,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEzC,MAAM,YAAY;QAChB,IAAI,gBAAgB,CAAC,SAAS,IAAI,IAAI;QACtC,YAAY;eACP;YACH;gBAAE,IAAI,SAAS,MAAM,GAAG;gBAAG,OAAO;gBAAU,QAAQ;YAAO;SAC5D;QACD,YAAY;QACZ,QAAQ;QACR,MAAM;QACN,eAAe;IACjB;IAEA,qBACE,6LAAC,qIAAA,CAAA,SAAM;QAAC,MAAM;QAAM,cAAc;kBAChC,cAAA,6LAAC,qIAAA,CAAA,gBAAa;;8BACZ,6LAAC,qIAAA,CAAA,eAAY;8BACX,cAAA,6LAAC,qIAAA,CAAA,cAAW;wBAAC,WAAU;;0CACrB,6LAAC,qMAAA,CAAA,OAAI;gCAAC,WAAU;;;;;;4BAA8C;;;;;;;;;;;;8BAIlE,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;;8CACC,6LAAC;oCAAK,WAAU;8CAAiC;;;;;;8CACjD,6LAAC,oIAAA,CAAA,QAAK;oCACJ,OAAO;oCACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;oCAC3C,WAAU;oCACV,UAAU;;;;;;;;;;;;sCAGd,6LAAC,qIAAA,CAAA,cAAW;4BAAC,OAAO;sCAClB,cAAA,6LAAC,qIAAA,CAAA,SAAM;gCACL,SAAS;gCACT,UAAU;gCACV,WAAU;0CACX;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQb;GA/CM;KAAA;uCAiDS","debugId":null}},
    {"offset": {"line": 394, "column": 0}, "map": {"version":3,"sources":["file:///C:/Dev%20Directory/Blueprints/blueprintfro-v1/src/modules/Tasks/sub-task/EditSubTaskModal.jsx"],"sourcesContent":["import { useState } from 'react';\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogClose } from '@/components/ui/dialog';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Edit } from 'lucide-react';\r\n\r\nconst EditSubtaskModal = ({ open, setOpen, subtask, subtasks, setSubtasks, isTaskClosed }) => {\r\n  const [editTitle, setEditTitle] = useState(subtask.title);\r\n  const [editStatus, setEditStatus] = useState(subtask.status);\r\n\r\n  const handleSaveEdit = () => {\r\n    if (isTaskClosed) return;\r\n    setSubtasks(\r\n      subtasks.map((st) =>\r\n        st.id === subtask.id ? { ...st, title: editTitle, status: editStatus } : st\r\n      )\r\n    );\r\n    setOpen(false);\r\n    alert('Subtask edited');\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onOpenChange={setOpen}>\r\n      <DialogContent>\r\n        <DialogHeader>\r\n          <DialogTitle className=\"flex items-center\">\r\n            <Edit className=\"mr-2 h-4 w-4 sm:h-5 sm:w-5 text-yellow-500\" />\r\n            Edit Subtask\r\n          </DialogTitle>\r\n        </DialogHeader>\r\n        <div className=\"space-y-3\">\r\n          <div>\r\n            <span className=\"font-medium text-xs sm:text-sm\">Title:</span>\r\n            <Input\r\n              value={editTitle}\r\n              onChange={(e) => setEditTitle(e.target.value)}\r\n              className=\"mt-1 text-xs sm:text-sm\"\r\n              disabled={isTaskClosed}\r\n            />\r\n          </div>\r\n          <div>\r\n            <span className=\"font-medium text-xs sm:text-sm\">Status:</span>\r\n            <select\r\n              className=\"w-full p-2 border rounded bg-background text-foreground mt-1 text-xs sm:text-sm\"\r\n              value={editStatus}\r\n              onChange={(e) => setEditStatus(e.target.value)}\r\n              disabled={isTaskClosed}\r\n            >\r\n              <option>Open</option>\r\n              <option>Closed</option>\r\n            </select>\r\n          </div>\r\n          <DialogClose asChild>\r\n            <Button\r\n              onClick={handleSaveEdit}\r\n              disabled={isTaskClosed}\r\n              className=\"bg-blue-600 hover:bg-blue-700 text-xs sm:text-sm h-8 sm:h-9\"\r\n            >\r\n              Save Changes\r\n            </Button>\r\n          </DialogClose>\r\n        </div>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default EditSubtaskModal;"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;;;;;;;;AAEA,MAAM,mBAAmB,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,WAAW,EAAE,YAAY,EAAE;;IACvF,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,QAAQ,KAAK;IACxD,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,QAAQ,MAAM;IAE3D,MAAM,iBAAiB;QACrB,IAAI,cAAc;QAClB,YACE,SAAS,GAAG,CAAC,CAAC,KACZ,GAAG,EAAE,KAAK,QAAQ,EAAE,GAAG;gBAAE,GAAG,EAAE;gBAAE,OAAO;gBAAW,QAAQ;YAAW,IAAI;QAG7E,QAAQ;QACR,MAAM;IACR;IAEA,qBACE,6LAAC,qIAAA,CAAA,SAAM;QAAC,MAAM;QAAM,cAAc;kBAChC,cAAA,6LAAC,qIAAA,CAAA,gBAAa;;8BACZ,6LAAC,qIAAA,CAAA,eAAY;8BACX,cAAA,6LAAC,qIAAA,CAAA,cAAW;wBAAC,WAAU;;0CACrB,6LAAC,8MAAA,CAAA,OAAI;gCAAC,WAAU;;;;;;4BAA+C;;;;;;;;;;;;8BAInE,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;;8CACC,6LAAC;oCAAK,WAAU;8CAAiC;;;;;;8CACjD,6LAAC,oIAAA,CAAA,QAAK;oCACJ,OAAO;oCACP,UAAU,CAAC,IAAM,aAAa,EAAE,MAAM,CAAC,KAAK;oCAC5C,WAAU;oCACV,UAAU;;;;;;;;;;;;sCAGd,6LAAC;;8CACC,6LAAC;oCAAK,WAAU;8CAAiC;;;;;;8CACjD,6LAAC;oCACC,WAAU;oCACV,OAAO;oCACP,UAAU,CAAC,IAAM,cAAc,EAAE,MAAM,CAAC,KAAK;oCAC7C,UAAU;;sDAEV,6LAAC;sDAAO;;;;;;sDACR,6LAAC;sDAAO;;;;;;;;;;;;;;;;;;sCAGZ,6LAAC,qIAAA,CAAA,cAAW;4BAAC,OAAO;sCAClB,cAAA,6LAAC,qIAAA,CAAA,SAAM;gCACL,SAAS;gCACT,UAAU;gCACV,WAAU;0CACX;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQb;GA3DM;KAAA;uCA6DS","debugId":null}},
    {"offset": {"line": 572, "column": 0}, "map": {"version":3,"sources":["file:///C:/Dev%20Directory/Blueprints/blueprintfro-v1/src/modules/Tasks/sub-task/SubtaskList.jsx"],"sourcesContent":["import { useState } from 'react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Progress } from '@/components/ui/progress';\r\nimport { Tooltip, TooltipContent, TooltipTrigger } from '@/components/ui/tooltip';\r\nimport {\r\n  CheckCircle2,\r\n  Edit,\r\n  Eye,\r\n  Plus,\r\n  XCircle,\r\n  Trash2,\r\n  ChevronLeft,\r\n  ChevronRight,\r\n  Lock,\r\n  ListTodo,\r\n} from 'lucide-react';\r\nimport CreateSubtaskModal from '@/modules/Tasks/sub-task/CreateSubTaskModal';\r\nimport EditSubtaskModal from '@/modules/Tasks/sub-task/EditSubTaskModal';\r\nimport DeleteSubtaskModal from '@/modules/Tasks/sub-task/DeleteSubTaskModal';\r\n\r\nconst SubtaskList = ({ subtasks, setSubtasks, isTaskClosed }) => {\r\n  // Pagination state\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const subtasksPerPage = 5;\r\n  const totalPages = Math.ceil(subtasks.length / subtasksPerPage);\r\n  const indexOfLastSubtask = currentPage * subtasksPerPage;\r\n  const indexOfFirstSubtask = indexOfLastSubtask - subtasksPerPage;\r\n  const currentSubtasks = subtasks.slice(indexOfFirstSubtask, indexOfLastSubtask);\r\n\r\n  // Modal states\r\n  const [openView, setOpenView] = useState(true); // Open by default for demo\r\n  const [openEdit, setOpenEdit] = useState(true); // Open by default for demo\r\n  const [openAdd, setOpenAdd] = useState(true); // Open by default for demo\r\n  const [openDelete, setOpenDelete] = useState(true); // Open by default for demo\r\n  const [selectedSubtask, setSelectedSubtask] = useState(null);\r\n\r\n  // Calculate progress\r\n  const closedSubtasks = subtasks.filter((st) => st.status === 'Closed').length;\r\n  const progress = subtasks.length > 0 ? (closedSubtasks / subtasks.length) * 100 : 0;\r\n\r\n  // Handlers\r\n  const handleToggleStatus = (id) => {\r\n    if (isTaskClosed) return;\r\n    setSubtasks(\r\n      subtasks.map((st) =>\r\n        st.id === id ? { ...st, status: st.status === 'Open' ? 'Closed' : 'Open' } : st\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleView = (subtask) => {\r\n    setSelectedSubtask(subtask);\r\n    setOpenView(true);\r\n  };\r\n\r\n  const handleEdit = (subtask) => {\r\n    if (isTaskClosed) return;\r\n    setSelectedSubtask(subtask);\r\n    setOpenEdit(true);\r\n  };\r\n\r\n  const handleDelete = (subtask) => {\r\n    if (isTaskClosed) return;\r\n    setSelectedSubtask(subtask);\r\n    setOpenDelete(true);\r\n  };\r\n\r\n  const handlePrevPage = () => {\r\n    if (currentPage > 1) setCurrentPage(currentPage - 1);\r\n  };\r\n\r\n  const handleNextPage = () => {\r\n    if (currentPage < totalPages) setCurrentPage(currentPage + 1);\r\n  };\r\n\r\n  const getStatusVariant = (status) => {\r\n    return status === 'Closed' ? 'success' : 'secondary';\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      <div className=\"flex justify-between items-center mb-2\">\r\n        <h3 className=\"text-base sm:text-lg font-semibold flex items-center\">\r\n          <ListTodo className=\"mr-2 h-4 w-4 sm:h-5 sm:w-5 text-green-500\" />\r\n          Subtasks\r\n        </h3>\r\n        {!isTaskClosed ? (\r\n          <Button\r\n            className=\"bg-blue-600 hover:bg-blue-700 text-xs sm:text-sm px-2 sm:px-3 h-8 sm:h-9\"\r\n            onClick={() => setOpenAdd(true)}\r\n            disabled={isTaskClosed}\r\n          >\r\n            <Plus className=\"mr-1 h-3 w-3 sm:h-4 sm:w-4\" /> Add\r\n          </Button>\r\n        ) : (\r\n          <Badge variant=\"secondary\" className=\"flex items-center text-xs sm:text-sm\">\r\n            <Lock className=\"mr-1 h-3 w-3 sm:h-4 sm:w-4\" /> Read-Only\r\n          </Badge>\r\n        )}\r\n      </div>\r\n      <div className=\"mb-3\">\r\n        <div className=\"flex justify-between items-center mb-2\">\r\n          <span className=\"font-medium text-xs sm:text-sm\">\r\n            Progress: {progress.toFixed(0)}%\r\n          </span>\r\n          <Badge variant={progress === 100 ? 'success' : 'default'} className=\"text-xs sm:text-sm\">\r\n            {closedSubtasks}/{subtasks.length} Completed\r\n          </Badge>\r\n        </div>\r\n        <Progress value={progress} className=\"h-2 bg-gray-200\" />\r\n      </div>\r\n      <ul className=\"space-y-2\">\r\n        {currentSubtasks.map((st) => (\r\n          <li\r\n            key={st.id}\r\n            className=\"flex flex-col sm:flex-row items-start sm:items-center justify-between gap-2 p-2 sm:p-3 border rounded-lg bg-muted/50 transition-all hover:shadow-md\"\r\n          >\r\n            <div className=\"flex-1 flex items-center\">\r\n              <CheckCircle2\r\n                className={`mr-2 h-3 w-3 sm:h-4 sm:w-4 ${st.status === 'Closed' ? 'text-green-500' : 'text-gray-400'}`}\r\n              />\r\n              <span className=\"font-medium text-xs sm:text-sm\">{st.title}</span>\r\n            </div>\r\n            <div className=\"flex items-center gap-1 sm:gap-2\">\r\n              <Badge variant={getStatusVariant(st.status)} className=\"text-xs sm:text-sm\">\r\n                {st.status}\r\n              </Badge>\r\n              <Tooltip>\r\n                <TooltipTrigger asChild>\r\n                  <Button variant=\"ghost\" size=\"icon\" onClick={() => handleView(st)} className=\"h-7 w-7 sm:h-8 sm:w-8\">\r\n                    <Eye className=\"h-3 w-3 sm:h-4 sm:w-4 text-blue-500\" />\r\n                  </Button>\r\n                </TooltipTrigger>\r\n                <TooltipContent>View</TooltipContent>\r\n              </Tooltip>\r\n              {!isTaskClosed && (\r\n                <>\r\n                  <Tooltip>\r\n                    <TooltipTrigger asChild>\r\n                      <Button\r\n                        variant=\"ghost\"\r\n                        size=\"icon\"\r\n                        onClick={() => handleToggleStatus(st.id)}\r\n                        disabled={isTaskClosed}\r\n                        className=\"h-7 w-7 sm:h-8 sm:w-8\"\r\n                      >\r\n                        <XCircle className=\"h-3 w-3 sm:h-4 sm:w-4 text-gray-500\" />\r\n                      </Button>\r\n                    </TooltipTrigger>\r\n                    <TooltipContent>Toggle Status</TooltipContent>\r\n                  </Tooltip>\r\n                  <Tooltip>\r\n                    <TooltipTrigger asChild>\r\n                      <Button\r\n                        variant=\"ghost\"\r\n                        size=\"icon\"\r\n                        onClick={() => handleEdit(st)}\r\n                        disabled={isTaskClosed}\r\n                        className=\"h-7 w-7 sm:h-8 sm:w-8\"\r\n                      >\r\n                        <Edit className=\"h-3 w-3 sm:h-4 sm:w-4 text-yellow-500\" />\r\n                      </Button>\r\n                    </TooltipTrigger>\r\n                    <TooltipContent>Edit</TooltipContent>\r\n                  </Tooltip>\r\n                  <Tooltip>\r\n                    <TooltipTrigger asChild>\r\n                      <Button\r\n                        variant=\"ghost\"\r\n                        size=\"icon\"\r\n                        onClick={() => handleDelete(st)}\r\n                        disabled={isTaskClosed}\r\n                        className=\"h-7 w-7 sm:h-8 sm:w-8\"\r\n                      >\r\n                        <Trash2 className=\"h-3 w-3 sm:h-4 sm:w-4 text-red-500\" />\r\n                      </Button>\r\n                    </TooltipTrigger>\r\n                    <TooltipContent>Delete</TooltipContent>\r\n                  </Tooltip>\r\n                </>\r\n              )}\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      {totalPages > 1 && (\r\n        <div className=\"flex justify-center items-center gap-3 mt-3\">\r\n          <Button\r\n            variant=\"ghost\"\r\n            size=\"icon\"\r\n            onClick={handlePrevPage}\r\n            disabled={currentPage === 1}\r\n            className=\"h-8 w-8 sm:h-9 sm:w-9\"\r\n          >\r\n            <ChevronLeft className=\"h-4 w-4 sm:h-5 sm:w-5\" />\r\n          </Button>\r\n          <span className=\"text-xs sm:text-sm font-medium\">\r\n            Page {currentPage} of {totalPages}\r\n          </span>\r\n          <Button\r\n            variant=\"ghost\"\r\n            size=\"icon\"\r\n            onClick={handleNextPage}\r\n            disabled={currentPage === totalPages}\r\n            className=\"h-8 w-8 sm:h-9 sm:w-9\"\r\n          >\r\n            <ChevronRight className=\"h-4 w-4 sm:h-5 sm:w-5\" />\r\n          </Button>\r\n        </div>\r\n      )}\r\n\r\n      {/* View Subtask Modal */}\r\n      {selectedSubtask && (\r\n        <Dialog open={openView} onOpenChange={setOpenView}>\r\n          <DialogContent>\r\n            <DialogHeader>\r\n              <DialogTitle className=\"flex items-center\">\r\n                <Eye className=\"mr-2 h-4 w-4 sm:h-5 sm:w-5 text-blue-500\" />\r\n                View Subtask\r\n              </DialogTitle>\r\n            </DialogHeader>\r\n            <div className=\"space-y-3\">\r\n              <div>\r\n                <span className=\"font-medium text-xs sm:text-sm\">Title:</span>\r\n                <p className=\"mt-1 text-xs sm:text-sm\">{selectedSubtask.title}</p>\r\n              </div>\r\n              <div>\r\n                <span className=\"font-medium text-xs sm:text-sm\">Status:</span>\r\n                <Badge variant={getStatusVariant(selectedSubtask.status)} className=\"ml-2 text-xs sm:text-sm\">\r\n                  {selectedSubtask.status}\r\n                </Badge>\r\n              </div>\r\n            </div>\r\n          </DialogContent>\r\n        </Dialog>\r\n      )}\r\n\r\n      {/* Create, Edit, Delete Modals */}\r\n      <CreateSubtaskModal\r\n        open={openAdd}\r\n        setOpen={setOpenAdd}\r\n        subtasks={subtasks}\r\n        setSubtasks={setSubtasks}\r\n        isTaskClosed={isTaskClosed}\r\n        setCurrentPage={setCurrentPage}\r\n      />\r\n      {selectedSubtask && (\r\n        <EditSubtaskModal\r\n          open={openEdit}\r\n          setOpen={setOpenEdit}\r\n          subtask={selectedSubtask}\r\n          subtasks={subtasks}\r\n          setSubtasks={setSubtasks}\r\n          isTaskClosed={isTaskClosed}\r\n        />\r\n      )}\r\n      {selectedSubtask && (\r\n        <DeleteSubtaskModal\r\n          open={openDelete}\r\n          setOpen={setOpenDelete}\r\n          subtask={selectedSubtask}\r\n          subtasks={subtasks}\r\n          setSubtasks={setSubtasks}\r\n          isTaskClosed={isTaskClosed}\r\n          currentPage={currentPage}\r\n          setCurrentPage={setCurrentPage}\r\n          currentSubtasks={currentSubtasks}\r\n        />\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SubtaskList;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1210, "column": 0}, "map": {"version":3,"sources":["file:///C:/Dev%20Directory/Blueprints/blueprintfro-v1/src/modules/Tasks/sub-task/CloseTaskModal.jsx"],"sourcesContent":["import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogClose } from '@/components/ui/dialog';\r\nimport { Button } from '@/components/ui/button';\r\nimport { XCircle } from 'lucide-react';\r\n\r\nconst CloseTaskModal = ({ open, setOpen, handleCloseTask, isTaskClosed, allClosed }) => {\r\n  return (\r\n    <Dialog open={open} onOpenChange={setOpen}>\r\n      <DialogContent>\r\n        <DialogHeader>\r\n          <DialogTitle className=\"flex items-center\">\r\n            <XCircle className=\"mr-2 h-4 w-4 sm:h-5 sm:w-5 text-green-500\" />\r\n            Close Task\r\n          </DialogTitle>\r\n        </DialogHeader>\r\n        <p className=\"text-xs sm:text-sm\">Are you sure you want to mark this task as closed?</p>\r\n        <div className=\"flex justify-end gap-2 mt-3\">\r\n          <DialogClose asChild>\r\n            <Button variant=\"outline\" className=\"text-xs sm:text-sm h-8 sm:h-9\">Cancel</Button>\r\n          </DialogClose>\r\n          <Button\r\n            onClick={handleCloseTask}\r\n            disabled={isTaskClosed || !allClosed}\r\n            className=\"bg-green-600 hover:bg-green-700 text-xs sm:text-sm h-8 sm:h-9\"\r\n          >\r\n            Confirm\r\n          </Button>\r\n        </div>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default CloseTaskModal;"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;AAEA,MAAM,iBAAiB,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,eAAe,EAAE,YAAY,EAAE,SAAS,EAAE;IACjF,qBACE,6LAAC,qIAAA,CAAA,SAAM;QAAC,MAAM;QAAM,cAAc;kBAChC,cAAA,6LAAC,qIAAA,CAAA,gBAAa;;8BACZ,6LAAC,qIAAA,CAAA,eAAY;8BACX,cAAA,6LAAC,qIAAA,CAAA,cAAW;wBAAC,WAAU;;0CACrB,6LAAC,+MAAA,CAAA,UAAO;gCAAC,WAAU;;;;;;4BAA8C;;;;;;;;;;;;8BAIrE,6LAAC;oBAAE,WAAU;8BAAqB;;;;;;8BAClC,6LAAC;oBAAI,WAAU;;sCACb,6LAAC,qIAAA,CAAA,cAAW;4BAAC,OAAO;sCAClB,cAAA,6LAAC,qIAAA,CAAA,SAAM;gCAAC,SAAQ;gCAAU,WAAU;0CAAgC;;;;;;;;;;;sCAEtE,6LAAC,qIAAA,CAAA,SAAM;4BACL,SAAS;4BACT,UAAU,gBAAgB,CAAC;4BAC3B,WAAU;sCACX;;;;;;;;;;;;;;;;;;;;;;;AAOX;KA1BM;uCA4BS","debugId":null}},
    {"offset": {"line": 1318, "column": 0}, "map": {"version":3,"sources":["file:///C:/Dev%20Directory/Blueprints/blueprintfro-v1/src/components/ui/textarea.jsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Textarea({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    <textarea\r\n      data-slot=\"textarea\"\r\n      className={cn(\r\n        \"border-input placeholder:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 flex field-sizing-content min-h-16 w-full rounded-md border bg-transparent px-3 py-2 text-base shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\r\n        className\r\n      )}\r\n      {...props} />\r\n  );\r\n}\r\n\r\nexport { Textarea }\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,ucACA;QAED,GAAG,KAAK;;;;;;AAEf;KAbS","debugId":null}},
    {"offset": {"line": 1351, "column": 0}, "map": {"version":3,"sources":["file:///C:/Dev%20Directory/Blueprints/blueprintfro-v1/src/modules/Tasks/sub-task/ReportBugModal.jsx"],"sourcesContent":["import { useState } from 'react';\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogClose } from '@/components/ui/dialog';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Textarea } from '@/components/ui/textarea';\r\nimport { Bug } from 'lucide-react';\r\n\r\nconst ReportBugModal = ({ isTaskClosed }) => {\r\n  const [open, setOpen] = useState(true); // Open by default for demo\r\n  const [bugTitle, setBugTitle] = useState('');\r\n  const [bugDescription, setBugDescription] = useState('');\r\n\r\n  const handleReportBug = () => {\r\n    if (isTaskClosed || !bugTitle.trim() || !bugDescription.trim()) return;\r\n    alert(`Bug reported: ${bugTitle} - ${bugDescription}`);\r\n    setBugTitle('');\r\n    setBugDescription('');\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onOpenChange={setOpen}>\r\n      <DialogContent>\r\n        <DialogHeader>\r\n          <DialogTitle className=\"flex items-center\">\r\n            <Bug className=\"mr-2 h-4 w-4 sm:h-5 sm:w-5 text-red-500\" />\r\n            Report Bug\r\n          </DialogTitle>\r\n        </DialogHeader>\r\n        <div className=\"space-y-3\">\r\n          <div>\r\n            <span className=\"font-medium text-xs sm:text-sm\">Bug Title:</span>\r\n            <Input\r\n              value={bugTitle}\r\n              onChange={(e) => setBugTitle(e.target.value)}\r\n              className=\"mt-1 text-xs sm:text-sm\"\r\n              disabled={isTaskClosed}\r\n              placeholder=\"Enter bug title\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <span className=\"font-medium text-xs sm:text-sm\">Description:</span>\r\n            <Textarea\r\n              value={bugDescription}\r\n              onChange={(e) => setBugDescription(e.target.value)}\r\n              className=\"mt-1 text-xs sm:text-sm\"\r\n              disabled={isTaskClosed}\r\n              placeholder=\"Describe the bug\"\r\n            />\r\n          </div>\r\n          <DialogClose asChild>\r\n            <Button\r\n              onClick={handleReportBug}\r\n              disabled={isTaskClosed || !bugTitle.trim() || !bugDescription.trim()}\r\n              className=\"bg-red-600 hover:bg-red-700 text-xs sm:text-sm h-8 sm:h-9\"\r\n            >\r\n              Submit Bug Report\r\n            </Button>\r\n          </DialogClose>\r\n        </div>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ReportBugModal;"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAEA,MAAM,iBAAiB,CAAC,EAAE,YAAY,EAAE;;IACtC,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,OAAO,2BAA2B;IACnE,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAErD,MAAM,kBAAkB;QACtB,IAAI,gBAAgB,CAAC,SAAS,IAAI,MAAM,CAAC,eAAe,IAAI,IAAI;QAChE,MAAM,CAAC,cAAc,EAAE,SAAS,GAAG,EAAE,gBAAgB;QACrD,YAAY;QACZ,kBAAkB;QAClB,QAAQ;IACV;IAEA,qBACE,6LAAC,qIAAA,CAAA,SAAM;QAAC,MAAM;QAAM,cAAc;kBAChC,cAAA,6LAAC,qIAAA,CAAA,gBAAa;;8BACZ,6LAAC,qIAAA,CAAA,eAAY;8BACX,cAAA,6LAAC,qIAAA,CAAA,cAAW;wBAAC,WAAU;;0CACrB,6LAAC,mMAAA,CAAA,MAAG;gCAAC,WAAU;;;;;;4BAA4C;;;;;;;;;;;;8BAI/D,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;;8CACC,6LAAC;oCAAK,WAAU;8CAAiC;;;;;;8CACjD,6LAAC,oIAAA,CAAA,QAAK;oCACJ,OAAO;oCACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;oCAC3C,WAAU;oCACV,UAAU;oCACV,aAAY;;;;;;;;;;;;sCAGhB,6LAAC;;8CACC,6LAAC;oCAAK,WAAU;8CAAiC;;;;;;8CACjD,6LAAC,uIAAA,CAAA,WAAQ;oCACP,OAAO;oCACP,UAAU,CAAC,IAAM,kBAAkB,EAAE,MAAM,CAAC,KAAK;oCACjD,WAAU;oCACV,UAAU;oCACV,aAAY;;;;;;;;;;;;sCAGhB,6LAAC,qIAAA,CAAA,cAAW;4BAAC,OAAO;sCAClB,cAAA,6LAAC,qIAAA,CAAA,SAAM;gCACL,SAAS;gCACT,UAAU,gBAAgB,CAAC,SAAS,IAAI,MAAM,CAAC,eAAe,IAAI;gCAClE,WAAU;0CACX;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQb;GAxDM;KAAA;uCA0DS","debugId":null}},
    {"offset": {"line": 1515, "column": 0}, "map": {"version":3,"sources":["file:///C:/Dev%20Directory/Blueprints/blueprintfro-v1/src/modules/Tasks/task/ViewTask.jsx"],"sourcesContent":["\r\n\r\n\r\n\"use client\";\r\n\r\nimport { useState } from 'react';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  CardTitle,\r\n} from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Separator } from '@/components/ui/separator';\r\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from '@/components/ui/tooltip';\r\nimport {\r\n  User,\r\n  Mail,\r\n  Flag,\r\n  Folder,\r\n  Hash,\r\n  ListTodo,\r\n  History,\r\n  AlertCircle,\r\n  ClipboardList,\r\n  Info as InfoIcon,\r\n} from 'lucide-react';\r\nimport SubtaskList from '@/modules/Tasks/sub-task/SubtaskList';\r\nimport CloseTaskModal from '@/modules/Tasks/sub-task/CloseTaskModal';\r\nimport ReportBugModal from '@/modules/Tasks/sub-task/ReportBugModal';\r\n\r\nconst TaskView = () => {\r\n  // Task data\r\n  const [task, setTask] = useState({\r\n    id: 'TASK-123',\r\n    title: 'Implement Feature X',\r\n    description: 'Develop and integrate the new feature into the main application.',\r\n    priority: 'High',\r\n    project: 'Project Alpha',\r\n    status: 'Open',\r\n  });\r\n\r\n  // Owner data\r\n  const [owner] = useState({\r\n    name: 'John Doe',\r\n    role: 'Developer',\r\n    email: 'john.doe@example.com',\r\n  });\r\n\r\n  // Review history\r\n  const [history] = useState([\r\n    { date: '2025-09-01', message: 'Initial review: Approved' },\r\n    { date: '2025-09-05', message: 'Progress update: 30% complete' },\r\n    { date: '2025-09-10', message: 'Bug found and reported' },\r\n  ]);\r\n\r\n  // Subtask data\r\n  const [subtasks, setSubtasks] = useState([\r\n    { id: 1, title: 'Research requirements', status: 'Closed' },\r\n    { id: 2, title: 'Design UI', status: 'Open' },\r\n    { id: 3, title: 'Implement backend', status: 'Open' },\r\n    { id: 4, title: 'Test integration', status: 'Open' },\r\n    { id: 5, title: 'Deploy to staging', status: 'Open' },\r\n    { id: 6, title: 'Review code', status: 'Closed' },\r\n    { id: 7, title: 'Fix bugs', status: 'Open' },\r\n    { id: 8, title: 'Optimize performance', status: 'Open' },\r\n    { id: 9, title: 'Document changes', status: 'Open' },\r\n    { id: 10, title: 'Final testing', status: 'Open' },\r\n  ]);\r\n\r\n  // Modal states\r\n  const [openCloseTask, setOpenCloseTask] = useState(true); // Open by default for demo\r\n  const isTaskClosed = task.status === 'Closed';\r\n  const closedSubtasks = subtasks.filter((st) => st.status === 'Closed').length;\r\n  const allClosed = closedSubtasks === subtasks.length;\r\n\r\n  // Handlers\r\n  const handleCloseTask = () => {\r\n    if (isTaskClosed || !allClosed) return;\r\n    setTask({ ...task, status: 'Closed' });\r\n    setOpenCloseTask(false);\r\n    alert('Task closed');\r\n  };\r\n\r\n  const getPriorityVariant = (priority) => {\r\n    switch (priority) {\r\n      case 'High':\r\n        return 'destructive';\r\n      case 'Medium':\r\n        return 'default';\r\n      case 'Low':\r\n        return 'secondary';\r\n      default:\r\n        return 'outline';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TooltipProvider>\r\n      <div className=\"p-3 sm:p-4\">\r\n        <Card className=\"shadow-lg\">\r\n          <CardHeader>\r\n            <CardTitle className=\"flex items-center justify-between text-lg sm:text-xl\">\r\n              <div className=\"flex items-center\">\r\n                <ClipboardList className=\"mr-2 h-5 w-5 text-primary\" />\r\n                {task.title}\r\n              </div>\r\n              <Badge variant={isTaskClosed ? 'destructive' : 'default'} className=\"ml-2 text-xs sm:text-sm\">\r\n                {task.status}\r\n              </Badge>\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"grid grid-cols-1 lg:grid-cols-[4fr_1fr] gap-3 sm:gap-4 lg:gap-6\">\r\n              {/* Left Column (80% - Task Details and Subtasks) */}\r\n              <div className=\"space-y-4\">\r\n                {/* Task Details Section */}\r\n                <section>\r\n                  <h3 className=\"text-base sm:text-lg font-semibold mb-2 flex items-center\">\r\n                    <InfoIcon className=\"mr-2 h-4 w-4 sm:h-5 sm:w-5 text-blue-500\" />\r\n                    Task Details\r\n                  </h3>\r\n                  <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3\">\r\n                    <div className=\"flex items-center\">\r\n                      <Hash className=\"mr-2 h-3 w-3 sm:h-4 sm:w-4 text-gray-500\" />\r\n                      <span className=\"font-medium text-xs sm:text-sm\">{task.id}</span>\r\n                    </div>\r\n                    <div className=\"flex items-center\">\r\n                      <Folder className=\"mr-2 h-3 w-3 sm:h-4 sm:w-4 text-gray-500\" />\r\n                      <span className=\"font-medium text-xs sm:text-sm\">{task.project}</span>\r\n                    </div>\r\n                    <div className=\"flex items-start sm:col-span-2\">\r\n                      <AlertCircle className=\"mr-2 h-3 w-3 sm:h-4 sm:w-4 text-gray-500 mt-1\" />\r\n                      <span className=\"font-medium text-xs sm:text-sm\">{task.description}</span>\r\n                    </div>\r\n                    <div className=\"flex items-center\">\r\n                      <Flag className=\"mr-2 h-3 w-3 sm:h-4 sm:w-4 text-gray-500\" />\r\n                      <Badge variant={getPriorityVariant(task.priority)} className=\"text-xs sm:text-sm\">\r\n                        {task.priority}\r\n                      </Badge>\r\n                    </div>\r\n                  </div>\r\n                </section>\r\n\r\n                <Separator className=\"my-3\" />\r\n\r\n                {/* Subtask List Component */}\r\n                <SubtaskList\r\n                  subtasks={subtasks}\r\n                  setSubtasks={setSubtasks}\r\n                  isTaskClosed={isTaskClosed}\r\n                />\r\n              </div>\r\n\r\n              {/* Right Column (20% - Owner Details, Actions, History) */}\r\n              <div className=\"space-y-4\">\r\n                <section>\r\n                  <h3 className=\"text-base sm:text-lg font-semibold mb-2 flex items-center\">\r\n                    <User className=\"mr-2 h-4 w-4 sm:h-5 sm:w-5 text-purple-500\" />\r\n                    Task Management\r\n                  </h3>\r\n                  <div className=\"grid grid-cols-1 gap-3\">\r\n                    {/* Owner Details */}\r\n                    <div className=\"space-y-2\">\r\n                      <h4 className=\"text-xs sm:text-sm font-semibold text-gray-700\">Owner Details</h4>\r\n                      <div className=\"flex items-center\">\r\n                        <User className=\"mr-2 h-3 w-3 sm:h-4 sm:w-4 text-gray-500\" />\r\n                        <span className=\"font-medium text-xs sm:text-sm\">{owner.name}</span>\r\n                      </div>\r\n                      <div className=\"flex items-center\">\r\n                        <AlertCircle className=\"mr-2 h-3 w-3 sm:h-4 sm:w-4 text-gray-500\" />\r\n                        <span className=\"font-medium text-xs sm:text-sm\">{owner.role}</span>\r\n                      </div>\r\n                      <div className=\"flex items-center\">\r\n                        <Mail className=\"mr-2 h-3 w-3 sm:h-4 sm:w-4 text-gray-500\" />\r\n                        <span className=\"font-medium text-xs sm:text-sm\">{owner.email}</span>\r\n                      </div>\r\n                    </div>\r\n                    {/* Actions */}\r\n                    <div className=\"space-y-2\">\r\n                      <h4 className=\"text-xs sm:text-sm font-semibold text-gray-700\">Actions</h4>\r\n                      <div className=\"flex flex-col gap-2\">\r\n                        <Tooltip>\r\n                          <TooltipTrigger asChild>\r\n                            <button\r\n                              className={`w-full text-xs sm:text-sm h-8 sm:h-9 px-3 rounded-md flex items-center justify-center bg-green-600 text-white hover:bg-green-700 ${isTaskClosed || !allClosed ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n                              onClick={() => setOpenCloseTask(true)}\r\n                              disabled={isTaskClosed || !allClosed}\r\n                            >\r\n                              <ListTodo className=\"mr-1 h-3 w-3 sm:h-4 sm:w-4\" /> Mark as Closed\r\n                            </button>\r\n                          </TooltipTrigger>\r\n                          <TooltipContent>\r\n                            {allClosed && !isTaskClosed ? 'Close the task' : isTaskClosed ? 'Task is already closed' : 'All subtasks must be closed first'}\r\n                          </TooltipContent>\r\n                        </Tooltip>\r\n                        <ReportBugModal isTaskClosed={isTaskClosed} />\r\n                      </div>\r\n                    </div>\r\n                    {/* Task Review History */}\r\n                    <div className=\"space-y-2\">\r\n                      <h4 className=\"text-xs sm:text-sm font-semibold text-gray-700\">Review History</h4>\r\n                      <ul className=\"space-y-2 max-h-60 sm:max-h-72 overflow-y-auto\">\r\n                        {history.map((item, index) => (\r\n                          <li\r\n                            key={index}\r\n                            className=\"p-2 sm:p-3 border rounded-lg bg-muted/50 transition-all hover:shadow-md\"\r\n                          >\r\n                            <div className=\"flex items-center\">\r\n                              <History className=\"mr-2 h-3 w-3 sm:h-4 sm:w-4 text-gray-500\" />\r\n                              <span className=\"font-medium text-xs sm:text-sm\">{item.date}</span>\r\n                            </div>\r\n                            <p className=\"text-xs sm:text-sm mt-1\">{item.message}</p>\r\n                          </li>\r\n                        ))}\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                </section>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Close Task Confirmation Modal */}\r\n        <CloseTaskModal\r\n          open={openCloseTask}\r\n          setOpen={setOpenCloseTask}\r\n          handleCloseTask={handleCloseTask}\r\n          isTaskClosed={isTaskClosed}\r\n          allClosed={allClosed}\r\n        />\r\n      </div>\r\n    </TooltipProvider>\r\n  );\r\n};\r\n\r\nexport default TaskView;"],"names":[],"mappings":"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","debugId":null}}]
}
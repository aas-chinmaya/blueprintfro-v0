{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["file:///C:/Dev%20Directory/Blueprints/blueprintfro-v1/src/modules/Tasks/sub-task/SubTaskList.jsx"],"sourcesContent":["// import { useState } from 'react';\r\n// import { Button } from '@/components/ui/button';\r\n// import { Badge } from '@/components/ui/badge';\r\n// import { Progress } from '@/components/ui/progress';\r\n// import { Tooltip, TooltipContent, TooltipTrigger } from '@/components/ui/tooltip';\r\n// import {\r\n//   CheckCircle2,\r\n//   Edit,\r\n//   Eye,\r\n//   Plus,\r\n//   XCircle,\r\n//   Trash2,\r\n//   ChevronLeft,\r\n//   ChevronRight,\r\n//   Lock,\r\n//   ListTodo,\r\n// } from 'lucide-react';\r\n// import CreateSubtaskModal from '@/modules/Tasks/sub-task/CreateSubTaskModal';\r\n// import EditSubtaskModal from '@/modules/Tasks/sub-task/EditSubTaskModal';\r\n// import DeleteSubtaskModal from '@/modules/Tasks/sub-task/DeleteSubTaskModal';\r\n// import { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog';\r\n\r\n// const SubtaskList = ({   isTaskClosed }) => {\r\n//       // Subtask data\r\n//   const [subtasks, setSubtasks] = useState([\r\n//     { id: 1, title: 'Research requirements', status: 'Closed' },\r\n//     { id: 2, title: 'Design UI', status: 'Open' },\r\n//     { id: 3, title: 'Implement backend', status: 'Open' },\r\n//     { id: 4, title: 'Test integration', status: 'Open' },\r\n//     { id: 5, title: 'Deploy to staging', status: 'Open' },\r\n//     { id: 6, title: 'Review code', status: 'Closed' },\r\n//     { id: 7, title: 'Fix bugs', status: 'Open' },\r\n//     { id: 8, title: 'Optimize performance', status: 'Open' },\r\n//     { id: 9, title: 'Document changes', status: 'Open' },\r\n//     { id: 10, title: 'Final testing', status: 'Open' },\r\n//   ]);\r\n//   // Pagination state\r\n//   const [currentPage, setCurrentPage] = useState(1);\r\n//   const subtasksPerPage = 5;\r\n//   const totalPages = Math.ceil(subtasks.length / subtasksPerPage);\r\n//   const indexOfLastSubtask = currentPage * subtasksPerPage;\r\n//   const indexOfFirstSubtask = indexOfLastSubtask - subtasksPerPage;\r\n//   const currentSubtasks = subtasks.slice(indexOfFirstSubtask, indexOfLastSubtask);\r\n\r\n//   // Modal states\r\n//   const [openView, setOpenView] = useState(true); // Open by default for demo\r\n//   const [openEdit, setOpenEdit] = useState(true); // Open by default for demo\r\n//   const [openAdd, setOpenAdd] = useState(true); // Open by default for demo\r\n//   const [openDelete, setOpenDelete] = useState(true); // Open by default for demo\r\n//   const [selectedSubtask, setSelectedSubtask] = useState(null);\r\n\r\n//   // Calculate progress\r\n//   const closedSubtasks = subtasks.filter((st) => st.status === 'Closed').length;\r\n//   const progress = subtasks.length > 0 ? (closedSubtasks / subtasks.length) * 100 : 0;\r\n\r\n//   // Handlers\r\n//   const handleToggleStatus = (id) => {\r\n//     if (isTaskClosed) return;\r\n//     setSubtasks(\r\n//       subtasks.map((st) =>\r\n//         st.id === id ? { ...st, status: st.status === 'Open' ? 'Closed' : 'Open' } : st\r\n//       )\r\n//     );\r\n//   };\r\n\r\n//   const handleView = (subtask) => {\r\n//     setSelectedSubtask(subtask);\r\n//     setOpenView(true);\r\n//   };\r\n\r\n//   const handleEdit = (subtask) => {\r\n//     if (isTaskClosed) return;\r\n//     setSelectedSubtask(subtask);\r\n//     setOpenEdit(true);\r\n//   };\r\n\r\n//   const handleDelete = (subtask) => {\r\n//     if (isTaskClosed) return;\r\n//     setSelectedSubtask(subtask);\r\n//     setOpenDelete(true);\r\n//   };\r\n\r\n//   const handlePrevPage = () => {\r\n//     if (currentPage > 1) setCurrentPage(currentPage - 1);\r\n//   };\r\n\r\n//   const handleNextPage = () => {\r\n//     if (currentPage < totalPages) setCurrentPage(currentPage + 1);\r\n//   };\r\n\r\n//   const getStatusVariant = (status) => {\r\n//     return status === 'Closed' ? 'success' : 'secondary';\r\n//   };\r\n\r\n//   return (\r\n//     <section>\r\n//       <div className=\"flex justify-between items-center mb-2\">\r\n//         <h3 className=\"text-base sm:text-lg font-semibold flex items-center\">\r\n//           <ListTodo className=\"mr-2 h-4 w-4 sm:h-5 sm:w-5 text-green-500\" />\r\n//           Subtasks\r\n//         </h3>\r\n//         {!isTaskClosed ? (\r\n//           <Button\r\n//             className=\"bg-blue-600 hover:bg-blue-700 text-xs sm:text-sm px-2 sm:px-3 h-8 sm:h-9\"\r\n//             onClick={() => setOpenAdd(true)}\r\n//             disabled={isTaskClosed}\r\n//           >\r\n//             <Plus className=\"mr-1 h-3 w-3 sm:h-4 sm:w-4\" /> Add\r\n//           </Button>\r\n//         ) : (\r\n//           <Badge variant=\"secondary\" className=\"flex items-center text-xs sm:text-sm\">\r\n//             <Lock className=\"mr-1 h-3 w-3 sm:h-4 sm:w-4\" /> Read-Only\r\n//           </Badge>\r\n//         )}\r\n//       </div>\r\n//       <div className=\"mb-3\">\r\n//         <div className=\"flex justify-between items-center mb-2\">\r\n//           <span className=\"font-medium text-xs sm:text-sm\">\r\n//             Progress: {progress.toFixed(0)}%\r\n//           </span>\r\n//           <Badge variant={progress === 100 ? 'success' : 'default'} className=\"text-xs sm:text-sm\">\r\n//             {closedSubtasks}/{subtasks.length} Completed\r\n//           </Badge>\r\n//         </div>\r\n//         <Progress value={progress} className=\"h-2 bg-gray-200\" />\r\n//       </div>\r\n//       <ul className=\"space-y-2\">\r\n//         {currentSubtasks.map((st) => (\r\n//           <li\r\n//             key={st.id}\r\n//             className=\"flex flex-col sm:flex-row items-start sm:items-center justify-between gap-2 p-2 sm:p-3 border rounded-lg bg-muted/50 transition-all hover:shadow-md\"\r\n//           >\r\n//             <div className=\"flex-1 flex items-center\">\r\n//               <CheckCircle2\r\n//                 className={`mr-2 h-3 w-3 sm:h-4 sm:w-4 ${st.status === 'Closed' ? 'text-green-500' : 'text-gray-400'}`}\r\n//               />\r\n//               <span className=\"font-medium text-xs sm:text-sm\">{st.title}</span>\r\n//             </div>\r\n//             <div className=\"flex items-center gap-1 sm:gap-2\">\r\n//               <Badge variant={getStatusVariant(st.status)} className=\"text-xs sm:text-sm\">\r\n//                 {st.status}\r\n//               </Badge>\r\n//               <Tooltip>\r\n//                 <TooltipTrigger asChild>\r\n//                   <Button variant=\"ghost\" size=\"icon\" onClick={() => handleView(st)} className=\"h-7 w-7 sm:h-8 sm:w-8\">\r\n//                     <Eye className=\"h-3 w-3 sm:h-4 sm:w-4 text-blue-500\" />\r\n//                   </Button>\r\n//                 </TooltipTrigger>\r\n//                 <TooltipContent>View</TooltipContent>\r\n//               </Tooltip>\r\n//               {!isTaskClosed && (\r\n//                 <>\r\n//                   <Tooltip>\r\n//                     <TooltipTrigger asChild>\r\n//                       <Button\r\n//                         variant=\"ghost\"\r\n//                         size=\"icon\"\r\n//                         onClick={() => handleToggleStatus(st.id)}\r\n//                         disabled={isTaskClosed}\r\n//                         className=\"h-7 w-7 sm:h-8 sm:w-8\"\r\n//                       >\r\n//                         <XCircle className=\"h-3 w-3 sm:h-4 sm:w-4 text-gray-500\" />\r\n//                       </Button>\r\n//                     </TooltipTrigger>\r\n//                     <TooltipContent>Toggle Status</TooltipContent>\r\n//                   </Tooltip>\r\n//                   <Tooltip>\r\n//                     <TooltipTrigger asChild>\r\n//                       <Button\r\n//                         variant=\"ghost\"\r\n//                         size=\"icon\"\r\n//                         onClick={() => handleEdit(st)}\r\n//                         disabled={isTaskClosed}\r\n//                         className=\"h-7 w-7 sm:h-8 sm:w-8\"\r\n//                       >\r\n//                         <Edit className=\"h-3 w-3 sm:h-4 sm:w-4 text-yellow-500\" />\r\n//                       </Button>\r\n//                     </TooltipTrigger>\r\n//                     <TooltipContent>Edit</TooltipContent>\r\n//                   </Tooltip>\r\n//                   <Tooltip>\r\n//                     <TooltipTrigger asChild>\r\n//                       <Button\r\n//                         variant=\"ghost\"\r\n//                         size=\"icon\"\r\n//                         onClick={() => handleDelete(st)}\r\n//                         disabled={isTaskClosed}\r\n//                         className=\"h-7 w-7 sm:h-8 sm:w-8\"\r\n//                       >\r\n//                         <Trash2 className=\"h-3 w-3 sm:h-4 sm:w-4 text-red-500\" />\r\n//                       </Button>\r\n//                     </TooltipTrigger>\r\n//                     <TooltipContent>Delete</TooltipContent>\r\n//                   </Tooltip>\r\n//                 </>\r\n//               )}\r\n//             </div>\r\n//           </li>\r\n//         ))}\r\n//       </ul>\r\n//       {totalPages > 1 && (\r\n//         <div className=\"flex justify-center items-center gap-3 mt-3\">\r\n//           <Button\r\n//             variant=\"ghost\"\r\n//             size=\"icon\"\r\n//             onClick={handlePrevPage}\r\n//             disabled={currentPage === 1}\r\n//             className=\"h-8 w-8 sm:h-9 sm:w-9\"\r\n//           >\r\n//             <ChevronLeft className=\"h-4 w-4 sm:h-5 sm:w-5\" />\r\n//           </Button>\r\n//           <span className=\"text-xs sm:text-sm font-medium\">\r\n//             Page {currentPage} of {totalPages}\r\n//           </span>\r\n//           <Button\r\n//             variant=\"ghost\"\r\n//             size=\"icon\"\r\n//             onClick={handleNextPage}\r\n//             disabled={currentPage === totalPages}\r\n//             className=\"h-8 w-8 sm:h-9 sm:w-9\"\r\n//           >\r\n//             <ChevronRight className=\"h-4 w-4 sm:h-5 sm:w-5\" />\r\n//           </Button>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* View Subtask Modal */}\r\n//       {selectedSubtask && (\r\n//         <Dialog open={openView} onOpenChange={setOpenView}>\r\n//           <DialogContent>\r\n//             <DialogHeader>\r\n//               <DialogTitle className=\"flex items-center\">\r\n//                 <Eye className=\"mr-2 h-4 w-4 sm:h-5 sm:w-5 text-blue-500\" />\r\n//                 View Subtask\r\n//               </DialogTitle>\r\n//             </DialogHeader>\r\n//             <div className=\"space-y-3\">\r\n//               <div>\r\n//                 <span className=\"font-medium text-xs sm:text-sm\">Title:</span>\r\n//                 <p className=\"mt-1 text-xs sm:text-sm\">{selectedSubtask.title}</p>\r\n//               </div>\r\n//               <div>\r\n//                 <span className=\"font-medium text-xs sm:text-sm\">Status:</span>\r\n//                 <Badge variant={getStatusVariant(selectedSubtask.status)} className=\"ml-2 text-xs sm:text-sm\">\r\n//                   {selectedSubtask.status}\r\n//                 </Badge>\r\n//               </div>\r\n//             </div>\r\n//           </DialogContent>\r\n//         </Dialog>\r\n//       )}\r\n\r\n//       {/* Create, Edit, Delete Modals */}\r\n//       {/* <CreateSubtaskModal\r\n//         open={openAdd}\r\n//         setOpen={setOpenAdd}\r\n//         subtasks={subtasks}\r\n//         setSubtasks={setSubtasks}\r\n//         isTaskClosed={isTaskClosed}\r\n//         setCurrentPage={setCurrentPage}\r\n//       /> */}\r\n//       {selectedSubtask && (\r\n//         <EditSubtaskModal\r\n//           open={openEdit}\r\n//           setOpen={setOpenEdit}\r\n//           subtask={selectedSubtask}\r\n//           subtasks={subtasks}\r\n//           setSubtasks={setSubtasks}\r\n//           isTaskClosed={isTaskClosed}\r\n//         />\r\n//       )}\r\n//       {selectedSubtask && (\r\n//         <DeleteSubtaskModal\r\n//           open={openDelete}\r\n//           setOpen={setOpenDelete}\r\n//           subtask={selectedSubtask}\r\n//           subtasks={subtasks}\r\n//           setSubtasks={setSubtasks}\r\n//           isTaskClosed={isTaskClosed}\r\n//           currentPage={currentPage}\r\n//           setCurrentPage={setCurrentPage}\r\n//           currentSubtasks={currentSubtasks}\r\n//         />\r\n//       )}\r\n//     </section>\r\n//   );\r\n// };\r\n\r\n// export default SubtaskList;\r\n\r\n\r\n\r\n\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 290, "column": 0}, "map": {"version":3,"sources":["file:///C:/Dev%20Directory/Blueprints/blueprintfro-v1/src/components/ui/dialog.jsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\r\nimport { XIcon } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Dialog({\r\n  ...props\r\n}) {\r\n  return <DialogPrimitive.Root data-slot=\"dialog\" {...props} />;\r\n}\r\n\r\nfunction DialogTrigger({\r\n  ...props\r\n}) {\r\n  return <DialogPrimitive.Trigger data-slot=\"dialog-trigger\" {...props} />;\r\n}\r\n\r\nfunction DialogPortal({\r\n  ...props\r\n}) {\r\n  return <DialogPrimitive.Portal data-slot=\"dialog-portal\" {...props} />;\r\n}\r\n\r\nfunction DialogClose({\r\n  ...props\r\n}) {\r\n  return <DialogPrimitive.Close data-slot=\"dialog-close\" {...props} />;\r\n}\r\n\r\nfunction DialogOverlay({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    <DialogPrimitive.Overlay\r\n      data-slot=\"dialog-overlay\"\r\n      className={cn(\r\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50\",\r\n        className\r\n      )}\r\n      {...props} />\r\n  );\r\n}\r\n\r\nfunction DialogContent({\r\n  className,\r\n  children,\r\n  showCloseButton = true,\r\n  ...props\r\n}) {\r\n  return (\r\n    <DialogPortal data-slot=\"dialog-portal\">\r\n      <DialogOverlay />\r\n      <DialogPrimitive.Content\r\n        data-slot=\"dialog-content\"\r\n        className={cn(\r\n          \"bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg\",\r\n          className\r\n        )}\r\n        {...props}>\r\n        {children}\r\n        {showCloseButton && (\r\n          <DialogPrimitive.Close\r\n            data-slot=\"dialog-close\"\r\n            className=\"ring-offset-background focus:ring-ring data-[state=open]:bg-accent data-[state=open]:text-muted-foreground absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\">\r\n            <XIcon />\r\n            <span className=\"sr-only\">Close</span>\r\n          </DialogPrimitive.Close>\r\n        )}\r\n      </DialogPrimitive.Content>\r\n    </DialogPortal>\r\n  );\r\n}\r\n\r\nfunction DialogHeader({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    <div\r\n      data-slot=\"dialog-header\"\r\n      className={cn(\"flex flex-col gap-2 text-center sm:text-left\", className)}\r\n      {...props} />\r\n  );\r\n}\r\n\r\nfunction DialogFooter({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    <div\r\n      data-slot=\"dialog-footer\"\r\n      className={cn(\"flex flex-col-reverse gap-2 sm:flex-row sm:justify-end\", className)}\r\n      {...props} />\r\n  );\r\n}\r\n\r\nfunction DialogTitle({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    <DialogPrimitive.Title\r\n      data-slot=\"dialog-title\"\r\n      className={cn(\"text-lg leading-none font-semibold\", className)}\r\n      {...props} />\r\n  );\r\n}\r\n\r\nfunction DialogDescription({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    <DialogPrimitive.Description\r\n      data-slot=\"dialog-description\"\r\n      className={cn(\"text-muted-foreground text-sm\", className)}\r\n      {...props} />\r\n  );\r\n}\r\n\r\nexport {\r\n  Dialog,\r\n  DialogClose,\r\n  DialogContent,\r\n  DialogDescription,\r\n  DialogFooter,\r\n  DialogHeader,\r\n  DialogOverlay,\r\n  DialogPortal,\r\n  DialogTitle,\r\n  DialogTrigger,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,SAAS,OAAO,EACd,GAAG,OACJ;IACC,qBAAO,6LAAC,qKAAA,CAAA,OAAoB;QAAC,aAAU;QAAU,GAAG,KAAK;;;;;;AAC3D;KAJS;AAMT,SAAS,cAAc,EACrB,GAAG,OACJ;IACC,qBAAO,6LAAC,qKAAA,CAAA,UAAuB;QAAC,aAAU;QAAkB,GAAG,KAAK;;;;;;AACtE;MAJS;AAMT,SAAS,aAAa,EACpB,GAAG,OACJ;IACC,qBAAO,6LAAC,qKAAA,CAAA,SAAsB;QAAC,aAAU;QAAiB,GAAG,KAAK;;;;;;AACpE;MAJS;AAMT,SAAS,YAAY,EACnB,GAAG,OACJ;IACC,qBAAO,6LAAC,qKAAA,CAAA,QAAqB;QAAC,aAAU;QAAgB,GAAG,KAAK;;;;;;AAClE;MAJS;AAMT,SAAS,cAAc,EACrB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,6LAAC,qKAAA,CAAA,UAAuB;QACtB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;AAEf;MAbS;AAeT,SAAS,cAAc,EACrB,SAAS,EACT,QAAQ,EACR,kBAAkB,IAAI,EACtB,GAAG,OACJ;IACC,qBACE,6LAAC;QAAa,aAAU;;0BACtB,6LAAC;;;;;0BACD,6LAAC,qKAAA,CAAA,UAAuB;gBACtB,aAAU;gBACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+WACA;gBAED,GAAG,KAAK;;oBACR;oBACA,iCACC,6LAAC,qKAAA,CAAA,QAAqB;wBACpB,aAAU;wBACV,WAAU;;0CACV,6LAAC,mMAAA,CAAA,QAAK;;;;;0CACN,6LAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAMtC;MA5BS;AA8BT,SAAS,aAAa,EACpB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAEf;MAVS;AAYT,SAAS,aAAa,EACpB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,0DAA0D;QACvE,GAAG,KAAK;;;;;;AAEf;MAVS;AAYT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,6LAAC,qKAAA,CAAA,QAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAEf;MAVS;AAYT,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,6LAAC,qKAAA,CAAA,cAA2B;QAC1B,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAEf;MAVS","debugId":null}},
    {"offset": {"line": 490, "column": 0}, "map": {"version":3,"sources":["file:///C:/Dev%20Directory/Blueprints/blueprintfro-v1/src/modules/Tasks/sub-task/CloseTaskModal.jsx"],"sourcesContent":["import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogClose } from '@/components/ui/dialog';\r\nimport { Button } from '@/components/ui/button';\r\nimport { XCircle } from 'lucide-react';\r\n\r\nconst CloseTaskModal = ({ open, setOpen, handleCloseTask, isTaskClosed, allClosed }) => {\r\n  return (\r\n    <Dialog open={open} onOpenChange={setOpen}>\r\n      <DialogContent>\r\n        <DialogHeader>\r\n          <DialogTitle className=\"flex items-center\">\r\n            <XCircle className=\"mr-2 h-4 w-4 sm:h-5 sm:w-5 text-green-500\" />\r\n            Close Task\r\n          </DialogTitle>\r\n        </DialogHeader>\r\n        <p className=\"text-xs sm:text-sm\">Are you sure you want to mark this task as closed?</p>\r\n        <div className=\"flex justify-end gap-2 mt-3\">\r\n          <DialogClose asChild>\r\n            <Button variant=\"outline\" className=\"text-xs sm:text-sm h-8 sm:h-9\">Cancel</Button>\r\n          </DialogClose>\r\n          <Button\r\n            onClick={handleCloseTask}\r\n            disabled={isTaskClosed || !allClosed}\r\n            className=\"bg-green-600 hover:bg-green-700 text-xs sm:text-sm h-8 sm:h-9\"\r\n          >\r\n            Confirm\r\n          </Button>\r\n        </div>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default CloseTaskModal;"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;AAEA,MAAM,iBAAiB,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,eAAe,EAAE,YAAY,EAAE,SAAS,EAAE;IACjF,qBACE,6LAAC,qIAAA,CAAA,SAAM;QAAC,MAAM;QAAM,cAAc;kBAChC,cAAA,6LAAC,qIAAA,CAAA,gBAAa;;8BACZ,6LAAC,qIAAA,CAAA,eAAY;8BACX,cAAA,6LAAC,qIAAA,CAAA,cAAW;wBAAC,WAAU;;0CACrB,6LAAC,+MAAA,CAAA,UAAO;gCAAC,WAAU;;;;;;4BAA8C;;;;;;;;;;;;8BAIrE,6LAAC;oBAAE,WAAU;8BAAqB;;;;;;8BAClC,6LAAC;oBAAI,WAAU;;sCACb,6LAAC,qIAAA,CAAA,cAAW;4BAAC,OAAO;sCAClB,cAAA,6LAAC,qIAAA,CAAA,SAAM;gCAAC,SAAQ;gCAAU,WAAU;0CAAgC;;;;;;;;;;;sCAEtE,6LAAC,qIAAA,CAAA,SAAM;4BACL,SAAS;4BACT,UAAU,gBAAgB,CAAC;4BAC3B,WAAU;sCACX;;;;;;;;;;;;;;;;;;;;;;;AAOX;KA1BM;uCA4BS","debugId":null}},
    {"offset": {"line": 598, "column": 0}, "map": {"version":3,"sources":["file:///C:/Dev%20Directory/Blueprints/blueprintfro-v1/src/components/ui/textarea.jsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Textarea({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    <textarea\r\n      data-slot=\"textarea\"\r\n      className={cn(\r\n        \"border-input placeholder:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 flex field-sizing-content min-h-16 w-full rounded-md border bg-transparent px-3 py-2 text-base shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\r\n        className\r\n      )}\r\n      {...props} />\r\n  );\r\n}\r\n\r\nexport { Textarea }\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACJ;IACC,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,ucACA;QAED,GAAG,KAAK;;;;;;AAEf;KAbS","debugId":null}},
    {"offset": {"line": 631, "column": 0}, "map": {"version":3,"sources":["file:///C:/Dev%20Directory/Blueprints/blueprintfro-v1/src/modules/Tasks/sub-task/ReportBugModal.jsx"],"sourcesContent":["import { useState } from 'react';\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogHeader,\r\n  DialogTitle,\r\n  DialogClose,\r\n} from '@/components/ui/dialog';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Textarea } from '@/components/ui/textarea';\r\nimport { Bug } from 'lucide-react';\r\n\r\nconst ReportBugModal = ({ onClose }) => {\r\n  const isTaskClosed = false; // You can pass this as a prop if needed\r\n  const [open, setOpen] = useState(true); // Open by default\r\n  const [bugTitle, setBugTitle] = useState('');\r\n  const [bugDescription, setBugDescription] = useState('');\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    onClose();\r\n  };\r\n\r\n  const handleReportBug = () => {\r\n    if (isTaskClosed || !bugTitle.trim() || !bugDescription.trim()) return;\r\n\r\n    // Handle bug submission logic here\r\n    alert(`Bug reported: ${bugTitle} - ${bugDescription}`);\r\n\r\n    setBugTitle('');\r\n    setBugDescription('');\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onOpenChange={(openState) => {\r\n      setOpen(openState);\r\n      if (!openState) {\r\n        onClose();\r\n      }\r\n    }}>\r\n      <DialogContent>\r\n        <DialogHeader>\r\n          <div className=\"flex items-center justify-between\">\r\n            <DialogTitle className=\"flex items-center\">\r\n              <Bug className=\"mr-2 h-4 w-4 sm:h-5 sm:w-5 text-red-500\" />\r\n              Report Bug\r\n            </DialogTitle>\r\n           \r\n          </div>\r\n        </DialogHeader>\r\n        <div className=\"space-y-4\">\r\n          <div>\r\n            <label className=\"font-medium text-xs sm:text-sm\">\r\n              Bug Title:\r\n            </label>\r\n            <Input\r\n              value={bugTitle}\r\n              onChange={(e) => setBugTitle(e.target.value)}\r\n              className=\"mt-1 text-xs sm:text-sm\"\r\n              disabled={isTaskClosed}\r\n              placeholder=\"Enter bug title\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <label className=\"font-medium text-xs sm:text-sm\">\r\n              Description:\r\n            </label>\r\n            <Textarea\r\n              value={bugDescription}\r\n              onChange={(e) => setBugDescription(e.target.value)}\r\n              className=\"mt-1 text-xs sm:text-sm\"\r\n              disabled={isTaskClosed}\r\n              placeholder=\"Describe the bug\"\r\n            />\r\n          </div>\r\n          <div className=\"flex justify-end space-x-2\">\r\n            <Button variant=\"outline\" onClick={handleClose}>\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              onClick={handleReportBug}\r\n              disabled={isTaskClosed || !bugTitle.trim() || !bugDescription.trim()}\r\n              className=\"bg-red-600 hover:bg-red-700 text-xs sm:text-sm h-8 sm:h-9\"\r\n            >\r\n              Submit Bug Report\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ReportBugModal;\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AAOA;AACA;AACA;AACA;;;;;;;;;AAEA,MAAM,iBAAiB,CAAC,EAAE,OAAO,EAAE;;IACjC,MAAM,eAAe,OAAO,wCAAwC;IACpE,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,OAAO,kBAAkB;IAC1D,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAErD,MAAM,cAAc;QAClB,QAAQ;QACR;IACF;IAEA,MAAM,kBAAkB;QACtB,IAAI,gBAAgB,CAAC,SAAS,IAAI,MAAM,CAAC,eAAe,IAAI,IAAI;QAEhE,mCAAmC;QACnC,MAAM,CAAC,cAAc,EAAE,SAAS,GAAG,EAAE,gBAAgB;QAErD,YAAY;QACZ,kBAAkB;QAClB;IACF;IAEA,qBACE,6LAAC,qIAAA,CAAA,SAAM;QAAC,MAAM;QAAM,cAAc,CAAC;YACjC,QAAQ;YACR,IAAI,CAAC,WAAW;gBACd;YACF;QACF;kBACE,cAAA,6LAAC,qIAAA,CAAA,gBAAa;;8BACZ,6LAAC,qIAAA,CAAA,eAAY;8BACX,cAAA,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC,qIAAA,CAAA,cAAW;4BAAC,WAAU;;8CACrB,6LAAC,mMAAA,CAAA,MAAG;oCAAC,WAAU;;;;;;gCAA4C;;;;;;;;;;;;;;;;;8BAMjE,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;;8CACC,6LAAC;oCAAM,WAAU;8CAAiC;;;;;;8CAGlD,6LAAC,oIAAA,CAAA,QAAK;oCACJ,OAAO;oCACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;oCAC3C,WAAU;oCACV,UAAU;oCACV,aAAY;;;;;;;;;;;;sCAGhB,6LAAC;;8CACC,6LAAC;oCAAM,WAAU;8CAAiC;;;;;;8CAGlD,6LAAC,uIAAA,CAAA,WAAQ;oCACP,OAAO;oCACP,UAAU,CAAC,IAAM,kBAAkB,EAAE,MAAM,CAAC,KAAK;oCACjD,WAAU;oCACV,UAAU;oCACV,aAAY;;;;;;;;;;;;sCAGhB,6LAAC;4BAAI,WAAU;;8CACb,6LAAC,qIAAA,CAAA,SAAM;oCAAC,SAAQ;oCAAU,SAAS;8CAAa;;;;;;8CAGhD,6LAAC,qIAAA,CAAA,SAAM;oCACL,SAAS;oCACT,UAAU,gBAAgB,CAAC,SAAS,IAAI,MAAM,CAAC,eAAe,IAAI;oCAClE,WAAU;8CACX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQb;GAhFM;KAAA;uCAkFS","debugId":null}},
    {"offset": {"line": 824, "column": 0}, "map": {"version":3,"sources":["file:///C:/Dev%20Directory/Blueprints/blueprintfro-v1/src/utils/formatDate.js"],"sourcesContent":["// lib/formatRange.js\r\nexport function formatRange(start, end) {\r\n  const options = { month: 'short', day: 'numeric' };\r\n  const startStr = start.toLocaleDateString(undefined, options);\r\n  const endStr = end.toLocaleDateString(undefined, options);\r\n\r\n  return `${startStr} – ${endStr}`;\r\n}\r\n\r\n\r\n\r\n\r\n// utils/date.js\r\nexport function formatDateUTC(dateString) {\r\n    if (!dateString) return '';\r\n    return new Date(dateString).toLocaleDateString('en-GB', {\r\n        timeZone: 'UTC',\r\n        day: '2-digit',\r\n        month: 'short',\r\n        year: 'numeric'\r\n    });\r\n}\r\n"],"names":[],"mappings":"AAAA,qBAAqB;;;;;AACd,SAAS,YAAY,KAAK,EAAE,GAAG;IACpC,MAAM,UAAU;QAAE,OAAO;QAAS,KAAK;IAAU;IACjD,MAAM,WAAW,MAAM,kBAAkB,CAAC,WAAW;IACrD,MAAM,SAAS,IAAI,kBAAkB,CAAC,WAAW;IAEjD,OAAO,GAAG,SAAS,GAAG,EAAE,QAAQ;AAClC;AAMO,SAAS,cAAc,UAAU;IACpC,IAAI,CAAC,YAAY,OAAO;IACxB,OAAO,IAAI,KAAK,YAAY,kBAAkB,CAAC,SAAS;QACpD,UAAU;QACV,KAAK;QACL,OAAO;QACP,MAAM;IACV;AACJ","debugId":null}},
    {"offset": {"line": 856, "column": 0}, "map": {"version":3,"sources":["file:///C:/Dev%20Directory/Blueprints/blueprintfro-v1/src/modules/Tasks/task/ViewTask.jsx"],"sourcesContent":["// \"use client\";\r\n\r\n// import { useState } from 'react';\r\n// import {\r\n//   Card,\r\n//   CardContent,\r\n//   CardHeader,\r\n//   CardTitle,\r\n// } from '@/components/ui/card';\r\n// import { Badge } from '@/components/ui/badge';\r\n// import { Separator } from '@/components/ui/separator';\r\n// import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from '@/components/ui/tooltip';\r\n// import {\r\n//   User,\r\n//   Mail,\r\n//   Flag,\r\n//   Folder,\r\n//   Hash,\r\n//   ListTodo,\r\n//   History,\r\n//   AlertCircle,\r\n//   ClipboardList,\r\n//   Info as InfoIcon,\r\n// } from 'lucide-react';\r\n// import SubtaskList from '@/modules/Tasks/sub-task/SubTaskList';\r\n// import CloseTaskModal from '@/modules/Tasks/sub-task/CloseTaskModal';\r\n// import ReportBugModal from '@/modules/Tasks/sub-task/ReportBugModal';\r\n// import { useParams } from 'next/navigation';\r\n\r\n// const TaskView = () => {\r\n\r\n//     const params = useParams();\r\n//     const task_id = params.id;\r\n\r\n//   // Task data\r\n//   const [task, setTask] = useState({\r\n//     id: 'TASK-123',\r\n//     title: 'Implement Feature X',\r\n//     description: 'Develop and integrate the new feature into the main application.',\r\n//     priority: 'High',\r\n//     project: 'Project Alpha',\r\n//     status: 'Open',\r\n//   });\r\n\r\n//   // Owner data\r\n//   const [owner] = useState({\r\n//     name: 'John Doe',\r\n//     role: 'Developer',\r\n//     email: 'john.doe@example.com',\r\n//   });\r\n\r\n//   // Review history\r\n//   const [history] = useState([\r\n//     { date: '2025-09-01', message: 'Initial review: Approved' },\r\n//     { date: '2025-09-05', message: 'Progress update: 30% complete' },\r\n//     { date: '2025-09-10', message: 'Bug found and reported' },\r\n//   ]);\r\n\r\n//   // Modal states\r\n//   const [openCloseTask, setOpenCloseTask] = useState(true); // Open by default for demo\r\n//   const isTaskClosed = task.status === 'Closed';\r\n//   // const closedSubtasks = subtasks.filter((st) => st.status === 'Closed').length;\r\n//   // const allClosed = closedSubtasks === subtasks.length;\r\n\r\n//   // Handlers\r\n//   const handleCloseTask = () => {\r\n//     if (isTaskClosed || !allClosed) return;\r\n//     setTask({ ...task, status: 'Closed' });\r\n//     setOpenCloseTask(false);\r\n//     alert('Task closed');\r\n//   };\r\n\r\n//   const getPriorityVariant = (priority) => {\r\n//     switch (priority) {\r\n//       case 'High':\r\n//         return 'destructive';\r\n//       case 'Medium':\r\n//         return 'default';\r\n//       case 'Low':\r\n//         return 'secondary';\r\n//       default:\r\n//         return 'outline';\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <TooltipProvider>\r\n//       <div className=\"p-3 sm:p-4\">\r\n//         <Card className=\"shadow-lg\">\r\n//           <CardHeader>\r\n//             <CardTitle className=\"flex items-center justify-between text-lg sm:text-xl\">\r\n//               <div className=\"flex items-center\">\r\n//                 <ClipboardList className=\"mr-2 h-5 w-5 text-primary\" />\r\n//                 {task.title}\r\n//               </div>\r\n//               <Badge variant={isTaskClosed ? 'destructive' : 'default'} className=\"ml-2 text-xs sm:text-sm\">\r\n//                 {task.status}\r\n//               </Badge>\r\n//             </CardTitle>\r\n//           </CardHeader>\r\n//           <CardContent>\r\n//             <div className=\"grid grid-cols-1 lg:grid-cols-[4fr_1fr] gap-3 sm:gap-4 lg:gap-6\">\r\n//               {/* Left Column (80% - Task Details and Subtasks) */}\r\n//               <div className=\"space-y-4\">\r\n//                 {/* Task Details Section */}\r\n//                 <section>\r\n//                   <h3 className=\"text-base sm:text-lg font-semibold mb-2 flex items-center\">\r\n//                     <InfoIcon className=\"mr-2 h-4 w-4 sm:h-5 sm:w-5 text-blue-500\" />\r\n//                     Task Details\r\n//                   </h3>\r\n//                   <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3\">\r\n//                     <div className=\"flex items-center\">\r\n//                       <Hash className=\"mr-2 h-3 w-3 sm:h-4 sm:w-4 text-gray-500\" />\r\n//                       <span className=\"font-medium text-xs sm:text-sm\">{task.id}</span>\r\n//                     </div>\r\n//                     <div className=\"flex items-center\">\r\n//                       <Folder className=\"mr-2 h-3 w-3 sm:h-4 sm:w-4 text-gray-500\" />\r\n//                       <span className=\"font-medium text-xs sm:text-sm\">{task.project}</span>\r\n//                     </div>\r\n//                     <div className=\"flex items-start sm:col-span-2\">\r\n//                       <AlertCircle className=\"mr-2 h-3 w-3 sm:h-4 sm:w-4 text-gray-500 mt-1\" />\r\n//                       <span className=\"font-medium text-xs sm:text-sm\">{task.description}</span>\r\n//                     </div>\r\n//                     <div className=\"flex items-center\">\r\n//                       <Flag className=\"mr-2 h-3 w-3 sm:h-4 sm:w-4 text-gray-500\" />\r\n//                       <Badge variant={getPriorityVariant(task.priority)} className=\"text-xs sm:text-sm\">\r\n//                         {task.priority}\r\n//                       </Badge>\r\n//                     </div>\r\n//                   </div>\r\n//                 </section>\r\n\r\n//                 <Separator className=\"my-3\" />\r\n\r\n//                 {/* Subtask List Component */}\r\n//                 <SubtaskList\r\n\r\n//                   isTaskClosed={isTaskClosed}\r\n//                 />\r\n//               </div>\r\n\r\n//               {/* Right Column (20% - Owner Details, Actions, History) */}\r\n//               <div className=\"space-y-4\">\r\n//                 <section>\r\n//                   <h3 className=\"text-base sm:text-lg font-semibold mb-2 flex items-center\">\r\n//                     <User className=\"mr-2 h-4 w-4 sm:h-5 sm:w-5 text-purple-500\" />\r\n//                     Task Management\r\n//                   </h3>\r\n//                   <div className=\"grid grid-cols-1 gap-3\">\r\n//                     {/* Owner Details */}\r\n//                     <div className=\"space-y-2\">\r\n//                       <h4 className=\"text-xs sm:text-sm font-semibold text-gray-700\">Owner Details</h4>\r\n//                       <div className=\"flex items-center\">\r\n//                         <User className=\"mr-2 h-3 w-3 sm:h-4 sm:w-4 text-gray-500\" />\r\n//                         <span className=\"font-medium text-xs sm:text-sm\">{owner.name}</span>\r\n//                       </div>\r\n//                       <div className=\"flex items-center\">\r\n//                         <AlertCircle className=\"mr-2 h-3 w-3 sm:h-4 sm:w-4 text-gray-500\" />\r\n//                         <span className=\"font-medium text-xs sm:text-sm\">{owner.role}</span>\r\n//                       </div>\r\n//                       <div className=\"flex items-center\">\r\n//                         <Mail className=\"mr-2 h-3 w-3 sm:h-4 sm:w-4 text-gray-500\" />\r\n//                         <span className=\"font-medium text-xs sm:text-sm\">{owner.email}</span>\r\n//                       </div>\r\n//                     </div>\r\n//                     {/* Actions */}\r\n//                     <div className=\"space-y-2\">\r\n//                       <h4 className=\"text-xs sm:text-sm font-semibold text-gray-700\">Actions</h4>\r\n//                       <div className=\"flex flex-col gap-2\">\r\n//                         <Tooltip>\r\n//                           <TooltipTrigger asChild>\r\n//                             <button\r\n//                               className={`w-full text-xs sm:text-sm h-8 sm:h-9 px-3 rounded-md flex items-center justify-center bg-green-600 text-white hover:bg-green-700 opacity-50 cursor-not-allowed' : ''}`}\r\n//                               onClick={() => setOpenCloseTask(true)}\r\n//                               // disabled={isTaskClosed || !allClosed}\r\n//                             >\r\n//                               <ListTodo className=\"mr-1 h-3 w-3 sm:h-4 sm:w-4\" /> Mark as Closed\r\n//                             </button>\r\n//                           </TooltipTrigger>\r\n//                           <TooltipContent>\r\n//                             { !isTaskClosed ? 'Close the task' : isTaskClosed ? 'Task is already closed' : 'All subtasks must be closed first'}\r\n//                             {/* {allClosed && !isTaskClosed ? 'Close the task' : isTaskClosed ? 'Task is already closed' : 'All subtasks must be closed first'} */}\r\n//                           </TooltipContent>\r\n//                         </Tooltip>\r\n//                         <ReportBugModal isTaskClosed={isTaskClosed} />\r\n//                       </div>\r\n//                     </div>\r\n//                     {/* Task Review History */}\r\n//                     <div className=\"space-y-2\">\r\n//                       <h4 className=\"text-xs sm:text-sm font-semibold text-gray-700\">Review History</h4>\r\n//                       <ul className=\"space-y-2 max-h-60 sm:max-h-72 overflow-y-auto\">\r\n//                         {history.map((item, index) => (\r\n//                           <li\r\n//                             key={index}\r\n//                             className=\"p-2 sm:p-3 border rounded-lg bg-muted/50 transition-all hover:shadow-md\"\r\n//                           >\r\n//                             <div className=\"flex items-center\">\r\n//                               <History className=\"mr-2 h-3 w-3 sm:h-4 sm:w-4 text-gray-500\" />\r\n//                               <span className=\"font-medium text-xs sm:text-sm\">{item.date}</span>\r\n//                             </div>\r\n//                             <p className=\"text-xs sm:text-sm mt-1\">{item.message}</p>\r\n//                           </li>\r\n//                         ))}\r\n//                       </ul>\r\n//                     </div>\r\n//                   </div>\r\n//                 </section>\r\n//               </div>\r\n//             </div>\r\n//           </CardContent>\r\n//         </Card>\r\n\r\n//       </div>\r\n//     </TooltipProvider>\r\n//   );\r\n// };\r\n\r\n// export default TaskView;\r\n\r\n\r\n\r\n\"use client\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { useParams } from \"next/navigation\";\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Separator } from \"@/components/ui/separator\";\r\nimport {\r\n  Tooltip,\r\n  TooltipContent,\r\n  TooltipProvider,\r\n  TooltipTrigger,\r\n} from \"@/components/ui/tooltip\";\r\nimport {\r\n  User,\r\n  Mail,\r\n  Flag,\r\n  Folder,\r\n  Hash,\r\n  ListTodo,\r\n  History,\r\n  AlertCircle,\r\n  ClipboardList,\r\n  Info as InfoIcon,\r\n  FileText,\r\n  BugIcon,\r\n} from \"lucide-react\";\r\n\r\nimport SubtaskList from \"@/modules/Tasks/sub-task/SubTaskList\";\r\nimport CloseTaskModal from \"@/modules/Tasks/sub-task/CloseTaskModal\";\r\nimport ReportBugModal from \"@/modules/Tasks/sub-task/ReportBugModal\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useCurrentUser } from \"@/hooks/useCurrentUser\";\r\nimport { fetchTaskById } from \"@/features/taskSlice\";\r\nimport { formatDateUTC } from \"@/utils/formatDate\";\r\nimport { Button } from \"@/components/ui/button\";\r\n\r\nconst reviewStatusColors = {\r\n  Approved: \"bg-green-100 text-green-800 border-green-200\",\r\n  Rejected: \"bg-red-100 text-red-800 border-red-200\",\r\n  Pending: \"bg-yellow-100 text-yellow-800 border-yellow-200\",\r\n  Resolved: \"bg-blue-100 text-blue-800 border-blue-200\",\r\n};\r\nconst TaskView = () => {\r\n  const dispatch = useDispatch();\r\n  const params = useParams();\r\n  const task_id = params.id;\r\n\r\n  const task = useSelector((state) => state.task.currentTask);\r\n  const loading = useSelector((state) => state.task.status === \"loading\");\r\n  const error = useSelector((state) => state.task.error);\r\n  const { currentUser } = useCurrentUser(task?.teamLeadId);\r\n  // const { currentUser, isTeamLead } = useCurrentUser(task?.teamLeadId);\r\n// ✅ State for modal visibility\r\n  const [isReportBugOpen, setIsReportBugOpen] = useState(false);\r\n\r\n\r\n  const isTeamLead = task?.teamLeadId === currentUser?.employeeID;\r\n  const canReportBug =\r\n    (isTeamLead ||\r\n      currentUser?.role === \"cpc\" ||\r\n      currentUser?.position === \"Team Lead\") &&\r\n    task?.status === \"Completed\";\r\n\r\n  useEffect(() => {\r\n    if (task_id) {\r\n      dispatch(fetchTaskById(task_id));\r\n    }\r\n  }, [dispatch, task_id]);\r\n  console.log(\"Current Task:\", task_id, task);\r\n\r\n  // Review history\r\n  const [history] = useState([\r\n    { date: \"2025-09-01\", message: \"Initial review: Approved\" },\r\n    { date: \"2025-09-05\", message: \"Progress update: 30% complete\" },\r\n    { date: \"2025-09-10\", message: \"Bug found and reported\" },\r\n  ]);\r\n\r\n  const isTaskClosed = \"Closed\";\r\n  // const isTaskClosed = task.status === 'Closed';\r\n\r\n  const getPriorityVariant = (priority) => {\r\n    switch (priority) {\r\n      case \"High\":\r\n        return \"destructive\";\r\n      case \"Medium\":\r\n        return \"default\";\r\n      case \"Low\":\r\n        return \"secondary\";\r\n      default:\r\n        return \"outline\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TooltipProvider>\r\n      <div className=\"p-3 sm:p-4\">\r\n        <Card className=\"shadow-lg\">\r\n          <CardHeader>\r\n            <CardTitle className=\"flex items-center justify-between text-lg sm:text-xl\">\r\n              <div className=\"flex items-center\">\r\n                <ClipboardList className=\"mr-2 h-5 w-5 text-primary\" />\r\n                {task?.task_id}\r\n              </div>\r\n              <Badge\r\n                variant={isTaskClosed ? \"destructive\" : \"default\"}\r\n                className=\"ml-2 text-xs sm:text-sm\"\r\n              >\r\n                {task?.status}\r\n              </Badge>\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"grid grid-cols-1 lg:grid-cols-[4fr_1fr] gap-3 sm:gap-4 lg:gap-6\">\r\n              {/* Left Column (Task Details & Subtasks) */}\r\n\r\n              <div className=\"space-y-4\">\r\n                <section>\r\n                  <h3 className=\"text-base sm:text-lg font-semibold mb-3 flex items-center\">\r\n                    <InfoIcon className=\"mr-2 h-4 w-4 sm:h-5 sm:w-5 text-blue-500\" />\r\n                    Task Details\r\n                  </h3>\r\n\r\n                  <div className=\"space-y-4\">\r\n                    {/* Row 1: Title */}\r\n                    <div>\r\n                      <label className=\"text-xs sm:text-sm font-medium text-gray-600\">\r\n                        Title\r\n                      </label>\r\n                      <div className=\"flex items-center mt-1\">\r\n                        <span className=\"font-medium text-sm sm:text-base\">\r\n                          {task?.title}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* Row 2: Priority & Project */}\r\n                    <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\r\n                      <div>\r\n                        <label className=\"text-xs sm:text-sm font-medium text-gray-600\">\r\n                          Project\r\n                        </label>\r\n                        <div className=\"flex items-center mt-1\">\r\n                          <span className=\"font-medium text-sm\">\r\n                            {task?.projectName}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"text-xs sm:text-sm font-medium text-gray-600\">\r\n                          Priority\r\n                        </label>\r\n                        <div className=\"flex items-center mt-1\">\r\n                          <Badge\r\n                            variant={getPriorityVariant(task?.priority)}\r\n                            className=\"text-sm\"\r\n                          >\r\n                            {task?.priority}\r\n                          </Badge>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* Row 3: Description */}\r\n                    <div>\r\n                      <label className=\"text-xs sm:text-sm font-medium text-gray-600\">\r\n                        Description\r\n                      </label>\r\n                      <div className=\"flex items-start mt-1\">\r\n                        <AlertCircle className=\"mr-2 h-4 w-4 text-gray-500 mt-1\" />\r\n                        <span className=\"font-medium text-sm\">\r\n                          {task?.description}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </section>\r\n\r\n                <Separator className=\"my-3\" />\r\n\r\n                {/* Subtask List */}\r\n                <SubtaskList isTaskClosed={false}/>\r\n                {/* <SubtaskList isTaskClosed={isTaskClosed}/> */}\r\n              </div>\r\n\r\n              {/* Right Column (Owner, Actions, History) */}\r\n              <div className=\"space-y-4\">\r\n                <section>\r\n                  <h3 className=\"text-base sm:text-lg font-semibold mb-2 flex items-center\">\r\n                    <User className=\"mr-2 h-4 w-4 sm:h-5 sm:w-5 text-purple-500\" />\r\n                    Task Management\r\n                  </h3>\r\n                  <div className=\"grid grid-cols-1 gap-3\">\r\n                    {/* Owner Details */}\r\n                    <div className=\"space-y-2\">\r\n                      <h4 className=\"text-xs sm:text-sm font-semibold text-gray-700\">\r\n                        Owner Details\r\n                      </h4>\r\n                      <div className=\"flex items-center\">\r\n                        <User className=\"mr-2 h-3 w-3 sm:h-4 sm:w-4 text-gray-500\" />\r\n                        <span className=\"font-medium text-xs sm:text-sm\">\r\n                          {task?.assignedToDetails?.memberName}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"flex items-center\">\r\n                        <AlertCircle className=\"mr-2 h-3 w-3 sm:h-4 sm:w-4 text-gray-500\" />\r\n                        <span className=\"font-medium text-xs sm:text-sm\">\r\n                          {task?.assignedBy}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"flex items-center\">\r\n                        <Mail className=\"mr-2 h-3 w-3 sm:h-4 sm:w-4 text-gray-500\" />\r\n                        <span className=\"font-medium text-xs sm:text-sm\">\r\n                          {task?.assignedToDetails?.memberName}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* Actions */}\r\n                    <div className=\"space-y-2\">\r\n                      <h4 className=\"text-xs sm:text-sm font-semibold text-gray-700\">\r\n                        Actions\r\n                      </h4>\r\n                      <div className=\"flex flex-col gap-2\">\r\n                        <Tooltip>\r\n                          <TooltipTrigger asChild>\r\n                            <button\r\n                              className={`w-full text-xs sm:text-sm h-8 sm:h-9 px-3 rounded-md flex items-center justify-center bg-green-600 text-white hover:bg-green-700 opacity-50 cursor-not-allowed`}\r\n                              onClick={() => {}}\r\n                            >\r\n                              <ListTodo className=\"mr-1 h-3 w-3 sm:h-4 sm:w-4\" />{\" \"}\r\n                              Mark as Closed\r\n                            </button>\r\n                          </TooltipTrigger>\r\n                          <TooltipContent>\r\n                            {isTaskClosed\r\n                              ? \"Task is already closed\"\r\n                              : \"Close the task\"}\r\n                          </TooltipContent>\r\n                        </Tooltip>\r\n                        { task?.status === \"Completed\" && (\r\n                          <Button\r\n                          onClick={() => setIsReportBugOpen(true)} // ✅ Open modal on click\r\n                            className=\"bg-blue-600 hover:bg-blue-700 text-white\"\r\n                          >\r\n                            <BugIcon className=\"h-4 w-4\" />\r\n                            Report Bug\r\n                          </Button>\r\n                        )}\r\n                        {/*  Report Bug Modal */}\r\n                        {isReportBugOpen && (\r\n                          <ReportBugModal onClose={() => setIsReportBugOpen(false)} />\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* Review History */}\r\n                    <div className=\"space-y-2\">\r\n                      <h4 className=\"text-xs sm:text-sm font-semibold text-gray-700\">\r\n                        Review History\r\n                      </h4>\r\n\r\n                      {task?.taskHistory && task?.taskHistory.length > 0 ? (\r\n                        <ul className=\"space-y-2\">\r\n                          {task.taskHistory.map((entry, index) => (\r\n                            <li\r\n                              key={index}\r\n                              className=\"bg-white border border-gray-200 rounded-xl px-3 py-2 shadow-sm hover:shadow-md transition-all\"\r\n                            >\r\n                              <div className=\"flex justify-between items-center text-sm\">\r\n                                <span className=\"font-semibold text-gray-800 truncate max-w-[150px]\">\r\n                                  {entry.bugTitle || \"Untitled\"}\r\n                                </span>\r\n\r\n                                <span className=\"text-xs text-gray-500 whitespace-nowrap\">\r\n                                  {entry.timestamp\r\n                                    ? formatDateUTC(entry.timestamp)\r\n                                    : \"N/A\"}\r\n                                </span>\r\n                              </div>\r\n                              <div className=\"flex justify-between items-center text-xs mt-1\">\r\n                                <span className=\"text-gray-600 italic\">\r\n                                  {entry.bugStatus || \"Unknown\"}\r\n                                </span>\r\n                                <span\r\n                                  className={`text-[10px] font-semibold px-2 py-0.5 rounded-full border \r\n                      ${\r\n                        reviewStatusColors[entry.reviewStatus?.toUpperCase()] ||\r\n                        \"bg-gray-100 text-gray-800 border-gray-300\"\r\n                      }`}\r\n                                >\r\n                                  {entry.reviewStatus || \"N/A\"}\r\n                                </span>\r\n                              </div>\r\n                            </li>\r\n                          ))}\r\n                        </ul>\r\n                      ) : (\r\n                        <div className=\"flex items-center justify-center h-[100px] text-gray-600 border border-dashed rounded-lg\">\r\n                          <div className=\"text-center\">\r\n                            <FileText className=\"h-6 w-6 mx-auto mb-2 opacity-50\" />\r\n                            <p className=\"text-sm\">\r\n                              No review history available\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </section>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Modals */}\r\n        <CloseTaskModal />\r\n      </div>\r\n    </TooltipProvider>\r\n  );\r\n};\r\n\r\nexport default TaskView;\r\n"],"names":[],"mappings":"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","debugId":null}}]
}